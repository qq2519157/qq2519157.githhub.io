{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "不忘初心，方得始终",
    "icon": "https://log992.cn/images/favicon.ico",
    "description": "一个简简单单的Android开发",
    "home_page_url": "https://log992.cn",
    "items": [
        {
            "id": "https://log992.cn/android/Android%E7%95%8C%E9%9D%A2%E7%81%B0%E5%8C%96%E5%A4%84%E7%90%86/",
            "url": "https://log992.cn/android/Android%E7%95%8C%E9%9D%A2%E7%81%B0%E5%8C%96%E5%A4%84%E7%90%86/",
            "title": "Android 界面灰化处理",
            "date_published": "2023-07-26T06:50:55.000Z",
            "content_html": "<blockquote>\n<p>在某些特定时刻，我们需要把 app 所有界面变为灰色，在 web 界面中我们可以使用 <code>filter:gray</code>  或者 <code>-webkit-filter: grayscale(100%);</code>  添加灰色滤镜，那么在 app 中该如何实现呢？</p>\n</blockquote>\n<h4 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h4>\n<p>在 APP 中将界面变灰，需要创建一个饱和度为 0 的颜色过滤器（饱和度为 0 时，view 就变成了黑白色），将这个颜色过滤器通过 setLayerType 方法设置到当前 View 上。（此方法会开启此 View 的硬件加速功能）</p>\n<p>因为我们要实现的功能是全局灰度化，所以首先 view 的选型最好是一个根 view，这样我们就不用在每个子 view 上重复操作了，其次我们还要适配 Dialog 和 PopWindow 等 Window 类型的组件，所以我们不能从 Activity 上动心思了，因为 Activity 本质也是一个 Window，所以综上所述，我们将代码的执行时机选在了 WindowManager 的 addView 方法上面，因为不论是 Activity 的创建还是 Dialog 等组件的创建最终都会走到这个方法里面。<br />\n我们只要在 WindowManager 执行 addView 方法时进行 hook，加入我们上面的代码逻辑即可。</p>\n<h4 id=\"实现\"><a class=\"anchor\" href=\"#实现\">#</a> 实现</h4>\n<p>要进行 hook 操作，那么我们就要先确定 hook 点：</p>\n<p>WindowManager 是一个接口类，其实现类为 WindowManagerImpl，而 WindowManagerImpl 中真正实现窗口操作的类为 WindowManagerGlobal，是一个单例类，我们看一下其 addView 的实现：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> view<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ViewGroup<span class=\"token punctuation\">.</span>LayoutParams</span> params<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token class-name\">Display</span> display<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Window</span> parentWindow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>view <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"view must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>display <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"display must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>params <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Params must be WindowManager.LayoutParams\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">final</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span> wparams <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">)</span> params<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parentWindow <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            parentWindow<span class=\"token punctuation\">.</span><span class=\"token function\">adjustLayoutParamsForSubWindow</span><span class=\"token punctuation\">(</span>wparams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// If there's no parent, then hardware acceleration for this view is</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// set from the application's hardware acceleration setting.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>context <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>flags</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                            <span class=\"token operator\">&amp;</span> <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_HARDWARE_ACCELERATED</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                wparams<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">|=</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_HARDWARE_ACCELERATED</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">ViewRootImpl</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">View</span> panelParentView <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// Start watching for system property changes.</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mSystemPropertyUpdater <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                mSystemPropertyUpdater <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> mRoots<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                                mRoots<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadSystemProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token class-name\">SystemProperties</span><span class=\"token punctuation\">.</span><span class=\"token function\">addChangeCallback</span><span class=\"token punctuation\">(</span>mSystemPropertyUpdater<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token function\">findViewLocked</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mDyingViews<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                    <span class=\"token comment\">// Don't wait for MSG_DIE to make it's way through root's queue.</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    mRoots<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">doDie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"View \"</span> <span class=\"token operator\">+</span> view</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                            <span class=\"token operator\">+</span> <span class=\"token string\">\" has already been added to the window manager.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token comment\">// The previous removeView() had not completed executing. Now it has.</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token comment\">// If this is a panel window, then find the window it is being</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token comment\">// attached to for future reference.</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wparams<span class=\"token punctuation\">.</span>type <span class=\"token operator\">>=</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FIRST_SUB_WINDOW</span> <span class=\"token operator\">&amp;&amp;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    wparams<span class=\"token punctuation\">.</span>type <span class=\"token operator\">&lt;=</span> <span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LAST_SUB_WINDOW</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> mViews<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mRoots<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mWindow<span class=\"token punctuation\">.</span><span class=\"token function\">asBinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> wparams<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                        panelParentView <span class=\"token operator\">=</span> mViews<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            root <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ViewRootImpl</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> display<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            view<span class=\"token punctuation\">.</span><span class=\"token function\">setLayoutParams</span><span class=\"token punctuation\">(</span>wparams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            mViews<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            mRoots<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            mParams<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>wparams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token comment\">// do this last because it fires off messages to start doing things</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                root<span class=\"token punctuation\">.</span><span class=\"token function\">setView</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> wparams<span class=\"token punctuation\">,</span> panelParentView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token comment\">// BadTokenException or InvalidDisplayException, clean up.</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token function\">removeViewLocked</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我们最终是要操作 view，可以看到所有的 view 都是添加到 <code>mViews</code>  这个字段中，那我们可以 hook 这个 list，在其添加 view 的时候，我们就调用上面的代码将其置灰，那如何才能感知到 view 的添加操作呢？</p>\n<ol>\n<li>\n<p>实现具有数据感知能力的 list:</p>\n<p>我们可以自定义一个数组，让其继承于 ArrayList，在其执行添加删除操作时，通过回调进行通知，具体实现如下：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObservableArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OnListChangeListener</span><span class=\"token punctuation\">></span></span> mListeners <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addOnListChangedListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OnListChangeListener</span> listener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mListeners <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            mListeners<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeOnListChangedListener</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OnListChangeListener</span> listener<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mListeners <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            mListeners<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">notifyAdd</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">notifyAdd</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> collection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">int</span> oldSize <span class=\"token operator\">=</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">boolean</span> added <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>collection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>added<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">notifyAdd</span><span class=\"token punctuation\">(</span>oldSize<span class=\"token punctuation\">,</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> oldSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> added<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">int</span> oldSize <span class=\"token operator\">=</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>oldSize <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token function\">notifyRemove</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> oldSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token class-name\">T</span> val <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">notifyRemove</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">T</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token class-name\">T</span> val <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mListeners <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OnListChangeListener</span> listener <span class=\"token operator\">:</span> mListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                listener<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">return</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fromIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> toIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeRange</span><span class=\"token punctuation\">(</span>fromIndex<span class=\"token punctuation\">,</span> toIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token function\">notifyRemove</span><span class=\"token punctuation\">(</span>fromIndex<span class=\"token punctuation\">,</span> toIndex <span class=\"token operator\">-</span> fromIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">notifyAdd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mListeners <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OnListChangeListener</span> listener <span class=\"token operator\">:</span> mListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                listener<span class=\"token punctuation\">.</span><span class=\"token function\">onAdd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">notifyRemove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mListeners <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">OnListChangeListener</span> listener <span class=\"token operator\">:</span> mListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                listener<span class=\"token punctuation\">.</span><span class=\"token function\">onRemove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">OnListChangeListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onAdd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onRemove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>hook 操作</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GlobalGray</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @param enable 是否开启全局灰色调</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> enable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>enable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">// 灰色调 Paint</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Paint</span> mPaint <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">ColorMatrix</span> mColorMatrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ColorMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            mColorMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">setSaturation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            mPaint<span class=\"token punctuation\">.</span><span class=\"token function\">setColorFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ColorMatrixColorFilter</span><span class=\"token punctuation\">(</span>mColorMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 反射获取 windowManagerGlobal</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PrivateApi\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> windowManagerGlobal <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.view.WindowManagerGlobal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DiscouragedPrivateApi\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span> getInstanceMethod <span class=\"token operator\">=</span> windowManagerGlobal<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getInstance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            getInstanceMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">Object</span> windowManagerGlobalInstance <span class=\"token operator\">=</span> getInstanceMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>windowManagerGlobal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">// 反射获取 mViews</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\">Field</span> mViewsField <span class=\"token operator\">=</span> windowManagerGlobal<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mViews\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            mViewsField<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">Object</span> mViewsObject <span class=\"token operator\">=</span> mViewsField<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>windowManagerGlobalInstance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token comment\">// 创建具有数据感知能力的 ObservableArrayList</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token class-name\">ObservableArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">></span></span> observerArrayList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObservableArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            observerArrayList<span class=\"token punctuation\">.</span><span class=\"token function\">addOnListChangedListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ObservableArrayList<span class=\"token punctuation\">.</span>OnListChangeListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onAdd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token class-name\">View</span> view <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">)</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>view <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                        view<span class=\"token punctuation\">.</span><span class=\"token function\">setLayerType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LAYER_TYPE_HARDWARE</span><span class=\"token punctuation\">,</span> mPaint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onRemove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\">// 将原有的数据添加到新创建的 list</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            observerArrayList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> mViewsObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token comment\">// 替换掉原有的 mViews</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            mViewsField<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>windowManagerGlobalInstance<span class=\"token punctuation\">,</span> observerArrayList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后，只需在 Application 的 onCreate 中调用上述代码进行 hook 即可。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">GlobalGray</span><span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "Android",
                "一键灰化"
            ]
        },
        {
            "id": "https://log992.cn/play/autMan%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/",
            "url": "https://log992.cn/play/autMan%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/",
            "title": "autMan命令汇总",
            "date_published": "2023-06-09T02:29:55.000Z",
            "content_html": "<h4 id=\"基本配置命令\"><a class=\"anchor\" href=\"#基本配置命令\">#</a> 基本配置命令</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>【基本设置】</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set autMan name 奥特曼 #设置奥特曼机器人名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set autMan port 8080 #设置奥特曼http服务端口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>set autMan duration 5 #奥特曼消息撤回等待时间，单位秒</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set autMan update_notify false #奥特曼自动升级是否通知</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set autMan auto_update true #是否开启奥特曼自动更新</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set fanli appreciate https://xxxxxxx #设置赞赏码,后面我图片的网址</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>set autMan enable_http_server true #是否启动http服务，对接微信公众号等需要，建议开启</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>set autMan ignore_notify true # 奥特曼忽略通知命令，默认忽略。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>set qq spy_on ? # 返利间谍模式</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>set autMan pushplus <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> # 管理员推送绑定pushplus指令</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>set autMan recall 关键词1<span class=\"token punctuation\">&amp;</span>关键词2... # 关键词撤回功能#关键词支持正则表达式。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>set reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>delete reply ? #删除用set设置的关键词回复</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>reply ? nil ##删除reply设置的关键词回复，请区别于用set reply设置关键词的删除方法。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set autMan recall <span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>*<span class=\"token punctuation\">[</span>^0-9a-zA-Z=<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>0-9a-zA-Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>14<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>^0-9a-zA-Z;<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>* # 屏蔽京东口令小妙招</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>重启 #重启并静默运行</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>命令 #获取奥特曼的命令列表</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>【守护奥特曼】 #解决开机自启和崩溃重启</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>systemctl disable autMan #linux命令，关闭守护模式，守护模式会导致没法自动升级</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>systemctl stop autMan <span class=\"token punctuation\">&amp;</span><span class=\"token punctuation\">&amp;</span> systemctl disable autMan #linux命令，遇见奥特曼被被杀死，请执行命令</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>docker-compose up -d --build #linux命令，docker运行</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>【对接qq】</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>set qq tempMessageGroupCode ? #设置qq临时消息默认群号</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>set qq onGroups g1<span class=\"token punctuation\">&amp;</span>g2<span class=\"token punctuation\">&amp;</span>g3... #指定要监听的qq群</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>set qq auto_friend false #设置是否自动同意好友请求,似乎没用，不用在意。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>set qq onself true #设置是否对监听自身消息</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>set qq default_bot 主机器人账号 #奥特曼支持对接多个qq，设置主qq机器人</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>set qq masters q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置qq管理员</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>set qq notifier q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置接受通知的qq账号</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>list qq  查询qq下的各类参数设置</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>【对接tgbot】tg机器人</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>set tb token ? #设置telegram机器人token</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>set tb http_proxy ? #设置telegram机器人代理</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>set tb masters t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... #设置telegram机器人管理员</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>set tb notifier t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... 设置接受通知的telegram账号</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>list tb  查询tgbot下的各类参数设置</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>【对接tdlib】tg客户端，tdlib，与终端端APP不冲突</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>set tg auto_login true/false #设置是否自动登陆tg客户端，需手工完成第一次登陆过程。</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>set tg app_id xxx #设置app_id</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>set tg app_hash xxxx #设置app_hash</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>set tg masters t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... #设置tg管理员</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>set tg replyGroups t1,t2,t3... #设置开放回复的群号</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>【对接微信公众号】</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>set wxmp app_id ? #设置微信公众平台app_id</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>set wxmp app_secret ? #设置微信公众平台app_secret </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>set wxmp token ? #设置微信公众平台token</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>set wxmp encoding_aes_key ? #设置微信公众平台encoding_aes_key</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>set wxmp masters w1<span class=\"token punctuation\">&amp;</span>w2<span class=\"token punctuation\">&amp;</span>w3 #设置微信公众平台管理员</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>set wxmp subscribe_reply ? #设置公众号关注事件回复</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>set wxmp default_reply 无法回复该消息 设置公众号默认回复</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>【对接微信-可爱猫】</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>set wx api_url ? #设置插件调用地址，确保奥特曼可以访问可爱猫端口，http://可爱猫地址:可爱猫端口/wx/receive</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>set wx keaimao_dynamic_ip true #设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而奥特曼在云服务器的情况下</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>set wx keaimao_port ? #设置可爱猫端口</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，不知道不用填</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>set wx autMan_dynamic_ip true #设置奥特曼是否动态网络地址，适用于奥特曼家庭宽带而可爱猫在云服务器的情况下</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>set autMan enable_http_server true #启动http服务，一定要打开</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>list wx 查询wx下的各类参数设置</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>【对接微信-vlw/我的/西瓜】</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>set wx vlw_addr http://vlw插件ip:端口 #设置插件调用地址，对应之前插件配置的 序号3 HTTP 外网API调用地址</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>set wx vlw_token XXX #设置对接vlw插件的token，对应之前插件配置的 序号2 API调用Token，例如autMan</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示。不懂就不要设置了。</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，这个我也不知道干嘛的，不知道就别设置了。</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>set autMan enable_http_server true #启动http服务，一定要打开</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>【对接微信-鲲鹏】</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>set wx kp_addr http://xxx.xxx.xxx.xxx:2022  #设置地址</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>set wx mode kp #设置模式</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>鲲鹏使用httpApi插件设置如下：</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>消息推送：http://autMan的地址:autMan端口/wx/receive</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>外网服务：开启</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>开关服务：开启</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>鉴权开关不要打开，暂时没有写鉴权程序</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>【对接青龙】</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>青龙管理 #多容器青龙配置</pre></td></tr><tr><td data-num=\"87\"></td><td><pre># 使用命令</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>ql config #获取青龙config.sh设置的内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>ql envs #获取青龙config.sh内设置的所有环境变量内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>ql env get ? #获取青龙config.sh内指定环境变量的内容，仅精确匹配</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>ql env find ? #查找青龙config.sh内指定的环境变量内容，支持模糊匹配</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>ql env set ? ? #在青龙config.sh内设置环境变量</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>ql env remark ? ? #字面意思是给环境变量设置备注，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>ql env disable ? #禁用（注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>ql env enable ? #启用（取消注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>ql raw ? #下载raw链接的js</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>ql task ? #在青龙里面运行指定的js</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>ql repo ? #在青龙里面拉库，例：ql repo https://github.com/cdle/carry.git</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>ql cookie status #查询青龙里cookie状态</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>ql crons #获取青龙所有定时任务，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>ql cron status ? #查看青龙指定定时任务的状态</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>ql cron run ? #运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>ql cron stop ? #停止运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>ql cron enable ? #启用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>ql cron disable ? #禁用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>ql cron find ? #查找青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>ql cron logs ? #查找青龙定时任务运行日志，支持模糊匹配</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>ql cron hide duplicate #隐藏青龙重复定时任务</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>set qinglong autoCronHideDuplicate false #关闭自动隐藏任务命令</pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>【短信登陆】</pre></td></tr><tr><td data-num=\"112\"></td><td><pre># 设置诺兰登陆地址</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>set jd_cookie enable_nark true</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>set jd_cookie nark_addr http://ip:端口</pre></td></tr><tr><td data-num=\"115\"></td><td><pre># 设置兔子登陆地址</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>set jd_cookie enable_rabbit true</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>set jd_cookie rabbit_addr http://ip:端口</pre></td></tr><tr><td data-num=\"118\"></td><td><pre># 设置</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>#使用命令：</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>1、“登录”或“登陆”：登录某东</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>2、“q“：退出登录</pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>【资产查询】</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>set jd_cookie jd_ck_unbind_hint 未绑定jd账号 #未绑定自定义回复</pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>【对接小爱同学】</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>#小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>set autMan 小爱同学 http://81.70.100.130/api/xiaoai.php?msg=<span class=\"token comment\">% s&amp;n=text #挂了就自己换</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>set autMan 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg=<span class=\"token comment\">% s #挂了就自己换</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>set autMan 小爱同学gjson text # 处理json格式数据的小爱api，不填获取整个文本</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>aut delete 小爱同学gjson # 删除处理json格式数据的小爱api</pre></td></tr><tr><td data-num=\"132\"></td><td><pre># 使用方法：</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>1、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>2、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>3、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。</pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>【洞察变量】-填写说明</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>任务开关：想开就开，想关就关</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>静默运行：在别人的群里可能会需要这个功能。</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>任务名称：自己随意起名字，自己好识别就行了。</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>目的脚本：想运行哪个脚本，如：jd_team60.js</pre></td></tr><tr><td data-num=\"142\"></td><td><pre>激活变量：哪个变量激活脚本如export ccc=\"123\"，ccc就是激活变量</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>监听目标：把监听的群号放进去，多个用英文逗号隔开</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>指定容器：设置的容器的名称，不要知道的用命令：青龙管理，多个用英文逗号隔开</pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>【洞察链接】</pre></td></tr><tr><td data-num=\"147\"></td><td><pre>set jd_cookie hint_add_varlink false //关闭洞察链接的智能查找匹配脚本的提示</pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>【店铺签到】：</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>指令：签到管理</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>set jd_cookie dpqd_parallel true/false   \t#是否开启多进程并行签到（可能会导致autMan重启，默认关闭）</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>set jd_cookie dpqd_limit_num 50  \t\t\t#设置签到CK限制数量</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>set jd_cookie dpqd_cron 5 5,14 * * * \t\t#设置自动签到时间,默认是0点0分</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>set jd_cookie dpqd_vess 青龙1,青龙2,青龙3 \t #指定执行签到的容器，不指定则取默认容器</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>set jd_cookie dpqd_notify true/false \t\t#设置是否通知到个人</pre></td></tr><tr><td data-num=\"156\"></td><td><pre>提取token并自动过滤无效后执行签到并加入到token库(注：短链之间的链接符无所谓)</pre></td></tr><tr><td data-num=\"157\"></td><td><pre>1. tokens pick https://u.jd.com/xxxxxxx;https://u.jd.com/xxxxxxx </pre></td></tr><tr><td data-num=\"158\"></td><td><pre>2. tokens check 检查token并剔除无效</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>3. tokens sign 手动执行签到任务</pre></td></tr><tr><td data-num=\"160\"></td><td><pre>添加新token并执行签到时识别以下格式(连接符可任意，这里以<span class=\"token punctuation\">&amp;</span>为例):</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>1. 从APP分享店铺首页到autMan</pre></td></tr><tr><td data-num=\"162\"></td><td><pre>2. TOKEN:xxxxxxxx<span class=\"token punctuation\">&amp;</span>xxxxxxxx<span class=\"token punctuation\">&amp;</span>xxxxxx</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>3. DPQDTK=xxxxxxxxx<span class=\"token punctuation\">&amp;</span>xxxxxxx<span class=\"token punctuation\">&amp;</span>xxxxxxx</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>4. <span class=\"token punctuation\">&#123;</span>\"token\":\"xxxxxxxx\"<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>5. 签到xx天得xx豆</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>等</pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>#jd口令解析对接</pre></td></tr><tr><td data-num=\"169\"></td><td><pre>set jd_cookie jd_cmd_addr http://ikuai.zhelee.cn:9000 #对接解析服务器</pre></td></tr><tr><td data-num=\"170\"></td><td><pre>set jd_cookie jd_cmd_groups 123,456  #指定开放解析的群</pre></td></tr><tr><td data-num=\"171\"></td><td><pre>#对接诺兰公益解析接口</pre></td></tr><tr><td data-num=\"172\"></td><td><pre>set jd_cookie jd_cmd_nolan_addr https://api.nolanstore.top #对接解析服务器</pre></td></tr><tr><td data-num=\"173\"></td><td><pre>set jd_cookie jd_cmd_nolan_groups 123,456  #指定开放解析的群</pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>set jd_cookie dpqd_token_api_addr http://rpi.zhelee.cn:9999/ #奥特曼对接可提取店铺签到token</pre></td></tr><tr><td data-num=\"176\"></td><td><pre></pre></td></tr><tr><td data-num=\"177\"></td><td><pre></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>内置外卖返利，前提条件是设置了订单侠平台的apikey账号</pre></td></tr><tr><td data-num=\"179\"></td><td><pre>set fanli enable_ele true/false 开关饿了么外卖，默认开启</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>set fanli enable_mt true/false 开关美团外卖，默认开启</pre></td></tr><tr><td data-num=\"181\"></td><td><pre>set fanli ele_cron 0 11,17 * * *\t设置饿了么推送时间</pre></td></tr><tr><td data-num=\"182\"></td><td><pre>set fanli mt_cron 0 11,17 * * *\t    设置美团推送时间</pre></td></tr><tr><td data-num=\"183\"></td><td><pre>set fanli ele_ad\t设置饿了么文案</pre></td></tr><tr><td data-num=\"184\"></td><td><pre>set fanli mt_ad\t    设置美团文案</pre></td></tr><tr><td data-num=\"185\"></td><td><pre>set fanli ele_to_groups qqgroup:123,wxgroup:456, 设置饿了么推送群</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>set fanli mt_to_groups qqgroup:123 设置美团推送群</pre></td></tr></table></figure><h4 id=\"与机器人交互\"><a class=\"anchor\" href=\"#与机器人交互\">#</a> 与机器人交互</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 设置容器登录命令</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set jd_cookie sms_login_alias xxx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre># 开启群回复机器人</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>打开群回复</pre></td></tr></table></figure>",
            "tags": [
                "play",
                "Docker",
                "autMan"
            ]
        },
        {
            "id": "https://log992.cn/play/%E9%9D%92%E9%BE%99%E4%BE%9D%E8%B5%96%E5%92%8Ccron%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "url": "https://log992.cn/play/%E9%9D%92%E9%BE%99%E4%BE%9D%E8%B5%96%E5%92%8Ccron%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
            "title": "青龙依赖和cron表达式",
            "date_published": "2023-06-06T03:40:55.000Z",
            "content_html": "<h4 id=\"自动安装\"><a class=\"anchor\" href=\"#自动安装\">#</a> 自动安装</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>一键依赖</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> qinglong <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">## 安装青龙依赖</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://ghproxy.com/https://raw.githubusercontent.com/FlechazoPh/QLDependency/main/Shell/QLOneKeyDependency.sh <span class=\"token operator\">|</span> <span class=\"token function\">sh</span></pre></td></tr></table></figure><h4 id=\"nodejs-依赖\"><a class=\"anchor\" href=\"#nodejs-依赖\">#</a> NodeJs 依赖</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>json5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>js-base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>require</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tough-cookie</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>jsdom</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>global-agent</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>@types/node</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>typescript</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>dotenv</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>jsdom -g</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>form-data</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>png-js</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ts-md5</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>tslib</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>jieba</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ws@7.4.3</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>axios</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>date-fns</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>moment</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>prettytable</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>fs</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>crypto-jsts-node</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>depend</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ds</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>jsdom</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>requests</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>npm</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>node-jsencrypt</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>-g npm</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>cjs</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>upgrade pip</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>common</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>qs</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>ql</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>node-telegram-bot-api</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>crypto -g</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>-g typescipt</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>https</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>proxy</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>agent</pre></td></tr></table></figure><h4 id=\"python3-依赖\"><a class=\"anchor\" href=\"#python3-依赖\">#</a> python3 依赖</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pycryptodome</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pytz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>typescript</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>httpx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>success</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>--upgrade pip</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pip</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>redis</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>jieba</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>canvas</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>requests</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ping3</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>PyExecJS</pre></td></tr></table></figure><h4 id=\"linux依赖安装失败的忽略\"><a class=\"anchor\" href=\"#linux依赖安装失败的忽略\">#</a> Linux 依赖（安装失败的忽略）</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gcc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>g++</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>python3-dev</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libc-dev</pre></td></tr></table></figure><h4 id=\"cron表达式\"><a class=\"anchor\" href=\"#cron表达式\">#</a> cron 表达式</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>(分 时 天 月 周)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>20 */12 * * * 每12小时的20分</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>0 0,1-23/3 * * * 0点 1 点 后每3小时</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>13 1,6,22 * * * 1:13 6:13 22:13运行</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>0 20 30 * * 每月30日20点运行</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>0 20 * * 7 每周日20点</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>12 8 * * *每天8:12</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>0 0-23/1 * * * 每小时一次</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>58 0,9,19 * * * 0点58，09点58，19点58运行，每天3次</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>0 8,14 * * * 每天8点，14点运行，每天2次</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>*/15 6-23 * * * 每15分钟运行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>30 3-23/8 * * * 03.30，11.30，19.30运行，每8小时运行，每天3次</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>0 1-23/4 * * * 每4小时运行，每天6次</pre></td></tr></table></figure><p>使用 **<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWFtd2F3YS5jbi9jcm9udGFiLmh0bWw=\"> 蛙蛙工具</span> ** 可以更直观的确定你想要的结果</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230613154226345.png\" alt=\"\" /></p>\n<h4 id=\"完整命令\"><a class=\"anchor\" href=\"#完整命令\">#</a> 完整命令</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 基础配置</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set sillyGirl name 傻妞 #设置傻妞机器人名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set sillyGirl port 8080 #设置傻妞http服务端口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>set sillyGirl duration 5 #傻妞消息撤回等待时间，单位秒</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set sillyGirl update_notify false #傻妞自动升级是否通知</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set sillyGirl auto_update true #是否开启傻妞自动更新</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set reply 打赏 <span class=\"token punctuation\">[</span>CQ:image,file=https://xxxxxxx<span class=\"token punctuation\">]</span> #傻妞内置赞赏码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>set sillyGirl enable_http_server true #是否启动http服务，对接微信公众号等需要，建议开启</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>set sillyGirl ignore_notify true # 傻妞忽略通知命令，默认忽略。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>set qq spy_on ? # 返利间谍模式</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>set sillyGirl pushplus <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> # 管理员推送绑定pushplus指令</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>set sillyGirl recall 关键词1<span class=\"token punctuation\">&amp;</span>关键词2... # 关键词撤回功能#关键词支持正则表达式。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>set reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>delete reply ? #删除用set设置的关键词回复</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>reply ? nil ##删除reply设置的关键词回复，请区别于用set reply设置关键词的删除方法。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set sillyGirl recall <span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>*<span class=\"token punctuation\">[</span>^0-9a-zA-Z=<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>0-9a-zA-Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>14<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>^0-9a-zA-Z;<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>* # 屏蔽京东口令小妙招</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>重启 #重启并静默运行</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>命令 #获取傻妞的命令列表</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>守护傻妞 #解决开机自启和崩溃重启</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>systemctl disable sillyGirl #linux命令，关闭守护模式，守护模式会导致没法自动升级</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>systemctl stop sillyGirl <span class=\"token punctuation\">&amp;</span><span class=\"token punctuation\">&amp;</span> systemctl disable sillyGirl #linux命令，遇见傻妞被被杀死，请执行命令</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>docker-compose up -d --build #linux命令，docker运行</pre></td></tr><tr><td data-num=\"24\"></td><td><pre># 对接qq</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>set qq tempMessageGroupCode ? #设置qq临时消息默认群号</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>set qq onGroups g1<span class=\"token punctuation\">&amp;</span>g2<span class=\"token punctuation\">&amp;</span>g3... #指定要监听的qq群</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>set qq auto_friend false #设置是否自动同意好友请求,似乎没用，不用在意。</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>set qq onself true #设置是否对监听自身消息</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>set qq default_bot 主机器人账号 #傻妞支持对接多个qq，设置主qq机器人</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>set qq masters q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置qq管理员</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>set qq notifier q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置接受通知的qq账号</pre></td></tr><tr><td data-num=\"32\"></td><td><pre># 对接telegtam</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>set tg token ? #设置telegram机器人token</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>set tg http_proxy ? #设置telegram机器人代理</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>set tg masters t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... #设置telegram机器人管理员</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>set tg notifier t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... 设置接受通知的telegram账号</pre></td></tr><tr><td data-num=\"37\"></td><td><pre># 对接微信公众号</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>set wxmp app_id ? #设置微信公众平台app_id</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>set wxmp app_secret ? #设置微信公众平台app_secret </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>set wxmp token ? #设置微信公众平台token</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>set wxmp encoding_aes_key ? #设置微信公众平台encoding_aes_key</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>set wxmp masters w1<span class=\"token punctuation\">&amp;</span>w2<span class=\"token punctuation\">&amp;</span>w3 #设置微信公众平台管理员</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>set wxmp subscribe_reply ? #设置公众号关注事件回复</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>set wxmp default_reply 无法回复该消息 设置公众号默认回复</pre></td></tr><tr><td data-num=\"45\"></td><td><pre># 对接微信-可爱猫</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>set wx api_url ? #设置插件调用地址，确保傻妞可以访问可爱猫端口</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>set wx keaimao_dynamic_ip true #设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>set wx keaimao_port ? #设置可爱猫端口</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，不知道不用填</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>set wx sillyGirl_dynamic_ip true #设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>set sillyGirl enable_http_server true #启动http服务，一定要打开</pre></td></tr><tr><td data-num=\"53\"></td><td><pre># 对接微信-vlw</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>set wx vlw_addr http://vlw插件ip:端口 #设置插件调用地址，对应之前插件配置的 序号3 HTTP 外网API调用地址</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>set wx vlw_token XXX #设置对接vlw插件的token，对应之前插件配置的 序号2 API调用Token，例如sillyGirl</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示。不懂就不要设置了。</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，这个我也不知道干嘛的，不知道就别设置了。</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>set sillyGirl enable_http_server true #启动http服务，一定要打开</pre></td></tr><tr><td data-num=\"59\"></td><td><pre># 对接青龙</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>青龙管理 #多容器青龙配置</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ql spy #自定义监听变量运行青龙指定脚本功能</pre></td></tr><tr><td data-num=\"62\"></td><td><pre># 使用命令</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>ql config #获取青龙config.sh设置的内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>ql envs #获取青龙config.sh内设置的所有环境变量内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>ql env get ? #获取青龙config.sh内指定环境变量的内容，仅精确匹配</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>ql env find ? #查找青龙config.sh内指定的环境变量内容，支持模糊匹配</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>ql env set ? ? #在青龙config.sh内设置环境变量</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>ql env remark ? ? #字面意思是给环境变量设置备注，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>ql env disable ? #禁用（注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>ql env enable ? #启用（取消注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>ql raw ? #下载raw链接的js</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>ql task ? #在青龙里面运行指定的js</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>ql repo ? #在青龙里面拉库，例：ql repo https://github.com/cdle/carry.git</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>ql cookie status #查询青龙里cookie状态</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>ql crons #获取青龙所有定时任务，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>ql cron status ? #查看青龙指定定时任务的状态</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>ql cron run ? #运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>ql cron stop ? #停止运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>ql cron enable ? #启用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>ql cron disable ? #禁用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>ql cron find ? #查找青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>ql cron logs ? #查找青龙定时任务运行日志，支持模糊匹配</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>ql cron hide duplicate #隐藏青龙重复定时任务</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>set qinglong autoCronHideDuplicate false #关闭自动隐藏任务命令</pre></td></tr><tr><td data-num=\"85\"></td><td><pre># 对接芝士</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>h #短信登录</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>q #退出短信登录</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>登录 #短信登录</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>登陆 #短信登录</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>查询 ? #查询指定账号的资产</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>资产推送 #向所有绑定了账号的用户推送资产</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>查询 #查询当前社交账号绑定的所有账号资产</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>关闭?通知 #关闭指定活动任务通知</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>任务通知 #推送账号失效、果园和萌宠成熟以及未继续种植通知。有私聊和群聊@两种方式，默认私聊。</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>账号管理 #自定义任务通知等</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>推送管理 #用户设置推送</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>jd asset ? #查询指定账号的资产</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>jd imOf ? #获取绑定的社交账号，仅精确匹配pt_pin值</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>jd find ? #查找对应账号的编号、pt_pin值、备注等信息，支持编号、pt_pin值、备注查询，支持连号查询</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>jd exchange ? ? #交换两个账号的序号位置</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>jd enable ? #启用指定账号</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>jd disable ? #禁用指定账号</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>jd remark ? ? #备注指定账号</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>jd remove ? #跨容器删除ck，?可以匹配整个ck和相应的备注。芝士只有这一种方式删除ck</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>jd send ? ? #给指定账号发送消息</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>jd unbind #解绑该社交账号下的某栋账号</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>jd check ? ? #不知道干嘛的，第一个问号是pin值，第二个问号是青龙clientid</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>jd myCookie #查询绑定ck</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>pt_key=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+); pt_pin=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+) #发送ck提交到青龙</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>pin=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+); wskey=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+) #发送wskey提交到青龙</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>packetId=?(<span class=\"token punctuation\">&amp;</span>|<span class=\"token punctuation\">&amp;</span>amp;)currentActId #极速推一推助力</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>set jd_cookie notify_mode group #任务通知设置群聊模式</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>set jd_cookie qqGroup ? #任务通知设置qq群聊ID</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>set jd_cookie wxGroup ? #任务通知设置微信群聊ID</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>set pinQQ pt_pin qq号码 #ck账号绑定qq号码，例 set pinQQ jd_xxxxxx 123456</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>delete pinQQ pt_pin，#取消ck账号绑定qq号码，例 delete pinQQ jd_xxxxxx</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>set pinTG pt_pin TGID #ck账号绑定TG账号，TGID找getmyid获取</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>delete pinTG pt_pin #取消ck账号绑定TG账号</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>set pinWX pt_pin 微信号 #微信给傻妞bot发送myuid获取，其实就是你的微信号，不是微信昵称。</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>delete pinWX pt_pin #取消ck账号绑定微信账号</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>set pinWXMP pt_pin #微信公众号用户id #给公众号发送myuid获取</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>delete pinWXMP pt_pin #取消ck账号绑定微信公众号用户号</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>set jdWSCK update 56 * * * * #设置wskey自动转cooke定时：</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>set jd_cookie query_wait_time <span class=\"token punctuation\">[</span>限制秒数<span class=\"token punctuation\">]</span> #限制查询频率 例:set jd_cookie query_wait_time 60</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>set jd_cookie adong_addr 阿东ip:端口 #设置阿东登录地址，不需要http，仅支持阿东1.7及以下版本</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>set jd_cookie selfQid 机器人qq账号 #设置阿东qq机器人账号，仅支持阿东1.7及以下版本</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>set jd_cookie nolan_addr http://诺兰ip:端口 #设置诺兰登陆地址，需要http</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>set jd_cookie login_num ? #设置登录坑位</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>delete jd_cookie adong_addr 例：delete jd_cookie adong_addr ip:5701 #删除阿东地址</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>delete jd_cookie nolan_addr 例：delete jd_cookie nolan_addr http://ip:5701 #删除nolan地址</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>set jd_cookie xdd_url ?  #短信登录接入xdd指令，格式http://IP地址:端口/api/login/smslogin</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>set jd_cookie xdd_token ? #对接xdd，额外设置参数</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>set jd_cookie asset_push ? #设置定时推送</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>set jd_cookie ad ? #自定义广告，成功登录后发送</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>set jd_cookie asset_query_alias xxxxxxx #自定义查询口令，变相实现屏蔽查询口令。</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>set jd_cookie disable_notify true #关闭推送指令，不想收到请jd unbind</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>set jd_cookie enable_auto_update true #自动检测ck有效性开关，关闭则设置为false。</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>set jd_cookie enable_yad false #跳过云上阿东。</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>set jd_cookie login_tip xxx #你也可以自定义登录提示</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>set jd_cookie sms_tip xxx #接收短信验证码提示</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>set silly http_addr http://192.168.31.233:8080 #失效ck无法禁用的，检查在青龙自动生成的傻妞地址GOTIFY_URL，特定网络环境手动设置</pre></td></tr><tr><td data-num=\"142\"></td><td><pre># 对接小爱同学</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>#小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。</pre></td></tr><tr><td data-num=\"144\"></td><td><pre>set sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg=<span class=\"token comment\">% s&amp;n=text #挂了就自己换</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>set sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg=<span class=\"token comment\">% s #挂了就自己换</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>set sillyGirl 小爱同学gjson text # 处理json格式数据的小爱api，不填获取整个文本</pre></td></tr><tr><td data-num=\"147\"></td><td><pre>silly delete 小爱同学gjson # 删除处理json格式数据的小爱api</pre></td></tr><tr><td data-num=\"148\"></td><td><pre># 使用方法：</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>1、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>2、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>3、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。</pre></td></tr><tr><td data-num=\"152\"></td><td><pre># 对接短网址</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>set dwz address ? #设置短网址服务地址，填傻妞对外的可以访问的地址。</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>set dwz prefix d #设置短网址服务前缀</pre></td></tr><tr><td data-num=\"155\"></td><td><pre># 使用方法</pre></td></tr><tr><td data-num=\"156\"></td><td><pre>发送“短网址+你想要转换的网址” #例：短网址 http://kejiwanjia.com/</pre></td></tr><tr><td data-num=\"157\"></td><td><pre># 对接返利</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>fanli_vip #vip用户对接</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>fanli_edit #进入返利傻瓜配置</pre></td></tr><tr><td data-num=\"160\"></td><td><pre>返利设置 #进入返利傻瓜配置</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>返利配置 #进入返利傻瓜配置</pre></td></tr></table></figure><h4 id=\"基础配置\"><a class=\"anchor\" href=\"#基础配置\">#</a> 基础配置</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 基础设置</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set sillyGirl name 傻妞 #设置傻妞机器人名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set sillyGirl port 8080 #设置傻妞http服务端口</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>set sillyGirl duration 5 #傻妞消息撤回等待时间，单位秒</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set sillyGirl update_notify false #傻妞自动升级是否通知</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set sillyGirl auto_update true #是否开启傻妞自动更新</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set reply 打赏 <span class=\"token punctuation\">[</span>CQ:image,file=https://xxxxxxx<span class=\"token punctuation\">]</span> #傻妞内置赞赏码</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>set sillyGirl enable_http_server true #是否启动http服务，对接微信公众号等需要，建议开启</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>set sillyGirl ignore_notify true # 傻妞忽略通知命令，默认忽略。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>set qq spy_on ? # 返利间谍模式</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>set sillyGirl pushplus <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> # 管理员推送绑定pushplus指令</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>set sillyGirl recall 关键词1<span class=\"token punctuation\">&amp;</span>关键词2... # 关键词撤回功能#关键词支持正则表达式。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>set reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>delete reply ? #删除用set设置的关键词回复</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>reply ? ? ## 关键词回复功能 第一个问号是支持正则的关键词，第二个问号是回复的内容。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>reply ? nil ##删除reply设置的关键词回复，请区别于用set reply设置关键词的删除方法。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set sillyGirl recall <span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>*<span class=\"token punctuation\">[</span>^0-9a-zA-Z=<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>0-9a-zA-Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>14<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">[</span>^0-9a-zA-Z;<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function selector\">\\s</span><span class=\"token function selector\">\\S</span><span class=\"token punctuation\">]</span>* # 屏蔽京东口令小妙招</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>重启 #重启并静默运行</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>命令 #获取傻妞的命令列表</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>守护傻妞 #解决开机自启和崩溃重启</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>systemctl disable sillyGirl #linux命令，关闭守护模式，守护模式会导致没法自动升级</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>systemctl stop sillyGirl <span class=\"token punctuation\">&amp;</span><span class=\"token punctuation\">&amp;</span> systemctl disable sillyGirl #linux命令，遇见傻妞被被杀死，请执行命令</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>docker-compose up -d --build #linux命令，docker运行</pre></td></tr></table></figure><h4 id=\"对接qq-tg-微信公众号-微信等\"><a class=\"anchor\" href=\"#对接qq-tg-微信公众号-微信等\">#</a> 对接 qq、tg、微信公众号、微信等</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 对接qq</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set qq tempMessageGroupCode ? #设置qq临时消息默认群号</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set qq onGroups g1<span class=\"token punctuation\">&amp;</span>g2<span class=\"token punctuation\">&amp;</span>g3... #指定要监听的qq群</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>set qq auto_friend false #设置是否自动同意好友请求,似乎没用，不用在意。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set qq onself true #设置是否对监听自身消息</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set qq default_bot 主机器人账号 #傻妞支持对接多个qq，设置主qq机器人</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>set qq masters q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置qq管理员</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>set qq notifier q1<span class=\"token punctuation\">&amp;</span>q2<span class=\"token punctuation\">&amp;</span>q3... 设置接受通知的qq账号</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># 对接telegtam</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>set tg token ? #设置telegram机器人token</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>set tg http_proxy ? #设置telegram机器人代理</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>set tg masters t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... #设置telegram机器人管理员</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>set tg notifier t1<span class=\"token punctuation\">&amp;</span>t2<span class=\"token punctuation\">&amp;</span>t3... 设置接受通知的telegram账号</pre></td></tr><tr><td data-num=\"14\"></td><td><pre># 对接微信公众号</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>set wxmp app_id ? #设置微信公众平台app_id</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>set wxmp app_secret ? #设置微信公众平台app_secret </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>set wxmp token ? #设置微信公众平台token</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>set wxmp encoding_aes_key ? #设置微信公众平台encoding_aes_key</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>set wxmp masters w1<span class=\"token punctuation\">&amp;</span>w2<span class=\"token punctuation\">&amp;</span>w3 #设置微信公众平台管理员</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>set wxmp subscribe_reply ? #设置公众号关注事件回复</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>set wxmp default_reply 无法回复该消息 设置公众号默认回复</pre></td></tr><tr><td data-num=\"22\"></td><td><pre># 对接微信-可爱猫</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>set wx api_url ? #设置插件调用地址，确保傻妞可以访问可爱猫端口</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>set wx keaimao_dynamic_ip true #设置可爱猫是否动态网络地址，适用于可爱猫家庭宽带而傻妞在云服务器的情况下</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>set wx keaimao_port ? #设置可爱猫端口</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，不知道不用填</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>set wx sillyGirl_dynamic_ip true #设置傻妞是否动态网络地址，适用于傻妞家庭宽带而可爱猫在云服务器的情况下</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>set sillyGirl enable_http_server true #启动http服务，一定要打开</pre></td></tr><tr><td data-num=\"30\"></td><td><pre># 对接微信-vlw</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>set wx vlw_addr http://vlw插件ip:端口 #设置插件调用地址，对应之前插件配置的 序号3 HTTP 外网API调用地址</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>set wx vlw_token XXX #设置对接vlw插件的token，对应之前插件配置的 序号2 API调用Token，例如sillyGirl</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>set wx relay_mode true #设置图片转发模式，否则可能会出现此图片来自xx未经允许不得使用的提示。不懂就不要设置了。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>set wx relaier ? #设置指定转发地址，格式为 https://域名/relay?url=<span class=\"token comment\">% s，这个我也不知道干嘛的，不知道就别设置了。</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>set sillyGirl enable_http_server true #启动http服务，一定要打开</pre></td></tr></table></figure><h4 id=\"对接青龙\"><a class=\"anchor\" href=\"#对接青龙\">#</a> 对接青龙</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 对接青龙</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>青龙管理 #多容器青龙配置</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ql spy #自定义监听变量运行青龙指定脚本功能</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># 使用命令</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ql config #获取青龙config.sh设置的内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ql envs #获取青龙config.sh内设置的所有环境变量内容，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ql env get ? #获取青龙config.sh内指定环境变量的内容，仅精确匹配</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ql env find ? #查找青龙config.sh内指定的环境变量内容，支持模糊匹配</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ql env set ? ? #在青龙config.sh内设置环境变量</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ql env remark ? ? #字面意思是给环境变量设置备注，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>ql env disable ? #禁用（注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ql env enable ? #启用（取消注释）在青龙config.sh内设置的环境变量</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ql raw ? #下载raw链接的js</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ql task ? #在青龙里面运行指定的js</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>ql repo ? #在青龙里面拉库，例：ql repo https://github.com/cdle/carry.git</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ql cookie status #查询青龙里cookie状态</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ql crons #获取青龙所有定时任务，但我没测试出来结果，等猫咪大佬解惑</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ql cron status ? #查看青龙指定定时任务的状态</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ql cron run ? #运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ql cron stop ? #停止运行青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ql cron enable ? #启用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ql cron disable ? #禁用青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ql cron find ? #查找青龙定时任务，支持模糊匹配</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ql cron logs ? #查找青龙定时任务运行日志，支持模糊匹配</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ql cron hide duplicate #隐藏青龙重复定时任务</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>set qinglong autoCronHideDuplicate false #关闭自动隐藏任务命令</pre></td></tr></table></figure><h4 id=\"对接芝士\"><a class=\"anchor\" href=\"#对接芝士\">#</a> 对接芝士</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 对接芝士</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h #短信登录</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>q #退出短信登录</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>登录 #短信登录</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>登陆 #短信登录</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>查询 ? #查询指定账号的资产</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>资产推送 #向所有绑定了账号的用户推送资产</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>查询 #查询当前社交账号绑定的所有账号资产</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>关闭?通知 #关闭指定活动任务通知</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>任务通知 #推送账号失效、果园和萌宠成熟以及未继续种植通知。有私聊和群聊@两种方式，默认私聊。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>账号管理 #自定义任务通知等</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>推送管理 #用户设置推送</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>jd asset ? #查询指定账号的资产</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>jd imOf ? #获取绑定的社交账号，仅精确匹配pt_pin值</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>jd find ? #查找对应账号的编号、pt_pin值、备注等信息，支持编号、pt_pin值、备注查询，支持连号查询</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>jd exchange ? ? #交换两个账号的序号位置</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>jd enable ? #启用指定账号</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>jd disable ? #禁用指定账号</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>jd remark ? ? #备注指定账号</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>jd remove ? #跨容器删除ck，?可以匹配整个ck和相应的备注。芝士只有这一种方式删除ck</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>jd send ? ? #给指定账号发送消息</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>jd unbind #解绑该社交账号下的某栋账号</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>pt_key=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+); pt_pin=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+) #发送ck提交到青龙</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>pin=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+); wskey=(<span class=\"token punctuation\">[</span>^;=<span class=\"token function selector\">\\s</span><span class=\"token punctuation\">]</span>+) #发送wskey提交到青龙</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>packetId=?(<span class=\"token punctuation\">&amp;</span>|<span class=\"token punctuation\">&amp;</span>amp;)currentActId #极速推一推助力</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>set jd_cookie notify_mode group #任务通知设置群聊模式</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>set jd_cookie qqGroup ? #任务通知设置qq群聊ID</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>set jd_cookie wxGroup ? #任务通知设置微信群聊ID</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>set pinQQ pt_pin qq号码 #ck账号绑定qq号码，例 set pinQQ jd_xxxxxx 123456</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>delete pinQQ pt_pin，#取消ck账号绑定qq号码，例 delete pinQQ jd_xxxxxx</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>set pinTG pt_pin TGID #ck账号绑定TG账号，TGID找getmyid获取</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>delete pinTG pt_pin #取消ck账号绑定TG账号</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>set pinWX pt_pin 微信号 #微信给傻妞bot发送myuid获取，其实就是你的微信号，不是微信昵称。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>delete pinWX pt_pin #取消ck账号绑定微信账号</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>set pinWXMP pt_pin #微信公众号用户id #给公众号发送myuid获取</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>delete pinWXMP pt_pin #取消ck账号绑定微信公众号用户号</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>set jdWSCK update 56 * * * * #设置wskey自动转cooke定时：</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>set jd_cookie query_wait_time <span class=\"token punctuation\">[</span>限制秒数<span class=\"token punctuation\">]</span> #限制查询频率 例:set jd_cookie query_wait_time 60</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>set jd_cookie adong_addr 阿东ip:端口 #设置阿东登录地址，不需要http，仅支持阿东1.7及以下版本</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>set jd_cookie selfQid 机器人qq账号 #设置阿东qq机器人账号，仅支持阿东1.7及以下版本</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>set jd_cookie nolan_addr http://诺兰ip:端口 #设置诺兰登陆地址，需要http</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>set jd_cookie login_num ? #设置登录坑位</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>delete jd_cookie adong_addr 例：delete jd_cookie adong_addr ip:5701 #删除阿东地址</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>delete jd_cookie nolan_addr 例：delete jd_cookie nolan_addr http://ip:5701 #删除nolan地址</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>set jd_cookie xdd_url ?  #短信登录接入xdd指令，格式http://IP地址:端口/api/login/smslogin</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>set jd_cookie xdd_token ? #对接xdd，额外设置参数</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>set jd_cookie asset_push ? #设置定时推送</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>set jd_cookie ad ? #自定义广告，成功登录后发送</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>set jd_cookie asset_query_alias xxxxxxx #自定义查询口令，变相实现屏蔽查询口令。</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>set jd_cookie disable_notify true #关闭推送指令，不想收到请jd unbind</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>set jd_cookie enable_auto_update true #自动检测ck有效性开关，关闭则设置为false。</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>jd check ? ?</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>jd myCookie #查询绑定ck</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>set jd_cookie enable_yad false #跳过云上阿东。</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>set jd_cookie login_tip xxx #你也可以自定义登录提示</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>set jd_cookie sms_tip xxx #接收短信验证码提示</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>set silly http_addr http://192.168.31.233:8080 #失效ck无法禁用的，检查在青龙自动生成的傻妞地址GOTIFY_URL，特定网络环境手动设置</pre></td></tr></table></figure><h4 id=\"对接小爱同学\"><a class=\"anchor\" href=\"#对接小爱同学\">#</a> 对接小爱同学</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 小爱同学，可以指定API，对小爱说对话模式即可开启连续对话模式，闭嘴可关闭。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>set sillyGirl 小爱同学 http://81.70.100.130/api/xiaoai.php?msg=<span class=\"token comment\">% s&amp;n=text #挂了就自己换</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>set sillyGirl 小爱同学 http://jiuli.xiaoapi.cn/i/xiaoai_tts.php?msg=<span class=\"token comment\">% s #挂了就自己换</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># 处理json格式数据的小爱api，不填获取整个文本</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>set sillyGirl 小爱同学gjson text</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># 删除处理json格式数据的小爱api</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>silly delete 小爱同学gjson</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 使用方法：</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>1、唤起小爱：发送“小爱+想说的话”，例如：小爱今天天气。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>2、对话模式：发送“小爱对话模式”开启，发送“闭嘴”结束。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>3、成语接龙：发送“成语接龙”开始。这个可应该不是小爱同学的功能，但我懒得单独写它了。</pre></td></tr></table></figure><h4 id=\"对接返利\"><a class=\"anchor\" href=\"#对接返利\">#</a> 对接返利</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 授权正版流程 前提请保证qqmasters第一个qq和群qq号一致</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>群里发送命令fanli_vip，按机器人指引继续往下走</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>给你的qq/tg/微信机器人发送命令machineId，会得到一串代码，复制下来</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>将刚刚的一串代码发送到付费群，会要求你输入密钥，随便自定义一个密钥，假如是“123”</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>给你的qq/tg/微信机器人依次发送下面的命令</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>set otto fanli_vip_secret 123 #123就是你刚刚自己设置的密钥</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>fanli_vip #如正常会返回“傻妞返利插件正版授权用户。”</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>time #如返回盗版，尝试发送time查看系统时间</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>#配置返利 傻瓜式交互配置，根据机器人提示操作即可。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fanli_edit</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>#采集TG频道线报，设置代理，支持sock5和http代理。fanli_edit选择频道，填写格式为频道ID，如ifiscat，多个用空格隔开。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>set tg http_prxy 代理地址</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>#增加排除关键词excepts、包含关键词extracts</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>##全局控制</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>extracts</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>excepts</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>##平台控制</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>jd_extracts</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>jd_excepts</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>tb_extracts</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>tb_excepts</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>以上变量通过命令编辑，设置全局排除关键词例子：set otto excepts <span class=\"token punctuation\">[</span>\"加群\", \"助力\"<span class=\"token punctuation\">]</span>，这样可以屏蔽包含加群和助力的字样的线报。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>##群组控制</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>举例：设置转发群<span class=\"token punctuation\">&#123;</span>\"imType\": \"wx\", \"groupCode: 10000\", \"excepts\": <span class=\"token punctuation\">[</span>\"绿\"<span class=\"token punctuation\">]</span>, \"extracts\": <span class=\"token punctuation\">[</span>\"帽子\"<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span>，这样就实现了一个帽子线报群，而且蔽绿了帽子。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre># 设置京品库appid</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>set otto jingpinku_appid ?</pre></td></tr><tr><td data-num=\"27\"></td><td><pre># 设置京品库appkey</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>set otto jingpinku_appkey ?</pre></td></tr><tr><td data-num=\"29\"></td><td><pre># 设置京东联盟id</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>set otto jd_union_id ? #联盟id京粉app中查看。</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>#关闭回复自身</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>set qq onself false</pre></td></tr><tr><td data-num=\"33\"></td><td><pre># 采集京东线报群，需先让机器人加入群</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>set otto jd_spy_on <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>imType:\"qq\",groupCode: 采集的群<span class=\"token punctuation\">&#125;</span>, <span class=\"token punctuation\">&#123;</span>imType:\"qq\",groupCode: 采集的群<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre># 转发转链群</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>set otto jd_spy_home <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>imType:\"qq\",groupCode: 转发qq群号<span class=\"token punctuation\">&#125;</span>, <span class=\"token punctuation\">&#123;</span>imType:\"wx\",groupCode: 转发wx群号<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre># 折淘客对接秘钥appkey</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>set otto zhetaoke_appkey ?</pre></td></tr><tr><td data-num=\"39\"></td><td><pre># 淘客账号授权ID</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>set otto taobao_sid ?</pre></td></tr><tr><td data-num=\"41\"></td><td><pre># 淘客PID      </pre></td></tr><tr><td data-num=\"42\"></td><td><pre>set otto taobao_pid ?</pre></td></tr><tr><td data-num=\"43\"></td><td><pre># 关键词屏蔽，用<span class=\"token punctuation\">&amp;</span>连接</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>set otto tb_avoids 关键词1<span class=\"token punctuation\">&amp;</span>关键词2...</pre></td></tr></table></figure>",
            "tags": [
                "play",
                "Docker",
                "青龙面板"
            ]
        },
        {
            "id": "https://log992.cn/play/Docker%E6%8B%89%E5%8F%96%E6%8C%87%E5%AE%9A%E6%9E%B6%E6%9E%84%E9%95%9C%E5%83%8F/",
            "url": "https://log992.cn/play/Docker%E6%8B%89%E5%8F%96%E6%8C%87%E5%AE%9A%E6%9E%B6%E6%9E%84%E9%95%9C%E5%83%8F/",
            "title": "Docker拉取指定架构镜像",
            "date_published": "2023-06-02T03:31:55.000Z",
            "content_html": "<blockquote>\n<p>服务器没有魔法，无法正常拉取<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS8=\"> DockerHub</span> 的镜像，有些镜像源又没有该镜像，只能手动在电脑上拉下来重新上传了。</p>\n</blockquote>\n<h4 id=\"拉取\"><a class=\"anchor\" href=\"#拉取\">#</a> 拉取</h4>\n<p>我们一般使用</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull xhofe/alist:latest</pre></td></tr></table></figure><p>拉取镜像，但是由于我自己是 M 芯片的 Mac，导致拉下来的镜像是 arm64 的，其他设备使用时就会出现架构错误，那么如何解决呢？</p>\n<h4 id=\"针对架构拉取\"><a class=\"anchor\" href=\"#针对架构拉取\">#</a> 针对架构拉取</h4>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull <span class=\"token parameter variable\">--platform</span> linux/amd64 xhofe/alist:latest</pre></td></tr></table></figure><p>在拉取时带上 <code>platform</code> ，后面加上 OS/ARCH</p>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>linux/amd64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>linux/386</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>linux/arm/v6</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>linux/arm/v7</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>linux/s390x</pre></td></tr></table></figure><p>这样就能拉取到我们想要架构的镜像了。</p>\n<h4 id=\"导出\"><a class=\"anchor\" href=\"#导出\">#</a> 导出</h4>\n<p>使用 <code>docker save</code>  命令导出</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> save xhofe/alist <span class=\"token operator\">></span> /Users/logan/Downloads/alist.tar</pre></td></tr></table></figure>",
            "tags": [
                "play",
                "Docker"
            ]
        },
        {
            "id": "https://log992.cn/android/Android%E4%B8%ADNFC%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "https://log992.cn/android/Android%E4%B8%ADNFC%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Android中NFC的使用",
            "date_published": "2023-06-01T06:30:55.000Z",
            "content_html": "<blockquote>\n<p>最近需要将先前项目的芯片识别功能优化，先前的项目使用的是 RFID 高频芯片识别 + 二维码扫描处理，后续设备大概率不会上 RFID 设备，因此需要接入 NFC 识别。</p>\n</blockquote>\n<h4 id=\"什么是nfc\"><a class=\"anchor\" href=\"#什么是nfc\">#</a> 什么是 NFC</h4>\n<p>NFC 是近场通信 (Near Field Communication,NFC)，是一种短距高频的无线电技术。</p>\n<p>由非接触式射频识别 (RFID) 演变而来。NFC 工作频率为 13.56Hz，有效范围为 20cm 以内，其传输速度有 106 Kbit / 秒、212 Kbit / 秒或者 424 Kbit / 秒三种。NFC 采用主动和被动两种读取模式。</p>\n<h4 id=\"如何接入\"><a class=\"anchor\" href=\"#如何接入\">#</a> 如何接入</h4>\n<p>Android 系统自带 NFC，在手机存在 NFC 硬件时就可以使用了。早在 Android2.3 时，我们就能使用 Android Beam 在同步的设备间通过 NFC 传递图片等数据。通过查阅源码我们得知，NFC 属于系统服务，在使用时自然是需要通过 <code>context.getSystemService(Context.NFC_SERVICE);</code>  来获取系统服务</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * Use with &#123;@link #getSystemService(String)&#125; to retrieve a</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * &#123;@link android.nfc.NfcManager&#125; for using NFC.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @see #getSystemService(String)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">NFC_SERVICE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"nfc\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们需要构建一个 <code>NfcManager</code>  来使用 NFC，而 <code>NfcManager</code>  中只有一个主角，那就是 <code>NfcAdapter</code> !</p>\n<p>想要获得 <code>NfcAdapter</code> ，只需要使用静态方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NfcAdapter</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultAdapter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中的 <code>context</code>  用来启动 NFC 服务，等价于：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NfcManager</span> manager <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NfcManager</span><span class=\"token punctuation\">)</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NFC_SERVICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">NfcAdapter</span> adapter <span class=\"token operator\">=</span> manager<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultAdapter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>通过 <code>NfcAdapter</code>  的 <code>enableForegroundDispatch()</code>  方法启用对给定 Activity 的前台分发，即最高优先级的分发（优先级这个后面再说）。</p>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>This method must be called from the main thread, and only when the activity is in the foreground (resumed). Also, activities must call disableForegroundDispatch before the completion of their Activity.onPause callback to disable foreground dispatch after it has been enabled.</pre></td></tr></table></figure><p>方法的注释也写的很清楚，必须在主线程调用，同时必须当前 <code>activity</code>  可见 / 在前台，同样的，我们需要在 <code>activity</code>  不可见的时候调用 <code>disableForegroundDispatch()</code>  方法。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 设置处理优于所有其他 NFC 的处理</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mNfcAdapter <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            mNfcAdapter<span class=\"token punctuation\">.</span><span class=\"token function\">enableForegroundDispatch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> mPendingIntent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 恢复默认状态</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mNfcAdapter <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            mNfcAdapter<span class=\"token punctuation\">.</span><span class=\"token function\">disableForegroundDispatch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么基本的就是这个成对出现的方法了。</p>\n<p><code>enableForegroundDispatch()</code>  方法中需要一个 <code>PendingIntent</code> ，下面是我们构建的 <code>PendingIntent</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 一旦截获 NFC 消息，就会通过 PendingIntent 调用窗口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        mPendingIntent <span class=\"token operator\">=</span> <span class=\"token class-name\">PendingIntent</span><span class=\"token punctuation\">.</span><span class=\"token function\">getActivity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>构建 <code>PendingIntent</code>  时我们传入的 <code>Intent</code>  直接使用了 <code>getClass()</code> ，因此，回调的数据会到当前的 <code>activity</code>  中，我们需要重载 <code>onNewIntent()</code>  方法来处理我们接收到的数据。</p>\n<h4 id=\"如何读取\"><a class=\"anchor\" href=\"#如何读取\">#</a> 如何读取</h4>\n<p>上面说道在 <code>onNewIntent()</code>  方法中就能处理我们收到的 NFC 数据了，这就不得不说另外一个重要的对象 <code>Tag</code>  了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//1. 获取 Tag 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Tag</span> detectedTag <span class=\"token operator\">=</span> intent<span class=\"token punctuation\">.</span><span class=\"token function\">getParcelableExtra</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NfcAdapter</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EXTRA_TAG</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>通过 <code>Intent</code>  获取 <code>Tag</code>  对象</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230601155044920.png\" alt=\"\" /></p>\n<p>通过注释可知：</p>\n<p>我们可以通过 <code>Tag</code>  的 <code>getId()</code>  方法获取 ID，通过 <code>getTechList()</code>  方法获取其技术集，技术集代表了当前这个芯片支持的技术，通俗点就是可以支持的格式，或者说是实现某些高级功能的基础支撑。</p>\n<p>每次发现标记 (进入范围) 时都会创建一个新的标记对象，当发现一个标记时，将创建一个 tag 对象，并通过 NfcAdapter 传递给 <code>activity</code> 。没错，就是 <code>PendingIntent</code>  申明的那个。</p>\n<p>接下来 <code>Tag</code>  会经过四个阶段的分发:</p>\n<ol>\n<li>\n<p>前台活动 <code>activity</code>  分发</p>\n<p>调用了 <code>NfcAdapter.enableForegroundDispatch()</code>  方法的 <code>activity</code> ，这个会被优先触发，比如我们平时打开系统 NFC，贴上 NFC 卡片后，系统会提示 “检测到 NFC 卡片”，然后会给我们一些推荐的操作，诸如打开微信，支付宝充值公交卡等等。但是当我们在调用了 <code>NfcAdapter.enableForegroundDispatch()</code>  方法的 <code>activity</code>  可见时，系统的处理就会因为优先级不够而不被触发，转而在当前 <code>activity</code>  回调数据</p>\n</li>\n<li>\n<p>NDEF 数据分发<br />\n如果标签中包含 NDEF 数据，系统会在第一个 NdefMessage 中检查第一个 NdefRecord，</p>\n</li>\n</ol>\n<p>NdefRecord 可以有很多种类型，其构造方法如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span> tnf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> payload<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>具体参数说明可以查看源码。</p>\n<p>我们可以在这个地方构建 Android Application Record，</p>\n<p>通过 <code>createApplicationRecord()</code>  方法，例如：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NdefMessage</span> ndefMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">NdefRecord</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">createApplicationRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.android.mms\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们将这样的 NdefRecord 写入标签后，下次我们识别标签就会自动打开短信应用。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NdefMessage</span> ndefMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">createUriRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>或者</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NdefMessage</span> ndefMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">.</span><span class=\"token function\">createUri</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>构建 Uri 的 Record，我们可以打开网页。</p>\n<p>当然，我们也可以直接写入文本数据</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">NdefMessage</span> ndefMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">createTextRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>\n<p>标签技术分发</p>\n<p>当 <code>activity</code>  注册时，添加了相应的 <code>intent-filter</code> ，例如：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activity</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.nfc.TechFilter<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NFC/TechFilter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">&lt;!-- Add a technology filter --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>action</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.nfc.action.TECH_DISCOVERED<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta-data</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.nfc.action.TECH_DISCOVERED<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>          <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@xml/filter_nfc<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activity</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xliff</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>urn:oasis:names:tc:xliff:document:1.2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">&lt;!-- capture anything using NfcF --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech-list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech</span><span class=\"token punctuation\">></span></span>android.nfc.tech.NfcF<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech-list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token comment\">&lt;!-- OR --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token comment\">&lt;!-- capture all MIFARE Classics with NDEF payloads --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech-list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech</span><span class=\"token punctuation\">></span></span>android.nfc.tech.NfcA<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech</span><span class=\"token punctuation\">></span></span>android.nfc.tech.MifareClassic<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tech</span><span class=\"token punctuation\">></span></span>android.nfc.tech.Ndef<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tech-list</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在 <code>intent-filter</code>  中添加对应的 <code>action</code>  后，我们就能通过 <code>action</code>  获取数据了</p>\n</li>\n<li>\n<p>备用分发</p>\n<p>如果所有的分发条件都不满足，就会走 <code>NfcAdapter.ACTION_TAG_DISCOVERED</code>  的 <code>action</code>  来分发数据</p>\n</li>\n</ol>\n<p>读取数据我们可以根据当前的 <code>techType</code>  来读取，例如：</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230601171030647.png\" alt=\"\" /></p>\n<p>当前芯片的 <code>TechList</code>  中有 3 条数据，分别是 NFCA，MifareUltralight 和 NEDF，因此我们就能针对性的取数据了。</p>\n<p>NEDF 通过 <code>Ndef ndef = Ndef.get(detectedTag);</code>  来获取 NEDF 实例；</p>\n<p>MifareUltralight 通过 <code>MifareUltralight ultralight = MifareUltralight.get(tag);</code>  来获取 MifareUltralight 实例；</p>\n<p>...</p>\n<p>以此类推</p>\n<p>拿到相应的实例对象后，先判断是否为空，因为数据写入的格式会决定数据写入成哪种 <code>TechType</code>  的数据，后面取值就简单了，拿到对应的 <code>NdefRecord</code>  解析就行了.</p>\n<p>读取 NDEF：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">readNdefTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span> intent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NfcAdapter</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_NDEF_DISCOVERED</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">Parcelable</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> rawMsgs <span class=\"token operator\">=</span> intent<span class=\"token punctuation\">.</span><span class=\"token function\">getParcelableArrayExtra</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token class-name\">NfcAdapter</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EXTRA_NDEF_MESSAGES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">NdefMessage</span> msgs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">int</span> contentSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rawMsgs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                msgs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">[</span>rawMsgs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rawMsgs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    msgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">)</span> rawMsgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    contentSize <span class=\"token operator\">+=</span> msgs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msgs <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token class-name\">NdefRecord</span> record <span class=\"token operator\">=</span> msgs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token class-name\">String</span> textRecord <span class=\"token operator\">=</span> <span class=\"token class-name\">NFCUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseTextRecord</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token keyword\">return</span> textRecord<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>读取 MifareUltralight：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">readTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Tag</span> tag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">MifareUltralight</span> ultralight <span class=\"token operator\">=</span> <span class=\"token class-name\">MifareUltralight</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">// 从第 4 索引开始读，前 4 索引对应的为标签固化区</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">readPages</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Charset</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GB2312\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>MifareUltralight 读取涉及到 NFC 标签的分区，前 4 个分区 (索引 0-3) 为固有分区，后面的为数据区，我们要读，要写都要写到数据区中，并且在写的时候需要注意长度。</p>\n<h4 id=\"如何写入\"><a class=\"anchor\" href=\"#如何写入\">#</a> 如何写入</h4>\n<p>下面是 MifareUltralight 写入的方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Tag</span> tag<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token comment\">// 向 nfc 标签写数据第 1 步，从标签中得到 MifareUltralight</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">MifareUltralight</span> ultralight <span class=\"token operator\">=</span> <span class=\"token class-name\">MifareUltralight</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 向 nfc 标签写数据第 2 步，connect</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            * 向 nfc 标签写数据第 3 步，正式写数据。前 4 页（0 至 3）存储了 NFC 标签相关的信息</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            * 注意 Charset.forName (\"GB2312\")),</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            * 不用 utf-8 因为一个汉字有可能用 3 个字节编码汉字，那么 2 个汉字有可能是 6 个字节.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            * 而 GB2312 始终用 2 个字节。而每页最多 4 个字节，</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">writePage</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Charset</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GB2312\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 第 4 页，页从 0 开始.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">writePage</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Charset</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GB2312\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">ToastUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">showShort</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"成功写入MifareUltralight格式数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                ultralight<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>汉字的编码长度在不同的编码下会有不同的占位。</p>\n<p>M1 卡有从 0 到 15 共 16 个扇区，每个扇区配备了从 0 到 3 共 4 个段，每个段可以保存 16 字节的内容，我们一般可以存 1024 字节的数据，根据我们写入的数据长度，要确认下面的数据要写到哪个扇区里，还是比较麻烦的，另外，MifareUltralight 读取时会把后面扇区的空数据也读出来，生成乱码，所以不太推荐使用 MifareUltralight 读取。</p>\n<p>写入 NDEF 数据就比较方便了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 首先构建 NdefMessage 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">NdefMessage</span> ndefMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefMessage</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\">NdefRecord</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">createTextRecord</span><span class=\"token punctuation\">(</span>mText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">writeTag</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NdefMessage</span> ndefMessage<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Tag</span> tag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Ndef</span> ndef <span class=\"token operator\">=</span> <span class=\"token class-name\">Ndef</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            ndef<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            ndef<span class=\"token punctuation\">.</span><span class=\"token function\">writeNdefMessage</span><span class=\"token punctuation\">(</span>ndefMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>直接拿到 <code>Ndef</code>  对象调用 <code>writeNdefMessage()</code>  就可以了。</p>\n",
            "tags": [
                "Android",
                "NFC"
            ]
        },
        {
            "id": "https://log992.cn/android/%E5%8F%A6%E8%BE%9F%E8%B9%8A%E5%BE%84%E5%B1%8F%E8%94%BD%E6%88%AA%E5%9B%BE%E9%99%90%E5%88%B6/",
            "url": "https://log992.cn/android/%E5%8F%A6%E8%BE%9F%E8%B9%8A%E5%BE%84%E5%B1%8F%E8%94%BD%E6%88%AA%E5%9B%BE%E9%99%90%E5%88%B6/",
            "title": "另辟蹊径屏蔽截图限制",
            "date_published": "2023-05-31T01:31:55.000Z",
            "content_html": "<blockquote>\n<p>先前有个项目代码需要做代码审计，因此将大部分代码打包成 <code>library</code>  调用了，包括 <code>BaseActivity</code> , 项目当时做等保，屏蔽了截图功能，目前需要恢复.</p>\n</blockquote>\n<h4 id=\"屏蔽截图\"><a class=\"anchor\" href=\"#屏蔽截图\">#</a> 屏蔽截图</h4>\n<p>首先讲如何屏蔽截图，一般只需要针对 <code>Activity</code>  设置 Flag 为 <code>FLAG_SECURE</code>  即可</p>\n<p>我们选择在 <code>BaseActivity</code>  的 <code>onCreate</code>  方法中处理，这样所有继承的子类都实现了屏蔽截图.</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">getWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_SECURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>此时再截图就会提示 “当前界面涉及隐私内容，不允许截屏”</p>\n<h4 id=\"解除截屏限制\"><a class=\"anchor\" href=\"#解除截屏限制\">#</a> 解除截屏限制</h4>\n<p>解除方法很简单，直接去掉上述 Flag 即可，但是目前的项目存在的问题是 <code>BaseActivity</code>  在 <code>library</code>  中，没有办法直接修改 <code>aar</code>  中的代码，或者说修改 <code>aar</code>  中的代码太麻烦了，那么有没有更简单的方法呢？答案是有的：</p>\n<p>在我的 <code>Application</code>  中有用到这样一行代码</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">registerActivityLifecycleCallbacks</span><span class=\"token punctuation\">(</span>activityLifecycleCallbacks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>注册了所有 <code>activity</code>  的生命周期监听，可以用来处理应用切换到前台后台的监听，做一些诸如判断网络状态重连等。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ActivityLifecycleCallbacks</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityCreated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStarted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResumed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPaused</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStopped</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivitySaveInstanceState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bundle</span> outState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>既然如此，我们直接在 <code>onActivityCreated</code>  的时候处理不就行了吗？</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityCreated</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            activity<span class=\"token punctuation\">.</span><span class=\"token function\">getWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_SECURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>事实证明，并非如此。 <code>onActivityCreated</code>  确实会在 <code>onCreate</code>  之后调用，但是却是在 <code>super.onCreate(savedInstanceState);</code>  之后就已经调用了，我们的 <code>addFlags</code>  代码是在其后面写的，所以整个流程是</p>\n<p><span class=\"label\">onCreate 的 super.onCreate</span></p>\n<p><span class=\"label warning\">onActivityCreated 的 clearFlags</span></p>\n<p><span class=\"label danger\">onCreate 的 addFlags</span></p>\n<p>顺序不对，自然无法生效，所以我们只能在 <code>onActivityStarted</code>  中处理了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStarted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token comment\">// 无法编辑 lib 中的 QFLibBaseActivity，直接在这里处理</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            activity<span class=\"token punctuation\">.</span><span class=\"token function\">getWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WindowManager<span class=\"token punctuation\">.</span>LayoutParams</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_SECURE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activityCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                isForeground <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token class-name\">INSLog</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"logan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app回到前台,开始更新状态\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                intent<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QFMainActivity</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_REFRESH_NETWORK_STATE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token function\">sendBroadcast</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            activityCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后我们就能正常截图了。</p>\n",
            "tags": [
                "Android",
                "Activity",
                "屏蔽截图"
            ]
        },
        {
            "id": "https://log992.cn/play/Shoka%E4%B8%BB%E9%A2%98%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "url": "https://log992.cn/play/Shoka%E4%B8%BB%E9%A2%98%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/",
            "title": "Shoka主题基本操作",
            "date_published": "2023-05-19T03:34:55.000Z",
            "content_html": "<h4 id=\"标签测试\"><a class=\"anchor\" href=\"#标签测试\">#</a> 标签测试</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"><span>标签测试</span><span class=\"exturl\" data-url=\"aHR0cDovL2xvZzE5OTIuY24vcGxheS9TaG9rYSVFNCVCOCVCQiVFOSVBMiU5OCVFNSU5RiVCQSVFNiU5QyVBQyVFNiU5MyU4RCVFNCVCRCU5Qy8=\">测试链接</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .default<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .info<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .primary<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>:heavy_check_mark:测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .success<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .warning<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .danger<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>:broken_heart:测试标签<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>.label .danger<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><span class=\"label default\">测试标签</span></p>\n<p><span class=\"label info\">测试标签</span></p>\n<p><span class=\"label primary\">测试标签</span></p>\n<p><span class=\"label success\">✔️测试标签</span></p>\n<p><span class=\"label warning\">测试标签</span></p>\n<p><span class=\"label danger\">测试标签</span></p>\n<p><span class=\"label danger\">💔测试标签</span></p>\n<h4 id=\"链接块测试\"><a class=\"anchor\" href=\"#链接块测试\">#</a> 链接块测试</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"><span>链接块测试</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>\n{% links %}\n- site: #站点名称\n  owner: #管理员名字\n  url: #站点网址\n  desc: #简短描述\n  image: #一张图片\n  color: #颜色代码\n{% endlinks %}\n</pre></td></tr></table></figure><p><div class=\"links\"><div class=\"item\" title=\"Logan\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9sb2cxOTkyLmNuLw==\" data-background-image=\"https://image.log1992.com/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9sb2cxOTkyLmNuLw==\">空无之境</span>\n          <p class=\"desc\">不忘初心，方得始终</p>\n          </div></div></div></p>\n<h4 id=\"提醒块测试\"><a class=\"anchor\" href=\"#提醒块测试\">#</a> 提醒块测试</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"><span>提醒块</span></figcaption><table><tr class=\"marked\"><td data-num=\"1\"></td><td><pre>:::default</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>默认默认</pre></td></tr><tr class=\"marked\"><td data-num=\"3\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"5\"></td><td><pre>:::primary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>基本基本</pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"9\"></td><td><pre>:::info</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>提示提示</pre></td></tr><tr class=\"marked\"><td data-num=\"11\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"13\"></td><td><pre>:::success</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>成功成功</pre></td></tr><tr class=\"marked\"><td data-num=\"15\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"17\"></td><td><pre>:::warning</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>警告警告</pre></td></tr><tr class=\"marked\"><td data-num=\"19\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"21\"></td><td><pre>:::danger</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>危险危险</pre></td></tr><tr class=\"marked\"><td data-num=\"23\"></td><td><pre>:::</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr class=\"marked\"><td data-num=\"25\"></td><td><pre>:::danger no-icon</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>危险危险</pre></td></tr><tr class=\"marked\"><td data-num=\"27\"></td><td><pre>:::</pre></td></tr></table></figure><div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>危险危险</p>\n</div>\n<h4 id=\"hexo-tag与markdown冲突\"><a class=\"anchor\" href=\"#hexo-tag与markdown冲突\">#</a> Hexo Tag 与 Markdown 冲突</h4>\n<p>在代码块中写 Hexo 标签时，Hexo 标签的优先级会比代码块更高，导致代码块显示异常，在我的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb2cxOTkyLmNuL3BsYXkvSGV4byVFOSU5NyVBRSVFOSVBMiU5OCVFNSVCRCU5MiVFNiU4MCVCQi8=\">前一篇文章</span>中有写明，但是如何解决呢？</p>\n<p>我们需要用到 <code>raw </code> 和 <code> endraw</code>  标签</p>\n<p>例如</p>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"><span>Hexo Tag与Markdown冲突</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>\n{% raw %}\n{% links %}\n- site: 空无之境\n  owner: Logan\n  url: https://log1992.cn/\n  desc: 不忘初心，方得始终\n  image: https://image.log1992.com/avatar.jpg\n  color: #颜色代码\n{% endlinks %}\n{% endraw %}</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr></table></figure><p>这样包裹以后就可以直接在代码块中写 Hexo Tag 了</p>\n<h4 id=\"隐藏文字测试\"><a class=\"anchor\" href=\"#隐藏文字测试\">#</a> 隐藏文字测试</h4>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"><span>隐藏文字测试</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>!!黑幕黑幕黑幕黑幕黑幕黑幕!!： 鼠标滑过显示内容</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>!!模糊模糊模糊模糊模糊模糊!!<span class=\"token punctuation\">&#123;</span>.bulr<span class=\"token punctuation\">&#125;</span> ： 选中文字显示内容</pre></td></tr></table></figure><p><span class=\"spoiler\" title=\"你知道得太多了\">黑幕黑幕黑幕黑幕黑幕黑幕</span>： 鼠标滑过显示内容<br />\n<span class=\"spoiler bulr\" title=\"你知道得太多了\">模糊模糊模糊模糊模糊模糊</span> ： 选中文字显示内容</p>\n<p>鼠标滑过开奖：<span class=\"spoiler\" title=\"你知道得太多了\">谢谢惠顾！</span><br />\n选中开奖：<span class=\"spoiler bulr\" title=\"你知道得太多了\">再来亿瓶！</span></p>\n",
            "tags": [
                "折腾",
                "Hexo",
                "Shoka"
            ]
        },
        {
            "id": "https://log992.cn/play/Hexo%E9%97%AE%E9%A2%98%E5%BD%92%E6%80%BB/",
            "url": "https://log992.cn/play/Hexo%E9%97%AE%E9%A2%98%E5%BD%92%E6%80%BB/",
            "title": "Hexo问题归总",
            "date_published": "2023-05-18T07:51:55.000Z",
            "content_html": "<blockquote>\n<p>使用 GitHub 的 Pages 搭建了自己的博客并使用了 <code>Shoka</code>  主题</p>\n</blockquote>\n<h4 id=\"显示视频\"><a class=\"anchor\" href=\"#显示视频\">#</a> 显示视频</h4>\n<p>目前在 markdown 中使用的是 <code>video</code>  标签来显示视频，代码如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://image.log1992.com/WeChat_20180919180323.mp4<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://log1992.com/usr/themes/handsome/usr/img/sj/4.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在 Typora 中的预览效果如下</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518162916349.png\" alt=\"\" /></p>\n<p>但是 <code>Shoka</code>  主题使用的是 <code>hexo-renderer-multi-markdown-it</code>  渲染器，导致在最终显示的时候会直接显示成 <code>HTML</code>  代码，查看主题作者<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">博客</span>后，发现了使用 <code>Hexo Tag</code>  的方法，但是作者的代码示例只有 <code>audio</code>  的，在 F12 后总算是搞清了实际使用方法</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518165257203.png\" alt=\"\" /></p>\n<p>Tips: 由于主题在代码块中写 <code>media video</code>  会直接加载视频，所以这里是截图展示</p>\n<p>效果如下</p>\n<p><div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"视频效果\",\"url\":[\"https://image.log1992.com/WeChat_20180919180323.mp4\"]}]'></div></div></p>\n<p>注意：编辑这个最好在其他文本编辑器，否则会显示成这样</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518163509154.png\" alt=\"\" /></p>\n<h4 id=\"图床问题\"><a class=\"anchor\" href=\"#图床问题\">#</a> 图床问题</h4>\n<p>部署在本地时，所有图片加载正常。推送到 GitHub 后，图片就都挂了。看了下，作者使用的图床为新浪图床，目前新浪图床因为防盗链，已经用不了了。但是个人很喜欢自带的二次元小姐姐图片，所以想继续使用。查遍了各种方法，终于找到一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MDQ0NzM3MzI/dXRtX2lkPTA=\">靠谱点的</span></p>\n<p>这里我使用的是百度的图片缓存服务</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//image.baidu.com/search/down?url=图片地址</span></span></pre></td></tr></table></figure><p>进入 <code>hexo</code>  -  <code>themes</code>  -  <code>shoka</code>  -  <code>scripts</code>  -  <code>helpers</code>   ，打开 <code>engine.js</code>  文件</p>\n<p>大概第 30 行，修改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token string\">'https://image.baidu.com/search/down?url=https://tva'</span><span class=\"token operator\">+</span>randomServer<span class=\"token operator\">+</span><span class=\"token string\">'.sinaimg.cn/'</span><span class=\"token operator\">+</span>size<span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span>img</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重新 <code>hexo clean</code>   -&gt;  <code>hexo g</code>   -&gt;  <code>hexo d</code>  ，等待部署完成后问题得到解决</p>\n<h4 id=\"评论系统修复\"><a class=\"anchor\" href=\"#评论系统修复\">#</a> 评论系统修复</h4>\n<p><code>Shoka</code>  使用的魔改 <code>valine</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">GitHub</span> 上显示上一次维护还是在三年前，在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5hcHAv\"> LeanCloud</span> 注册国际版后，进入 <code>应用管理</code>  -  <code>应用凭证</code> 得到 <code>AppID</code>  和 <code>AppKey</code> ，填入 <code>Shoka</code>  的 <code>_config.yml</code>  中，</p>\n<p>但是发现 <code>leanCloud</code>  相关的接口都报错了，在 <code>应用管理</code>  -  <code>安全中心</code> 找到 <code>Web 安全域名</code> ，将自己的域名填进去后，发现依然报错，查询后发现是 <code>REST API 服务器地址</code> 不对，使用系统提供的 <code>AppID</code>  前八位的域名也是没有效果。</p>\n<p>直接在 <code>应用管理</code>  -  <code>域名绑定</code> 中添加域名</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518171418319.png\" alt=\"\" /></p>\n<p>在域名解析管理后台添加 CNAME 验证通过后，在 <code>Shoka</code>  的 <code>_config.yml</code>  中找到 <code>valine</code>  配置组，修改 <code>serverURLs</code>  为我们的域名即可。</p>\n<h4 id=\"部署到github自定义域名绑定\"><a class=\"anchor\" href=\"#部署到github自定义域名绑定\">#</a> 部署到 GitHub 自定义域名绑定</h4>\n<p>在 GitHub 仓库的 <code>Settings</code> -  <code>Pages</code>  界面的 <code>Custom domain</code>  填入自己的域名后 <code>save</code></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518215309525.png\" alt=\"\" /></p>\n<p>去域名解析管理后台添加 CNAME 验证通过后就可以通过域名访问我们的博客了，但是每次更新博客，使用 <code>hexo d</code>  部署到 GitHub，发现域名有失去绑定了，需要重新绑定，很麻烦。在 <code>Code</code>  标签页我们发现有一个 <code>CNAME</code>  文件，里面就是我们的自定义域名。</p>\n<p>到 <code>hexo</code>  -  <code>source</code>  目录下新建 <code>CNAME</code>  文件，文件中写入我们的自定义域名，保存，文件如果有后缀名，记得去掉。重新 <code>hexo clean</code>  -&gt;  <code>hexo g</code>  -&gt;  <code>hexo d</code>  后，自定义域名就会自动在部署到时候关联上</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518215916017.png\" alt=\"\" /></p>\n",
            "tags": [
                "折腾",
                "博客",
                "Hexo"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%97%A0%E6%84%9F%E9%87%8D%E8%BD%BDActivity/",
            "url": "https://log992.cn/android/%E6%97%A0%E6%84%9F%E9%87%8D%E8%BD%BDActivity/",
            "title": "无感重载Activity",
            "date_published": "2023-04-14T10:02:55.000Z",
            "content_html": "<blockquote>\n<p>开发时偶尔会遇到需要重载界面的情况，但是单纯的 <code>finish</code>  会有动画，导致 APP 展现很突兀。</p>\n</blockquote>\n<h3 id=\"去掉动画效果\"><a class=\"anchor\" href=\"#去掉动画效果\">#</a> 去掉动画效果</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">overridePendingTransition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token function\">getIntent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_START_FLAG</span><span class=\"token punctuation\">,</span><span class=\"token constant\">FLAG_RESTART_ACTIVITY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_TABLE_ID</span><span class=\"token punctuation\">,</span>mTableId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_RESTART_BY</span><span class=\"token punctuation\">,</span>onlySave<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">overridePendingTransition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以在添加参数在重新启动后做一些初始化操作。</p>\n",
            "tags": [
                "Android",
                "Activity",
                "重载"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90%E8%8E%B7%E5%8F%96/",
            "url": "https://log992.cn/android/%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90%E8%8E%B7%E5%8F%96/",
            "title": "悬浮窗权限获取",
            "date_published": "2023-04-04T09:54:55.000Z",
            "content_html": "<blockquote>\n<p>做一个应用 Log 的实时显示，发现需要用到 <code>SYSTEM_ALERT_WINDOW</code>  权限，视同通用方式获取后发现并不行。</p>\n</blockquote>\n<h3 id=\"普通权限获取流程\"><a class=\"anchor\" href=\"#普通权限获取流程\">#</a> 普通权限获取流程</h3>\n<p>我们在项目中采用的是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Blcm1pc3Npb25zLWRpc3BhdGNoZXIvUGVybWlzc2lvbnNEaXNwYXRjaGVy\"> PermissionsDispatcher</span>, 使用方式也很简单，只需要在类上注解 <code>@RuntimePermissions</code>  , 写一个 <code>public void</code>  的方法，例如 <code>initAfterPermissionChecked</code> , 此方法中写权限获取后的操作即可，方法上用 <code>@NeedsPermission(Manifest.permission.CAMERA)</code>  注解即可，多个权限可以写成下面的形式</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@NeedsPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">READ_EXTERNAL_STORAGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">WRITE_EXTERNAL_STORAGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_COARSE_LOCATION</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_FINE_LOCATION</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>编译代码后自动生成 <code>类名 + PermissionsDispatcher</code>  的 Java 文件，例如 <code>LaunchActivityPermissionsDispatcher</code> , 在需要获取权限的地方直接调用 <code>方法名 + WithPermissionCheck(this);</code>  生成的 Java 文件中已经给你生成好了这个方法，例如 <code>initAfterPermissionCheckedWithPermissionCheck()</code> , 其他针对各种授权与否的处理就不细说了。</p>\n<h3 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h3>\n<p>对于 <code>SYSTEM_ALERT_WINDOW</code>  权限，我本想采用相同的方法处理，直接在权限列表后加入 <code>Manifest.permission.SYSTEM_ALERT_WINDOW</code> ，结果编译后直接报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Method</span> '<span class=\"token function\">initAfterPermissionChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>' defines 'android<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_ALERT_WINDOW</span>' <span class=\"token keyword\">with</span> <span class=\"token namespace\">other</span> permissions at the same time<span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>根据这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Blcm1pc3Npb25zLWRpc3BhdGNoZXIvUGVybWlzc2lvbnNEaXNwYXRjaGVyL2lzc3Vlcy80MzE=\"> issues</span></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230404173844161.png\" alt=\"\" /></p>\n<p>大概意思就是 <code>WRITE_SETTINGS</code>  和 <code>SYSTEM_ALERT_WINDOW</code>  这类权限不能作为普通权限申请流程的一部分一起申请，因为我们一般需要重新跳转到设置界面去授予权限。</p>\n<h3 id=\"解决\"><a class=\"anchor\" href=\"#解决\">#</a> 解决</h3>\n<p>在新的类中获取 <code>SYSTEM_ALERT_WINDOW</code>  权限，同样的流程，类名上注解 <code>@RuntimePermissions</code>  ，新建 <code>public void </code> 方法并注解 <code>@NeedsPermission(Manifest.permission.SYSTEM_ALERT_WINDOW)</code> ，这里我写的是</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@NeedsPermission</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_ALERT_WINDOW</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkSystemAlertPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>获取权限到地方直接用的</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>获取。编译运行后发现存在一个问题，那就是这个权限会直接跳转到设置界面，我们需要给个 <code>Dialog</code>  让用户选择</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"显示Log需要在设置中打开系统悬浮窗权限，是否打开？\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setPositiveButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        <span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setNegativeButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们同样不能再进入的时候每次都弹窗让用户选择，毕竟该权限可能已经授予了。于是我选择了使用 <code>ContextCompat</code>  或者 <code>PermissionChecker</code>  的 <code>checkSelfPermission()</code>  方法来校验当前权限是否获取到，但是每次获取的值都是 <code>PackageManager.PERMISSION_DENIED</code> , 于是我们采用另一种方法去获取权限是否授予</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Settings</span><span class=\"token punctuation\">.</span><span class=\"token function\">canDrawOverlays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>方法注释如下</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230404175013624.png\" alt=\"\" /></p>\n<p>至此，我们就能正常获取 <code>SYSTEM_ALERT_WINDOW</code>  权限了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Settings</span><span class=\"token punctuation\">.</span><span class=\"token function\">canDrawOverlays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"显示Log需要在设置中打开系统悬浮窗权限，是否打开？\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setPositiveButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        <span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setNegativeButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Android",
                "权限"
            ]
        },
        {
            "id": "https://log992.cn/android/Bitmap%E6%93%8D%E4%BD%9C%E5%83%8F%E7%B4%A0/",
            "url": "https://log992.cn/android/Bitmap%E6%93%8D%E4%BD%9C%E5%83%8F%E7%B4%A0/",
            "title": "Bitmap操作像素",
            "date_published": "2023-03-23T05:45:55.000Z",
            "content_html": "<blockquote>\n<p>最近在做公司项目时，需要对 bitmap 重新计算像素点颜色，在 <code>onDraw()</code>  中处理时，记录了以下方法。</p>\n</blockquote>\n<h3 id=\"setpixel方法\"><a class=\"anchor\" href=\"#setpixel方法\">#</a> setPixel 方法</h3>\n<p>我们首先遍历 bitmap 所有的像素点，通过 <code>getPixel()</code>  获取当前像素点的颜色，然后根据特定算法，计算出最终应该展示的实际颜色。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> x1<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">int</span> oldColor <span class=\"token operator\">=</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>oldColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">int</span> defaultAlpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>defaultColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">int</span> rollPass <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">/</span> defaultAlpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">></span> mMaxRollPass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    rollPass <span class=\"token operator\">=</span> mMaxRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\">//region 计算面积</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token class-name\">Integer</span> area <span class=\"token operator\">=</span> mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                area<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token comment\">//endregion</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">int</span> newColor <span class=\"token operator\">=</span> <span class=\"token class-name\">RollingMonitorUtil<span class=\"token punctuation\">.</span>GetMappingColor</span><span class=\"token punctuation\">(</span>mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mMaxRollPass <span class=\"token operator\">:</span> mMaxVibrateRollPass<span class=\"token punctuation\">,</span> rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在像素较多时，这个方法会比较耗时，会有性能问题。</p>\n<h3 id=\"copypixelstobuffer方法\"><a class=\"anchor\" href=\"#copypixelstobuffer方法\">#</a> copyPixelsToBuffer 方法</h3>\n<p>在 C# 中有 <code>LockBits</code>  方法加快速度，在 Android 中我们可以使用 <code>copyPixelsToBuffer</code>  和 <code>copyPixelsFromBuffer</code>  来加速像素操作。</p>\n<p>查看源码，我们看到最主要的其实是这个方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nativeCopyPixelsToBuffer</span><span class=\"token punctuation\">(</span>mNativePtr<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">native</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nativeCopyPixelsToBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> nativeBitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                                        <span class=\"token class-name\">Buffer</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>它是一个 <code>native</code>  修饰的方法，即 <code>JNI</code>  调用的方法，使用底层调用效率更高。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getRowBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> buf <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">copyPixelsToBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> byt <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> defaultAlpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>defaultColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ctr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ctr <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> ctr <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">//access array in form of argb. for ex. byt[0] is 'r', byt[1] is 'g' and so on..</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">int</span> rollPass <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> defaultAlpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> maxRollPass <span class=\"token operator\">=</span> mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mMaxRollPass <span class=\"token operator\">:</span> mMaxVibrateRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">></span> maxRollPass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                rollPass <span class=\"token operator\">=</span> maxRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">//region 计算面积</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">Integer</span> area <span class=\"token operator\">=</span> mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            area<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">int</span> newColor <span class=\"token operator\">=</span> mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mRollColorPalette<span class=\"token punctuation\">[</span>rollPass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> mVibrateColorPalette<span class=\"token punctuation\">[</span>rollPass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> retBuf <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span>byt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">copyPixelsFromBuffer</span><span class=\"token punctuation\">(</span>retBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>因为我构建的 bitmap 采用的是以下方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Bitmap</span> compositeBitmap <span class=\"token operator\">=</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBitmap</span><span class=\"token punctuation\">(</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bitmap<span class=\"token punctuation\">.</span>Config</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ARGB_8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们使用了 ARGB_8888，每个像素占了 4 位，可以通过下面方法获取数组大小：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr></table></figure><p>循环遍历后取到 RGB 和相应的透明度，然后就可以针对当前的颜色做统计或者是批量转换操作了。</p>\n",
            "tags": [
                "Android",
                "bitmap",
                "像素"
            ]
        },
        {
            "id": "https://log992.cn/android/ADB%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "url": "https://log992.cn/android/ADB%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "title": "ADB命令简单使用",
            "date_published": "2023-02-09T03:18:55.000Z",
            "content_html": "<h4 id=\"查看当前连接的设备\"><a class=\"anchor\" href=\"#查看当前连接的设备\">#</a> 查看当前连接的设备</h4>\n<blockquote>\n<p>adb devices</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/2020/10/1772551834.png\" alt=\"\" /><br />\n可以看到目前我的电脑连接了两个设备</p>\n<h4 id=\"安装-电脑上的apk\"><a class=\"anchor\" href=\"#安装-电脑上的apk\">#</a> 安装 电脑上的 apk</h4>\n<blockquote>\n<p>adb intall XXXX</p>\n</blockquote>\n<p>XXXX 代表 apk 路径，可以直接拖进来<br />\n<img data-src=\"https://image.log1992.com/2020/10/183797954.png\" alt=\"\" /><br />\n一般来说 Performing Streamed Install 的时候需要你在设备上手动确认是否安装</p>\n<h4 id=\"多设备安装-apk\"><a class=\"anchor\" href=\"#多设备安装-apk\">#</a> 多设备安装 apk</h4>\n<blockquote>\n<p>adb -s deviceId install XXXX</p>\n</blockquote>\n<p>1.devceId 可以通过 adb devices 获得<br />\n 2.XXXX 代表 apk 路径，可以直接拖进来<br />\n当你电脑连接 了 多个设备的时候，用 adb install 命令安装会报错<br />\n<img data-src=\"https://image.log1992.com/2020/10/1643299931.png\" alt=\"\" /><br />\n此时需要我们手动指定相应的设备来安装<br />\n<img data-src=\"https://image.log1992.com/2020/10/644570005.png\" alt=\"\" /></p>\n<h4 id=\"卸载\"><a class=\"anchor\" href=\"#卸载\">#</a> 卸载</h4>\n<blockquote>\n<p>adb uninstall applicationId</p>\n</blockquote>\n<p>applicationId 为当前 APP 的 applicationId<br />\n 一般情况下我们可以长按桌面的图标或者拖动卸载当前的 APP，但是偶尔会遇到卸载不干净的情况，类似华为手机开了系统分身这种，再次安装的时候会提示 APP 已存在，无法 安装。因此我们需要通过命令来将其卸载干净<br />\n<img data-src=\"https://image.log1992.com/2020/10/3228692174.png\" alt=\"\" /><br />\n当然，如果你是多设备的话，别忘了在 adb 后面添加 -s deviceId 来选择卸载特定设备上的该 APP</p>\n<h4 id=\"传输文件\"><a class=\"anchor\" href=\"#传输文件\">#</a> 传输文件</h4>\n<ol>\n<li>\n<p>从电脑传输到设备</p>\n<blockquote>\n<p>adb push 文件全路径 /sdcard/ 目标路径</p>\n</blockquote>\n<p>一般来说在调用 <code>adb install</code>  时，内部会先将 apk 文件推送到设备的临时文件夹内，再执行安装</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209105558678.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>从设备传输到电脑</p>\n<blockquote>\n<p>adb pull /sdcard/ 文件路径 电脑端存放路径</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209105822952.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h4 id=\"操作设备应用\"><a class=\"anchor\" href=\"#操作设备应用\">#</a> 操作设备应用</h4>\n<ol>\n<li>\n<p>清除缓存数据</p>\n<blockquote>\n<p>adb shell pm clear 包名</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110416889.png\" alt=\"\" /></p>\n<p>这个会清除应用所有数据</p>\n</li>\n<li>\n<p>删除设备文件</p>\n<blockquote>\n<p>adb shell rm /sdcard/ 文件路径 -f</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110442562.png\" alt=\"\" /></p>\n<p>这个不会出现 success 提示</p>\n</li>\n<li>\n<p>获取设备分辨率</p>\n<blockquote>\n<p>adb shell vm size</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209111738141.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>获取屏幕密度</p>\n<blockquote>\n<p>adb shell wm density</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110648500.png\" alt=\"\" /></p>\n</li>\n</ol>\n<blockquote>\n<p>还有很多 <code>adb shell pm</code>  相关的操作，具体可看下图</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110858336.png\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "adb"
            ]
        },
        {
            "id": "https://log992.cn/play/Monterey%E5%B1%8F%E8%94%BD%E6%9B%B4%E6%96%B0/",
            "url": "https://log992.cn/play/Monterey%E5%B1%8F%E8%94%BD%E6%9B%B4%E6%96%B0/",
            "title": "Monterey屏蔽更新",
            "date_published": "2023-01-08T05:11:55.000Z",
            "content_html": "<blockquote>\n<p>最近系统更新到 Ventura，各种用着用着转圈圈，必须重启才能恢复正常，于是一怒之下重新安装了 Monterey，没有 Time Machine 备份，过程很难受。安装好后我们将系统升级屏蔽掉。</p>\n</blockquote>\n<h3 id=\"简单使用host屏蔽\"><a class=\"anchor\" href=\"#简单使用host屏蔽\">#</a> 简单使用 host 屏蔽</h3>\n<p>Mac 的 host 文件存在于 <code>/private/etc/hosts</code>  中，我们没有办法直接修改系统文件，可以将文件拷贝出来后修改，然后复制进去，当然也可以使用终端进行操作。</p>\n<ol>\n<li>\n<p>使用命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /private/etc/hosts</pre></td></tr></table></figure><p>使用 nano 编辑器单纯是比较习惯这个，当然我们也可以使用 vim</p>\n<p>复制以下代码进去</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## Mac Software Update (sysin)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>127.0.0.1 swdist.apple.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>127.0.0.1 swscan.apple.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>127.0.0.1 swcdn.apple.com</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>127.0.0.1 gdmf.apple.com</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>127.0.0.1 mesu.apple.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>127.0.0.1 xp.apple.com</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108121753352.png\" alt=\"\" /></p>\n<p>Ctrl + x 保存后即可</p>\n</li>\n<li>\n<p>使用软件<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHM=\"> SwitchHosts</span></p>\n<p>在 GitHub 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHMvcmVsZWFzZXM=\"> release 界面</span>下载对应自己设备的安装包，这里我们下载的是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHMvcmVsZWFzZXMvZG93bmxvYWQvdjQuMS4yL1N3aXRjaEhvc3RzX21hY19hcm02NF80LjEuMi42MDg2LmRtZw==\"> SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></p>\n<p>安装完成后打开软件，左上角 + 新建一个</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108122238085.png\" alt=\"\" /></p>\n<p>最后打开右侧小开关即可</p>\n<p>通过 host 屏蔽更新会显示如下图</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108122403423.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h3 id=\"清除系统更新标记\"><a class=\"anchor\" href=\"#清除系统更新标记\">#</a> 清除系统更新标记</h3>\n<ol>\n<li>\n<p>临时清除系统更新标记</p>\n<p>如果已经检测到更新，可以使用如下方法临时去除更新通知标记。</p>\n<p>打开 “终端”，执行如下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>defaults <span class=\"token function\">write</span> com.apple.systempreferences AttentionPrefBundleIDs <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Killall Dock</pre></td></tr></table></figure><p>小红点就消失了</p>\n<p>但是在 Monterey 中，再次进入系统更新，虽然不会提示更新，但是小红点会重复出现</p>\n</li>\n<li>\n<p>修改权限</p>\n<ol>\n<li>\n<p>确保 FileVault 已经禁用（默认禁用），在 ” &gt;&gt; 系统偏好设置… &gt;&gt; 安全性和隐私 &gt;&gt; 文件保险箱” 查看确认。</p>\n</li>\n<li>\n<p>关机状态下，长按开机键，出现设置选项后松开，选中选项图标，点击继续，进入后选择当前账户，输入密码，解锁后点击左上角实用工具，选择终端。</p>\n</li>\n<li>\n<p>首先查看 <code>csrutil</code>  状态</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil status</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108124204956.png\" alt=\"\" /></p>\n<p>这个是我已经关闭了的，没有关闭最后就是现实 enabled</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil disable</pre></td></tr></table></figure><p>等待两三秒，就会提示关闭成功</p>\n<p>再将 <code>authenticated-root</code>  关闭</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil authenticated-root disable</pre></td></tr></table></figure><p>不关这个创建快照的时候会出现错误</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108124721068.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>正常重启到 macOS</p>\n</li>\n<li>\n<p>通过执行  <code>mount</code>  命令查找要挂载的设备</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108124820195.png\" alt=\"\" /></p>\n<p>看到第一行的根目录对应的是 <code>/dev/disk3s31</code> ，那么应该挂载的设备名称是  <code>/dev/disk3s3</code> ，s1 表示 “Snapshot 1”（APFS 快照）</p>\n</li>\n<li>\n<p>创建一个新目录用于挂载，我们选择在用户目录下创建</p>\n<p>例如：~/mount</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-m777</span> ~/mount</pre></td></tr></table></figure></li>\n<li>\n<p>执行挂载</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> <span class=\"token parameter variable\">-o</span> nobrowse <span class=\"token parameter variable\">-t</span> apfs /dev/disk3s3 ~/mount</pre></td></tr></table></figure><p>后面两个参数分别是我们刚刚查到的挂载目录和创建的新目录</p>\n</li>\n<li>\n<p>在新目录下修改文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/mount</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager</pre></td></tr></table></figure></li>\n<li>\n<p>执行 <code>sudo bless --folder ~/mount/System/Library/CoreServices --bootefi --create-snapshot</code></p>\n<p>注意，这里要先挂载后再执行，直接执行会报错找不到节点</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108125541075.png\" alt=\"\" /></p>\n<p><strong>在 M 芯片的 Mac 上，我们无法使用上述命令完成快照生成</strong></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108125827753.png\" alt=\"\" /></p>\n<p><strong>我们需要用到以下命令：</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> bless <span class=\"token parameter variable\">--mount</span> ~/mount/System/Library/CoreServices/ <span class=\"token parameter variable\">--setBoot</span> --create-snapshot</pre></td></tr></table></figure></li>\n<li>\n<p>重启电脑</p>\n</li>\n<li>\n<p>验证</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108130457229.png\" alt=\"\" /></p>\n<p>此时，即使不做任何屏蔽操作，可以正常检测软件更新，但不会出现更新标记（红点数字 1）</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108130641625.png\" alt=\"\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "折腾",
                "Mac",
                "屏蔽更新"
            ]
        },
        {
            "id": "https://log992.cn/android/APK%E6%89%8B%E5%8A%A8%E7%AD%BE%E5%90%8D/",
            "url": "https://log992.cn/android/APK%E6%89%8B%E5%8A%A8%E7%AD%BE%E5%90%8D/",
            "title": "APK手动签名",
            "date_published": "2022-11-21T05:14:55.000Z",
            "content_html": "<blockquote>\n<p>最近发现新版本的 Android studio 打包 apk 时没有 V1 证书和 V2 证书选项了</p>\n</blockquote>\n<h3 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h3>\n<p>需要 Android SDK</p>\n<p>Mac 系统在 <code>/Users/logan/Library/Android/sdk</code>  下，我们需要的工具在 <code>build-tools</code>  目录中，</p>\n<p>需要 V3 版本签名的话需要 30.0.0 或更高版本</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8850112680.png\" alt=\"\" /></p>\n<p>我们主要用得到的是 <code>zipalign</code>  和 <code>aplsigner</code></p>\n<p>签名之前我们可以对 apk 进行校验，看是否存在签名：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./apksigner verify <span class=\"token parameter variable\">-v</span> srcApk</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8850851503.png\" alt=\"\" /></p>\n<p>可以看到返回了 <code>DOES NOT VERIFY</code> , 说明此时是没有签名的</p>\n<h3 id=\"签名\"><a class=\"anchor\" href=\"#签名\">#</a> 签名</h3>\n<ol>\n<li>压缩对齐 - 对齐未签名的 APK</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zipalign <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">4</span> srcApk desApk</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zipalign <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">4</span> 源apk 输出apk</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851446884.png\" alt=\"\" /></p>\n<p>输出 successful 即说明对齐完成</p>\n<ol start=\"2\">\n<li>\n<p>签名</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apksigner sign <span class=\"token parameter variable\">--ks</span> xxx.jks --ks-key-alias release <span class=\"token parameter variable\">--out</span> out.apk in.apk</pre></td></tr></table></figure><p><code>xxx.jks</code>  为签名文件，也可以是 <code>xxx.keystore</code> , <code>--ks-key-alias</code>  后面跟上当前渠道，签名文件存在多个渠道时，需要指定，单个渠道时不需要指定。</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851413976.png\" alt=\"\" /></p>\n<p>通过 <code>--out</code>  指定输出 apk 最后跟上需要签名的 apk 即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851658367.png\" alt=\"\" /></p>\n<p>回车后输入密码即可</p>\n<p>最后我们再校验下签名</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851746584.png\" alt=\"\" /></p>\n<p>可以看到 V1,V2,V3 都有了</p>\n</li>\n</ol>\n",
            "tags": [
                "Android",
                "签名"
            ]
        },
        {
            "id": "https://log992.cn/android/Android%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/",
            "url": "https://log992.cn/android/Android%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/",
            "title": "Android签名证书转换",
            "date_published": "2022-11-11T04:01:55.000Z",
            "content_html": "<blockquote>\n<p>Android 签名证书一般为 jks 和 keystore 格式， <code>jks</code>  是在 <code>android studio</code>  里面生成的签名证书</p>\n<p><code>keystore</code>  是 <code>eclipse,Creator</code>  里面生成的。 两者在使用方式上没有什么区别，但是在算法上有一点点区别。</p>\n</blockquote>\n<h3 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h3>\n<p>需要 JDK 环境，配置好环境变量后，输入 <code>keytool</code></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88113018178.png\" alt=\"\" /></p>\n<h3 id=\"签名文件-keystore转换-jks\"><a class=\"anchor\" href=\"#签名文件-keystore转换-jks\">#</a> 签名文件 .keystore 转换 .jks</h3>\n<ol>\n<li>首先转换成 pkcs12</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> keystore文件路径 <span class=\"token parameter variable\">-destkeystore</span> 输出文件路径 <span class=\"token parameter variable\">-deststoretype</span> pkcs12</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/wuhanins.keystore <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/wuhanins.p12 <span class=\"token parameter variable\">-deststoretype</span> pkcs12</pre></td></tr></table></figure><p>回车后输入 p12 证书密码，确认 p12 证书密码，keystore 证书密码后即可生成 p12 证书</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88113750313.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>将 pkcs12 转换为 jks 文件</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> P12证书路径 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> 输出jks证书路径 <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/wuhanins.p12 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/wuhanins.jks <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>回车后依次输入新的 jks 证书密码，确认 jks 证书密码，p12 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88114324184.png\" alt=\"\" /></p>\n<p>至此，keystore 证书已经转换为 jks 证书</p>\n<h3 id=\"签名文件-jks-转换-keystore\"><a class=\"anchor\" href=\"#签名文件-jks-转换-keystore\">#</a> 签名文件 .jks 转换 .keystore</h3>\n<ol>\n<li>直接转换</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> jks文件路径 <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> 输出keystore文件路径</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.jks <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.keystore</pre></td></tr></table></figure><p>回车后依次输入新 keystore 证书密码，确认 keystore 证书密码，原始 jks 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88114857586.png\" alt=\"\" /></p>\n<p>至此直接从 jks 转换为 keysotre 完成</p>\n<ol start=\"2\">\n<li>jks 转换为 p12, 再从 p12 转换为 keysotre</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> jks文件路径 <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> p12文件路径</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.jks <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.p12</pre></td></tr></table></figure><p>回车后依次输入 p12 证书密码，确认 p12 证书密码，jks 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115431868.png\" alt=\"\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> p12文件路径 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> .keystore文件路径 <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.p12  <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.keystore <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>回车后依次输入新的 keystore 证书密码，确认 keystore 证书密码，p12 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115925832.png\" alt=\"\" /></p>\n<p>至此，keystore 证书转换完毕</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115957594.png\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "Android studio",
                "证书"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8FIleProvider/",
            "url": "https://log992.cn/android/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8FIleProvider/",
            "title": "正确使用FIleProvider",
            "date_published": "2022-09-10T11:14:55.000Z",
            "content_html": "<h2 id=\"起因\"><a class=\"anchor\" href=\"#起因\">#</a> 起因</h2>\n<blockquote>\n<p>自动更新时，APP 覆盖安装失效了，由于先前测试调试都是手动覆盖安装，因此未发现问题</p>\n</blockquote>\n<p>## 错误定位<br />\n通过调试发现</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span></span>ActivityNotFoundException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">No</span> <span class=\"token class-name\">Activity</span> found <span class=\"token keyword\">to</span> <span class=\"token namespace\">handle</span> <span class=\"token class-name\">Intent</span> <span class=\"token punctuation\">&#123;</span> act<span class=\"token operator\">=</span><span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>intent<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">.</span></span>VIEW</span> dat<span class=\"token operator\">=</span>file<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//storage/emulated/0/CESPIB/ces_pib.apk typ=application/vnd.android.package-archive flg=0x10000000 &#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Instrumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkStartActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2113</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Instrumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">execStartActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1739</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5343</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseFragmentActivityJB</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5284</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">859</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5714</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5682</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span><span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">166</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>access$<span class=\"token function\">300</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span>$<span class=\"token number\">2.</span><span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Handler</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">213</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">8147</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>RuntimeInit</span>$<span class=\"token class-name\">MethodAndArgsCaller</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">513</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ZygoteInit</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZygoteInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1100</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>具体错误出现在将文件转换为 Uri 跳转到安装 apk 的 intent 时出错，想了想，应该是 7.0 以后限制了 APP 对于文件 uri 的使用权限。果然，查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vYWJvdXQvdmVyc2lvbnMvbm91Z2F0L2FuZHJvaWQtNy4wLWNoYW5nZXM=\">官网</span>后发现了端倪:</p>\n<blockquote>\n<h3 id=\"在应用间共享文件\"><a class=\"anchor\" href=\"#在应用间共享文件\">#</a> 在应用间共享文件</h3>\n<p>对于面向 Android 7.0 的应用，Android 框架执行的 StrictMode API 政策禁止在您的应用外部公开 file:// URI。如果一项包含文件 URI 的 intent 离开您的应用，则应用出现故障，并出现 FileUriExposedException 异常。要在应用间共享文件，您应发送一项 content:// URI，并授予 URI 临时访问权限。进行此授权的最简单方式是使用 FileProvider 类。如需了解有关权限和共享文件的详细信息，请参阅共享文件。</p>\n</blockquote>\n<p>大意就是说文件的访问权限提高了，不能直接使用 &quot;file://&quot; 的方式来共享文件了，应该使用 &quot;content://&quot; URI 的方式来共享文件，并使用 FileProvider 类来授权。</p>\n<h2 id=\"处理方案\"><a class=\"anchor\" href=\"#处理方案\">#</a> 处理方案</h2>\n<p>一般情况下我们安装 apk 会这样操作</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_VIEW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">setFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_ACTIVITY_NEW_TASK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mContext<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但 7.0 以上要求使用 FileProvider 来授权访问文件<br />\n根据官方的指引：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vcmVmZXJlbmNlL2FuZHJvaWQvc3VwcG9ydC92NC9jb250ZW50L0ZpbGVQcm92aWRlcg==\">https://developer.android.google.cn/reference/android/support/v4/content/FileProvider</span> ，大概需要以下几个步骤：</p>\n<ul>\n<li>定义 FileProvider</li>\n<li>指定可用文件</li>\n<li>生成文件的 URI</li>\n<li>授予 URI 临时权限</li>\n<li>向另一个应用程序提供内容 URI</li>\n</ul>\n<p>##### 下面来一一介绍一下这几个步骤：</p>\n<ol>\n<li>定义 FileProvider<br />\n 在 AndroidManifest.xml 文件中注册 provider</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>provider</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.support.v4.content.FileProvider<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>authorities</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.wuhanins.ces_pib.provider<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>exported</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>grantUriPermissions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">&lt;!-- 元数据 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta-data</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.support.FILE_PROVIDER_PATHS<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@xml/update_apk_paths<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>provider</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>解释一下几个参数的含义：<br />\n<strong>android:name</strong><br />\n 文件提供者的类名，固定为 &quot;android.support.v4.content.FileProvider&quot;，如果你很牛逼也可以自己写一个类并继承 &quot;android.support.v4.content.FileProvider&quot;，然后实现一些扩展的功能。<br />\n<strong>android:authorities</strong><br />\n 权限的名字，用于标识 provider 提供的内容，可以有多个名字，各名字之间用 “；” 隔开。为了不和其它名字冲突一般使用域名的形式来描述。在实际使用过程中，我们一般会用项目的包名替换，例如</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>android:authorities=\"$&#123;applicationId&#125;.provider\"</pre></td></tr></table></figure><p>直接通过引用的方式添加 authorities<br />\n<strong>android:exported</strong><br />\n 内容提供者是否可供其他应用程序使用，在这里不需要，所以填 false<br />\n<strong>android:grantUriPermissions</strong><br />\n 是否授权给那些本来无权限访问的人临时访问内容提供者提供的内容，这里填 true，不然就没法访问到这个文件了。</p>\n<ol start=\"2\">\n<li>指定可用的文件<br />\n为了指定需要访问的文件，需要在一个 xml 文件中指定被访问文件的存储路径。<br />\n在 res 目录下新建一个 xml 文件夹，然后新建一个文件：update_apk_paths.xml（文件名自己随意起）, 内容如下：</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>paths</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">&lt;!--</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        files-path：          该方式提供在应用的内部存储区的文件 / 子目录的文件。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                              它对应 Context.getFilesDir 返回的路径：eg:”/data/data/com.jph.simple/files”。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        cache-path：          该方式提供在应用的内部存储区的缓存子目录的文件。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                              它对应 getCacheDir 返回的路径：eg:“/data/data/com.jph.simple/cache”；</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        external-path：       该方式提供在外部存储区域根目录下的文件。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                              它对应 Environment.getExternalStorageDirectory 返回的路径：</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        external-cache-path： 该方式提供在应用的外部存储区根目录的下的文件。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                              它对应 Context#getExternalFilesDir (String) Context.getExternalFilesDir (null)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                              返回的路径。eg:”/storage/emulated/0/Android/data/com.jph.simple/files”</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token comment\">&lt;!-- name=“update”</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        相当于下面的 path 的别名，为了把真实的路径隐藏起来，这样就只能看到别名，如果按照这个别名路径去找文件的话肯定是找不到的。这个别名自己随便取，我把它叫做 “update”</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        path=\"\"</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        代表你要分享的真实的子目录名，空字符串代表根目录，注意该值必须是一个子目录，不能是文件名 --></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>external-path</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>update<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CESPIB<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>paths</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>综合来讲，以上配置表明：我要分享一个目录供其它人访问，这个目录就是内部存储区的缓存目录的根目录，即 getCacheDir () 的返回值。所有根目录及其子目录下的文件都可以被访问，同时我为这缓存目录取了一个别名叫 “update”, 以混淆视听。<br />\n当你要将自己的目录分享给其他应用使用时就需要下面的操作了，将上面的 update_apk_paths.xml 文件链接到 AndroidManifest.xml 中定义的 provider 中，也就是定义中的 “元数据” 的内容</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 元数据 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>meta<span class=\"token operator\">-</span>data</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.support.FILE_PROVIDER_PATHS\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    android<span class=\"token operator\">:</span>resource<span class=\"token operator\">=</span><span class=\"token string\">\"@xml/update_apk_paths\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>android:name</strong><br />\n 代表资源的类型，此处为固定值 &quot;android.support.FILE_PROVIDER_PATHS&quot;<br />\n<strong>android:resource</strong><br />\n 代表资源文件，即 update_apk_paths.xml，但是不要后缀名</p>\n<ol start=\"3\">\n<li>生成文件的 URI<br />\n 用以下方式生成文件的 Uri：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Uri</span> apkUri <span class=\"token operator\">=</span> <span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUriForFile</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.wuhanins.ces_pib.provider\"</span><span class=\"token punctuation\">,</span> apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中，第二个参数 &quot;com.wuhanins.ces_pib.provider&quot; 是在 AndroidManifest.xml 文件中声明的 provider 中 <strong>android:authorities</strong> 元素的值，第三个参数 apkFile 就是下载下来的保存在缓存目录下的 apk 文件，假如你是用的是下面的方式声明的 authorities</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>android:authorities=\"$&#123;applicationId&#125;.provider\"</pre></td></tr></table></figure><p>那么你调用的时候最好是</p>\n<pre><code class=\"language-Java\">Uri apkUri = FileProvider.getUriForFile(mContext, mContext.getApplicationInfo().packageName+&quot;.apk.provider&quot;, apkFile);\n</code></pre>\n<p>通过系统 API 获取当前包名，避免拼写出错<br />\n 4. 授予 URI 临时权限<br />\n授权有很多种方式：这里只说一种，就是通过 Intent addFlags () 方法，如：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>向另一个应用程序提供内容 URI<br />\n 用 startActivity (intent) 启动一个应用就可以了，被启动的应用就有权限访问你提供的文件了，但要注意必须添加这句：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>安装 apk 的方法就改造成了下面这样了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">File</span> apkFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_VIEW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_ACTIVITY_NEW_TASK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span><span class=\"token constant\">VERSION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SDK_INT</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">Build<span class=\"token punctuation\">.</span>VERSION_CODES<span class=\"token punctuation\">.</span>N</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 7.0 以上</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Uri</span> apkUri <span class=\"token operator\">=</span> <span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUriForFile</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.wuhanins.ces_pib.provider\"</span><span class=\"token punctuation\">,</span> apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span>apkUri<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 7.0 以下</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">Uri</span> uri <span class=\"token operator\">=</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromFile</span><span class=\"token punctuation\">(</span>apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        mContext<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>自动更新失败的问题完美解决，其他例如调用系统相机，调用系统相册等等都可以类推了，但是切记一定要添加上 Flag</p>\n<pre><code class=\"language-Java\">intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n</code></pre>\n",
            "tags": [
                "Android",
                "FIleProvider"
            ]
        },
        {
            "id": "https://log992.cn/java/Date%E6%B8%85%E7%A9%BA%E6%97%B6%E5%88%86%E7%A7%92/",
            "url": "https://log992.cn/java/Date%E6%B8%85%E7%A9%BA%E6%97%B6%E5%88%86%E7%A7%92/",
            "title": "Date清空时分秒",
            "date_published": "2022-08-02T08:06:55.000Z",
            "content_html": "<blockquote>\n<p>开发过程中我们一般会在数据库存储详细的时间数据，但是在获取数据的时候又需要精确到天来对数据进行分组。</p>\n</blockquote>\n<h3 id=\"已废弃的方法\"><a class=\"anchor\" href=\"#已废弃的方法\">#</a> 已废弃的方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>上述方法在 JDK version 1.1 之后就废弃掉了</p>\n<h3 id=\"通用方法\"><a class=\"anchor\" href=\"#通用方法\">#</a> 通用方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> operationTime <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">getOperationTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Calendar</span> calendar <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>operationTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOUR_OF_DAY</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECOND</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MILLISECOND</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"java8方法\"><a class=\"anchor\" href=\"#java8方法\">#</a> Java8 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> operationTime <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">getOperationTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">LocalDate</span> localDate <span class=\"token operator\">=</span> operationTime<span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">atZone</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">systemDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocalDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Date</span> formatDate <span class=\"token operator\">=</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>localDate<span class=\"token punctuation\">.</span><span class=\"token function\">atStartOfDay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">systemDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "Java",
                "Java",
                "Date"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6%E5%88%86%E6%9E%90/",
            "url": "https://log992.cn/android/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6%E5%88%86%E6%9E%90/",
            "title": "数据库大批量操作数据耗时分析",
            "date_published": "2022-04-28T08:55:55.000Z",
            "content_html": "<blockquote>\n<p>数据库操作过程中经常会遇到需要大批量操作数据的情况，使用不同的方式会占用不同的时间，下面是我在 OrmLite 中的一些耗时记录</p>\n</blockquote>\n<ol>\n<li>使用 callBatchTasks 加载数据</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>qfQbsCellDao<span class=\"token punctuation\">.</span><span class=\"token function\">callBatchTasks</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    qfQbsCellDao</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428162626384.png\" alt=\"image-20220428162626384\" /></p>\n<p>共 7373ms</p>\n<ol start=\"2\">\n<li>直接 createOrUpdate</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            qfQbsCellDao</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428162925869.png\" alt=\"image-20220428162925869\" /></p>\n<p>共 29319ms</p>\n<ol start=\"3\">\n<li>使用 AndroidDatabaseConnection 一次提交事务</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// ORMLite 的数据连接封装类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">AndroidDatabaseConnection</span> adc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AndroidDatabaseConnection</span><span class=\"token punctuation\">(</span>baseDBHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getWritableDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        qfQbsCellDao<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>adc<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 存储点名称为 create_claxx</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Savepoint</span> sp <span class=\"token operator\">=</span> adc<span class=\"token punctuation\">.</span><span class=\"token function\">setSavePoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Create_Update_Cell\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            qfQbsCellDao</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        adc<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428163708217.png\" alt=\"image-20220428163708217\" /></p>\n<p>共 7574ms</p>\n",
            "tags": [
                "Android",
                "数据库"
            ]
        },
        {
            "id": "https://log992.cn/android/%E5%BD%93%E5%89%8DAPP%E8%B7%B3%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8/",
            "url": "https://log992.cn/android/%E5%BD%93%E5%89%8DAPP%E8%B7%B3%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8/",
            "title": "当前APP跳转第三方应用",
            "date_published": "2022-04-13T02:14:55.000Z",
            "content_html": "<blockquote>\n<p>在应用开发的过程中，需要从当前应用跳转到其他 APP 的场景也是存在的。</p>\n</blockquote>\n<h4 id=\"判断app是否安装\"><a class=\"anchor\" href=\"#判断app是否安装\">#</a> 判断 APP 是否安装</h4>\n<p>在跳转第三方 APP 之前，我们必须判断第三方 APP 是否安装，一般来说有两种方式。</p>\n<ol>\n<li>可以通过获取某个应用信息的存在来判断是否安装</li>\n</ol>\n<pre><code class=\"language-Kotlin\">fun isAppInstalled(context: Context, packageName: String): Boolean &#123;\n        val packageManager = context.packageManager\n        var isInstalled = false\n        try &#123;\n            val pInfo = packageManager.getPackageInfo(packageName, PackageManager.GET_GIDS)\n            isInstalled = pInfo != null\n        &#125; catch (e: Exception) &#123;\n        &#125;\n        return isInstalled\n    &#125;\n</code></pre>\n<ol start=\"2\">\n<li>通过获取应用列表对比判断</li>\n</ol>\n<pre><code class=\"language-Kotlin\">fun isAppInstalled2(context: Context, packageName: String): Boolean &#123;\n        val packageManager = context.packageManager\n        // 获取所有已安装程序的包信息\n        val pInfo = packageManager.getInstalledPackages(0)\n        for (i in pInfo.indices) &#123;\n            // 循环判断是否存在指定包名\n            if (pInfo[i].packageName.equals(packageName, ignoreCase = true)) &#123;\n                return true\n            &#125;\n        &#125;\n        return false\n    &#125;\n</code></pre>\n<h4 id=\"跳转\"><a class=\"anchor\" href=\"#跳转\">#</a> 跳转</h4>\n<ol>\n<li>跳转启动 APP</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 启动App\n     * @param context\n     */\n    fun launchApp(context: Context, packageName: String) &#123;\n        // 判断是否安装过App，否则去市场下载\n        if (isAppInstalled(context, packageName)) &#123;\n            context.startActivity(context.packageManager.getLaunchIntentForPackage(packageName))\n        &#125; else &#123;\n            InsAlertDialog.confirm(context, &quot;消息&quot;, &quot;是否下载该组件？下载过程中会连接网络，请确保在wifi下进行。&quot;, &#123; dialog, which -&gt; goToDownloadApp(context, packageName) &#125;) &#123; dialog, which -&gt; &#125;\n        &#125;\n    &#125;\n</code></pre>\n<p>通过 <code>context.packageManager.getLaunchIntentForPackage(packageName)</code>  方法获取跳转应用的 launcherActivity 的 intent 信息，从而实现跳转。</p>\n<ol start=\"2\">\n<li>跳转应用的特定界面</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 启动App特定界面\n     * @param context\n     */\n    fun launchApp(context: Context, packageName: String, activityName: String, destAction: String) &#123;\n        // 判断是否安装过App，否则去市场下载\n        if (isAppInstalled(context, packageName)) &#123;\n            val intent = Intent()\n            intent.component = ComponentName(packageName, activityName)\n            intent.action = destAction\n            context.startActivity(intent)\n        &#125; else &#123;\n            InsAlertDialog.confirm(context, &quot;消息&quot;, &quot;是否下载该组件？下载过程中会连接网络，请确保在wifi下进行。&quot;, &#123; _, _ -&gt; goToDownloadApp(context, packageName) &#125;) &#123; _, _ -&gt; &#125;\n        &#125;\n    &#125;\n</code></pre>\n<p>通过指定对应 APP 中的具体 Activity 的全类名显式跳转，或者使用 action 隐式跳转都可以达到我们的目的。</p>\n<h4 id=\"app下载\"><a class=\"anchor\" href=\"#app下载\">#</a> APP 下载</h4>\n<ol>\n<li>直接应用市场下载<br />\n通过应用的包名在应用市场查询</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 这里是进入应用商店，下载指定APP的方法。\n     */\n    private fun goToMarket(context: Context, packageName: String) &#123;\n        val uri: Uri = Uri.parse(&quot;market://details?id=$packageName&quot;)\n        val goToMarket = Intent(Intent.ACTION_VIEW, uri)\n        try &#123;\n            context.startActivity(goToMarket)\n        &#125; catch (e: java.lang.Exception) &#123;\n        &#125;\n    &#125;\n</code></pre>\n<ol start=\"2\">\n<li>通过应用提供的直链下载（这里就不多加赘述了）</li>\n</ol>\n<h4 id=\"目标应用的处理\"><a class=\"anchor\" href=\"#目标应用的处理\">#</a> 目标应用的处理</h4>\n<ol>\n<li>隐式跳转需要给 activity 添加特定的 action</li>\n<li>为了桌面的整洁，有些目标应用不需要显示桌面图标，可以对启动 activity 的 category 进行处理，一般来说，我们默认的启动 activity 的 category 是 <code>android.intent.category.LAUNCHER</code> , 具体如下</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activity</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.app.launcher.LauncherActivity<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>action</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.action.MAIN<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>category</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.category.LAUNCHER<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activity</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>去除 <code> &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</code>  这一行的显示就能使桌面图标不显示了，注意：Android Studio 直接 Run 的话会报错，因为找不到启动的 category，但是不影响打包安装。同理，我们在使用默认方法跳转的时候，这种情况下 <code>getLaunchIntentForPackage(packageName)</code>  方法会返回 null，因此在使用已隐藏图标的 APP 作为目标应用时，不能使用这种方法获取跳转的 intent。</p>\n",
            "tags": [
                "Android",
                "APP"
            ]
        },
        {
            "id": "https://log992.cn/harmony/%E5%88%9D%E5%AD%A6Harmony/",
            "url": "https://log992.cn/harmony/%E5%88%9D%E5%AD%A6Harmony/",
            "title": "初学Harmony",
            "date_published": "2022-04-01T05:49:55.000Z",
            "content_html": "<blockquote>\n<p>最近研究鸿蒙开发，记录下自己的一些心得</p>\n</blockquote>\n<h3 id=\"项目配置\"><a class=\"anchor\" href=\"#项目配置\">#</a> 项目配置</h3>\n<p>1. 大致结构与 Android 的项目结构相似</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114456010.png\" alt=\"image-20220401114456010\" /></p>\n<p>2.Harmony 没有 <code>Manifeest.xml</code>  文件，通过 <code>config.json</code>  文件进行配置</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114737192.png\" alt=\"image-20220401114737192\" /></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114757400.png\" alt=\"image-20220401114757400\" /></p>\n<p>切换到 Ohos（类比 Android 视图）视图时，所有的配置文件会放置在 <code>configuration</code>  目录下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"app\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"bundleName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"vendor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wuhanins\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"deviceConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"network\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"cleartextTraffic\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">\"package\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".MyApplication\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">\"mainAbility\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo.MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">\"deviceType\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token string\">\"tablet\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token string\">\"tv\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token string\">\"wearable\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token string\">\"car\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token property\">\"distro\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">\"deliveryWithInstall\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">\"moduleName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">\"moduleType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"installationFree\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token property\">\"reqPermissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ohos.permission.INTERNET\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token property\">\"reason\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:permreason_internet\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"usedScene\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token property\">\"ability\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"com.wuhanins.harmonydemo.MainAbility\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          <span class=\"token property\">\"when\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">\"abilities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token property\">\"skills\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token property\">\"entities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>              <span class=\"token string\">\"entity.system.home\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token property\">\"actions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>              <span class=\"token string\">\"action.system.home\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>              <span class=\"token string\">\"action.web\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token property\">\"orientation\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"unspecified\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token property\">\"visible\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$media:icon\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:mainability_description\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:entry_MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"page\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token property\">\"launchType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standard\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2.1 首先是 <code>app</code>  节点， <code>bundleName</code>  类比 <code>applicationId</code>  作为包名， <code>vendor</code>  作为供应商，剩下的就是版本信息了。</p>\n<p>2.2  <code>deviceConfig</code>  可以为空，目前我添加了可以使用 HTTP 协议请求网络。</p>\n<p>2.3  <code>module</code>  存储项目模块信息， <code>name</code>  对应 <code>application</code>  的 <code>name</code> , 请求权限可以放在 <code>reqPermissions</code>  节点中，普通权限直接使用 <code>name</code>  获取即可，敏感权限需要配置请求的原因和使用场景。</p>\n<p>2.4  <code>abilities</code>  类似于 <code>activity</code>  节点，所有的页面，服务，都可以放到这里，根据不同的 <code>type</code>  确定当前的 <code>Ability</code>  是什么类型， <code>page</code> ， <code>service</code> , <code>data</code>  分别代表了不同作用的 <code>Ability</code></p>\n<p>未完待续...</p>\n",
            "tags": [
                "鸿蒙",
                "Harmony"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "不忘初心，方得始终",
    "icon": "https://log992.cn/images/favicon.ico",
    "description": "一个简简单单的Android开发",
    "home_page_url": "https://log992.cn",
    "items": [
        {
            "id": "https://log992.cn/play/Hexo%E9%97%AE%E9%A2%98%E5%BD%92%E6%80%BB/",
            "url": "https://log992.cn/play/Hexo%E9%97%AE%E9%A2%98%E5%BD%92%E6%80%BB/",
            "title": "Hexo问题归总",
            "date_published": "2023-05-18T07:51:55.000Z",
            "content_html": "<blockquote>\n<p>使用 GitHub 的 Pages 搭建了自己的博客并使用了 <code>Shoka</code>  主题</p>\n</blockquote>\n<h4 id=\"显示视频\"><a class=\"anchor\" href=\"#显示视频\">#</a> 显示视频</h4>\n<p>目前在 markdown 中使用的是 <code>video</code>  标签来显示视频，代码如下</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token attr-name\">controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://image.log1992.com/WeChat_20180919180323.mp4<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://log1992.com/usr/themes/handsome/usr/img/sj/4.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在 Typora 中的预览效果如下</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518162916349.png\" alt=\"\" /></p>\n<p>但是 <code>Shoka</code>  主题使用的是 <code>hexo-renderer-multi-markdown-it</code>  渲染器，导致在最终显示的时候会直接显示成 <code>HTML</code>  代码，查看主题作者<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">博客</span>后，发现了使用 <code>Hexo Tag</code>  的方法，但是作者的代码示例只有 <code>audio</code>  的，在 F12 后总算是搞清了实际使用方法</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518165257203.png\" alt=\"\" /></p>\n<p>Tips: 由于主题在代码块中写 <code>media video</code>  会直接加载视频，所以这里是截图展示</p>\n<p>效果如下</p>\n<p><div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"视频效果\",\"url\":[\"https://image.log1992.com/WeChat_20180919180323.mp4\"]}]'></div></div></p>\n<p>注意：编辑这个最好在其他文本编辑器，否则会显示成这样</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518163509154.png\" alt=\"\" /></p>\n<h4 id=\"图床问题\"><a class=\"anchor\" href=\"#图床问题\">#</a> 图床问题</h4>\n<p>部署在本地时，所有图片加载正常。推送到 GitHub 后，图片就都挂了。看了下，作者使用的图床为新浪图床，目前新浪图床因为防盗链，已经用不了了。但是个人很喜欢自带的二次元小姐姐图片，所以想继续使用。查遍了各种方法，终于找到一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82MDQ0NzM3MzI/dXRtX2lkPTA=\">靠谱点的</span></p>\n<p>这里我使用的是百度的图片缓存服务</p>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token header-name keyword\">https</span><span class=\"token punctuation\">:</span><span class=\"token header-value\">//image.baidu.com/search/down?url=图片地址</span></span></pre></td></tr></table></figure><p>进入 <code>hexo</code>  -  <code>themes</code>  -  <code>shoka</code>  -  <code>scripts</code>  -  <code>helpers</code>   ，打开 <code>engine.js</code>  文件</p>\n<p>大概第 30 行，修改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token string\">'https://image.baidu.com/search/down?url=https://tva'</span><span class=\"token operator\">+</span>randomServer<span class=\"token operator\">+</span><span class=\"token string\">'.sinaimg.cn/'</span><span class=\"token operator\">+</span>size<span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span>img</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>重新 <code>hexo clean</code>   -&gt;  <code>hexo g</code>   -&gt;  <code>hexo d</code>  ，等待部署完成后问题得到解决</p>\n<h4 id=\"评论系统修复\"><a class=\"anchor\" href=\"#评论系统修复\">#</a> 评论系统修复</h4>\n<p><code>Shoka</code>  使用的魔改 <code>valine</code>  ，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">GitHub</span> 上显示上一次维护还是在三年前，在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmxlYW5jbG91ZC5hcHAv\"> LeanCloud</span> 注册国际版后，进入 <code>应用管理</code>  -  <code>应用凭证</code> 得到 <code>AppID</code>  和 <code>AppKey</code> ，填入 <code>Shoka</code>  的 <code>_config.yml</code>  中，</p>\n<p>但是发现 <code>leanCloud</code>  相关的接口都报错了，在 <code>应用管理</code>  -  <code>安全中心</code> 找到 <code>Web 安全域名</code> ，将自己的域名填进去后，发现依然报错，查询后发现是 <code>REST API 服务器地址</code> 不对，使用系统提供的 <code>AppID</code>  前八位的域名也是没有效果。</p>\n<p>直接在 <code>应用管理</code>  -  <code>域名绑定</code> 中添加域名</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518171418319.png\" alt=\"\" /></p>\n<p>在域名解析管理后台添加 CNAME 验证通过后，在 <code>Shoka</code>  的 <code>_config.yml</code>  中找到 <code>valine</code>  配置组，修改 <code>serverURLs</code>  为我们的域名即可。</p>\n<h4 id=\"部署到github自定义域名绑定\"><a class=\"anchor\" href=\"#部署到github自定义域名绑定\">#</a> 部署到 GitHub 自定义域名绑定</h4>\n<p>在 GitHub 仓库的 <code>Settings</code> -  <code>Pages</code>  界面的 <code>Custom domain</code>  填入自己的域名后 <code>save</code></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518215309525.png\" alt=\"\" /></p>\n<p>去域名解析管理后台添加 CNAME 验证通过后就可以通过域名访问我们的博客了，但是每次更新博客，使用 <code>hexo d</code>  部署到 GitHub，发现域名有失去绑定了，需要重新绑定，很麻烦。在 <code>Code</code>  标签页我们发现有一个 <code>CNAME</code>  文件，里面就是我们的自定义域名。</p>\n<p>到 <code>hexo</code>  -  <code>source</code>  目录下新建 <code>CNAME</code>  文件，文件中写入我们的自定义域名，保存，文件如果有后缀名，记得去掉。重新 <code>hexo clean</code>  -&gt;  <code>hexo g</code>  -&gt;  <code>hexo d</code>  后，自定义域名就会自动在部署到时候关联上</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230518215916017.png\" alt=\"\" /></p>\n",
            "tags": [
                "折腾",
                "Hexo",
                "博客"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%97%A0%E6%84%9F%E9%87%8D%E8%BD%BDActivity/",
            "url": "https://log992.cn/android/%E6%97%A0%E6%84%9F%E9%87%8D%E8%BD%BDActivity/",
            "title": "无感重载Activity",
            "date_published": "2023-04-14T10:02:55.000Z",
            "content_html": "<blockquote>\n<p>开发时偶尔会遇到需要重载界面的情况，但是单纯的 <code>finish</code>  会有动画，导致 APP 展现很突兀。</p>\n</blockquote>\n<h3 id=\"去掉动画效果\"><a class=\"anchor\" href=\"#去掉动画效果\">#</a> 去掉动画效果</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">overridePendingTransition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token function\">getIntent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_START_FLAG</span><span class=\"token punctuation\">,</span><span class=\"token constant\">FLAG_RESTART_ACTIVITY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_TABLE_ID</span><span class=\"token punctuation\">,</span>mTableId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INTENT_KEY_RESTART_BY</span><span class=\"token punctuation\">,</span>onlySave<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">overridePendingTransition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以在添加参数在重新启动后做一些初始化操作。</p>\n",
            "tags": [
                "Android",
                "Activity",
                "重载"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90%E8%8E%B7%E5%8F%96/",
            "url": "https://log992.cn/android/%E6%82%AC%E6%B5%AE%E7%AA%97%E6%9D%83%E9%99%90%E8%8E%B7%E5%8F%96/",
            "title": "悬浮窗权限获取",
            "date_published": "2023-04-04T09:54:55.000Z",
            "content_html": "<blockquote>\n<p>做一个应用 Log 的实时显示，发现需要用到 <code>SYSTEM_ALERT_WINDOW</code>  权限，视同通用方式获取后发现并不行。</p>\n</blockquote>\n<h3 id=\"普通权限获取流程\"><a class=\"anchor\" href=\"#普通权限获取流程\">#</a> 普通权限获取流程</h3>\n<p>我们在项目中采用的是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Blcm1pc3Npb25zLWRpc3BhdGNoZXIvUGVybWlzc2lvbnNEaXNwYXRjaGVy\"> PermissionsDispatcher</span>, 使用方式也很简单，只需要在类上注解 <code>@RuntimePermissions</code>  , 写一个 <code>public void</code>  的方法，例如 <code>initAfterPermissionChecked</code> , 此方法中写权限获取后的操作即可，方法上用 <code>@NeedsPermission(Manifest.permission.CAMERA)</code>  注解即可，多个权限可以写成下面的形式</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@NeedsPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">READ_EXTERNAL_STORAGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">WRITE_EXTERNAL_STORAGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_COARSE_LOCATION</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_FINE_LOCATION</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>编译代码后自动生成 <code>类名 + PermissionsDispatcher</code>  的 Java 文件，例如 <code>LaunchActivityPermissionsDispatcher</code> , 在需要获取权限的地方直接调用 <code>方法名 + WithPermissionCheck(this);</code>  生成的 Java 文件中已经给你生成好了这个方法，例如 <code>initAfterPermissionCheckedWithPermissionCheck()</code> , 其他针对各种授权与否的处理就不细说了。</p>\n<h3 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h3>\n<p>对于 <code>SYSTEM_ALERT_WINDOW</code>  权限，我本想采用相同的方法处理，直接在权限列表后加入 <code>Manifest.permission.SYSTEM_ALERT_WINDOW</code> ，结果编译后直接报错</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Method</span> '<span class=\"token function\">initAfterPermissionChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>' defines 'android<span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_ALERT_WINDOW</span>' <span class=\"token keyword\">with</span> <span class=\"token namespace\">other</span> permissions at the same time<span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>根据这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Blcm1pc3Npb25zLWRpc3BhdGNoZXIvUGVybWlzc2lvbnNEaXNwYXRjaGVyL2lzc3Vlcy80MzE=\"> issues</span></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230404173844161.png\" alt=\"\" /></p>\n<p>大概意思就是 <code>WRITE_SETTINGS</code>  和 <code>SYSTEM_ALERT_WINDOW</code>  这类权限不能作为普通权限申请流程的一部分一起申请，因为我们一般需要重新跳转到设置界面去授予权限。</p>\n<h3 id=\"解决\"><a class=\"anchor\" href=\"#解决\">#</a> 解决</h3>\n<p>在新的类中获取 <code>SYSTEM_ALERT_WINDOW</code>  权限，同样的流程，类名上注解 <code>@RuntimePermissions</code>  ，新建 <code>public void </code> 方法并注解 <code>@NeedsPermission(Manifest.permission.SYSTEM_ALERT_WINDOW)</code> ，这里我写的是</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@NeedsPermission</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Manifest</span><span class=\"token punctuation\">.</span>permission<span class=\"token punctuation\">.</span><span class=\"token constant\">SYSTEM_ALERT_WINDOW</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkSystemAlertPermission</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>获取权限到地方直接用的</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>获取。编译运行后发现存在一个问题，那就是这个权限会直接跳转到设置界面，我们需要给个 <code>Dialog</code>  让用户选择</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"显示Log需要在设置中打开系统悬浮窗权限，是否打开？\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setPositiveButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                        <span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setNegativeButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们同样不能再进入的时候每次都弹窗让用户选择，毕竟该权限可能已经授予了。于是我选择了使用 <code>ContextCompat</code>  或者 <code>PermissionChecker</code>  的 <code>checkSelfPermission()</code>  方法来校验当前权限是否获取到，但是每次获取的值都是 <code>PackageManager.PERMISSION_DENIED</code> , 于是我们采用另一种方法去获取权限是否授予</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Settings</span><span class=\"token punctuation\">.</span><span class=\"token function\">canDrawOverlays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>方法注释如下</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230404175013624.png\" alt=\"\" /></p>\n<p>至此，我们就能正常获取 <code>SYSTEM_ALERT_WINDOW</code>  权限了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Settings</span><span class=\"token punctuation\">.</span><span class=\"token function\">canDrawOverlays</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">AlertDialog<span class=\"token punctuation\">.</span>Builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"显示Log需要在设置中打开系统悬浮窗权限，是否打开？\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setPositiveButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确定\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                        <span class=\"token class-name\">LoginActivityPermissionsDispatcher</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkSystemAlertPermissionWithPermissionCheck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">setNegativeButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> which<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                        dialog<span class=\"token punctuation\">.</span><span class=\"token function\">dismiss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Android",
                "权限"
            ]
        },
        {
            "id": "https://log992.cn/android/Bitmap%E6%93%8D%E4%BD%9C%E5%83%8F%E7%B4%A0/",
            "url": "https://log992.cn/android/Bitmap%E6%93%8D%E4%BD%9C%E5%83%8F%E7%B4%A0/",
            "title": "Bitmap操作像素",
            "date_published": "2023-03-23T05:45:55.000Z",
            "content_html": "<blockquote>\n<p>最近在做公司项目时，需要对 bitmap 重新计算像素点颜色，在 <code>onDraw()</code>  中处理时，记录了以下方法。</p>\n</blockquote>\n<h3 id=\"setpixel方法\"><a class=\"anchor\" href=\"#setpixel方法\">#</a> setPixel 方法</h3>\n<p>我们首先遍历 bitmap 所有的像素点，通过 <code>getPixel()</code>  获取当前像素点的颜色，然后根据特定算法，计算出最终应该展示的实际颜色。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> x1<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token keyword\">int</span> oldColor <span class=\"token operator\">=</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getPixel</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>oldColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">int</span> defaultAlpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>defaultColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">int</span> rollPass <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">/</span> defaultAlpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">></span> mMaxRollPass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    rollPass <span class=\"token operator\">=</span> mMaxRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token comment\">//region 计算面积</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token class-name\">Integer</span> area <span class=\"token operator\">=</span> mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                area<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token comment\">//endregion</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">int</span> newColor <span class=\"token operator\">=</span> <span class=\"token class-name\">RollingMonitorUtil<span class=\"token punctuation\">.</span>GetMappingColor</span><span class=\"token punctuation\">(</span>mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mMaxRollPass <span class=\"token operator\">:</span> mMaxVibrateRollPass<span class=\"token punctuation\">,</span> rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">setPixel</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在像素较多时，这个方法会比较耗时，会有性能问题。</p>\n<h3 id=\"copypixelstobuffer方法\"><a class=\"anchor\" href=\"#copypixelstobuffer方法\">#</a> copyPixelsToBuffer 方法</h3>\n<p>在 C# 中有 <code>LockBits</code>  方法加快速度，在 Android 中我们可以使用 <code>copyPixelsToBuffer</code>  和 <code>copyPixelsFromBuffer</code>  来加速像素操作。</p>\n<p>查看源码，我们看到最主要的其实是这个方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nativeCopyPixelsToBuffer</span><span class=\"token punctuation\">(</span>mNativePtr<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">native</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nativeCopyPixelsToBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> nativeBitmap<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                                                        <span class=\"token class-name\">Buffer</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>它是一个 <code>native</code>  修饰的方法，即 <code>JNI</code>  调用的方法，使用底层调用效率更高。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getRowBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> buf <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">copyPixelsToBuffer</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> byt <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> defaultAlpha <span class=\"token operator\">=</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>defaultColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ctr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ctr <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> ctr <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">//access array in form of argb. for ex. byt[0] is 'r', byt[1] is 'g' and so on..</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">int</span> rollPass <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">/</span> defaultAlpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> maxRollPass <span class=\"token operator\">=</span> mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mMaxRollPass <span class=\"token operator\">:</span> mMaxVibrateRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rollPass <span class=\"token operator\">></span> maxRollPass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                rollPass <span class=\"token operator\">=</span> maxRollPass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">//region 计算面积</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">Integer</span> area <span class=\"token operator\">=</span> mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            area<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            mTrackPointAreaMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>rollPass<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">int</span> newColor <span class=\"token operator\">=</span> mCurrentMode <span class=\"token operator\">==</span> <span class=\"token constant\">MODE_ROLLING</span> <span class=\"token operator\">?</span> mRollColorPalette<span class=\"token punctuation\">[</span>rollPass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> mVibrateColorPalette<span class=\"token punctuation\">[</span>rollPass<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            byt<span class=\"token punctuation\">[</span>ctr <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span>newColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> retBuf <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span>byt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        compositeBitmap<span class=\"token punctuation\">.</span><span class=\"token function\">copyPixelsFromBuffer</span><span class=\"token punctuation\">(</span>retBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>因为我构建的 bitmap 采用的是以下方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Bitmap</span> compositeBitmap <span class=\"token operator\">=</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBitmap</span><span class=\"token punctuation\">(</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bitmap<span class=\"token punctuation\">.</span>Config</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ARGB_8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>我们使用了 ARGB_8888，每个像素占了 4 位，可以通过下面方法获取数组大小：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr></table></figure><p>循环遍历后取到 RGB 和相应的透明度，然后就可以针对当前的颜色做统计或者是批量转换操作了。</p>\n",
            "tags": [
                "Android",
                "bitmap",
                "像素"
            ]
        },
        {
            "id": "https://log992.cn/android/ADB%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "url": "https://log992.cn/android/ADB%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/",
            "title": "ADB命令简单使用",
            "date_published": "2023-02-09T03:18:55.000Z",
            "content_html": "<h4 id=\"查看当前连接的设备\"><a class=\"anchor\" href=\"#查看当前连接的设备\">#</a> 查看当前连接的设备</h4>\n<blockquote>\n<p>adb devices</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/2020/10/1772551834.png\" alt=\"\" /><br />\n可以看到目前我的电脑连接了两个设备</p>\n<h4 id=\"安装-电脑上的apk\"><a class=\"anchor\" href=\"#安装-电脑上的apk\">#</a> 安装 电脑上的 apk</h4>\n<blockquote>\n<p>adb intall XXXX</p>\n</blockquote>\n<p>XXXX 代表 apk 路径，可以直接拖进来<br />\n<img data-src=\"https://image.log1992.com/2020/10/183797954.png\" alt=\"\" /><br />\n一般来说 Performing Streamed Install 的时候需要你在设备上手动确认是否安装</p>\n<h4 id=\"多设备安装-apk\"><a class=\"anchor\" href=\"#多设备安装-apk\">#</a> 多设备安装 apk</h4>\n<blockquote>\n<p>adb -s deviceId install XXXX</p>\n</blockquote>\n<p>1.devceId 可以通过 adb devices 获得<br />\n 2.XXXX 代表 apk 路径，可以直接拖进来<br />\n当你电脑连接 了 多个设备的时候，用 adb install 命令安装会报错<br />\n<img data-src=\"https://image.log1992.com/2020/10/1643299931.png\" alt=\"\" /><br />\n此时需要我们手动指定相应的设备来安装<br />\n<img data-src=\"https://image.log1992.com/2020/10/644570005.png\" alt=\"\" /></p>\n<h4 id=\"卸载\"><a class=\"anchor\" href=\"#卸载\">#</a> 卸载</h4>\n<blockquote>\n<p>adb uninstall applicationId</p>\n</blockquote>\n<p>applicationId 为当前 APP 的 applicationId<br />\n 一般情况下我们可以长按桌面的图标或者拖动卸载当前的 APP，但是偶尔会遇到卸载不干净的情况，类似华为手机开了系统分身这种，再次安装的时候会提示 APP 已存在，无法 安装。因此我们需要通过命令来将其卸载干净<br />\n<img data-src=\"https://image.log1992.com/2020/10/3228692174.png\" alt=\"\" /><br />\n当然，如果你是多设备的话，别忘了在 adb 后面添加 -s deviceId 来选择卸载特定设备上的该 APP</p>\n<h4 id=\"传输文件\"><a class=\"anchor\" href=\"#传输文件\">#</a> 传输文件</h4>\n<ol>\n<li>\n<p>从电脑传输到设备</p>\n<blockquote>\n<p>adb push 文件全路径 /sdcard/ 目标路径</p>\n</blockquote>\n<p>一般来说在调用 <code>adb install</code>  时，内部会先将 apk 文件推送到设备的临时文件夹内，再执行安装</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209105558678.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>从设备传输到电脑</p>\n<blockquote>\n<p>adb pull /sdcard/ 文件路径 电脑端存放路径</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209105822952.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h4 id=\"操作设备应用\"><a class=\"anchor\" href=\"#操作设备应用\">#</a> 操作设备应用</h4>\n<ol>\n<li>\n<p>清除缓存数据</p>\n<blockquote>\n<p>adb shell pm clear 包名</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110416889.png\" alt=\"\" /></p>\n<p>这个会清除应用所有数据</p>\n</li>\n<li>\n<p>删除设备文件</p>\n<blockquote>\n<p>adb shell rm /sdcard/ 文件路径 -f</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110442562.png\" alt=\"\" /></p>\n<p>这个不会出现 success 提示</p>\n</li>\n<li>\n<p>获取设备分辨率</p>\n<blockquote>\n<p>adb shell vm size</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209111738141.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>获取屏幕密度</p>\n<blockquote>\n<p>adb shell wm density</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110648500.png\" alt=\"\" /></p>\n</li>\n</ol>\n<blockquote>\n<p>还有很多 <code>adb shell pm</code>  相关的操作，具体可看下图</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230209110858336.png\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "adb"
            ]
        },
        {
            "id": "https://log992.cn/play/Monterey%E5%B1%8F%E8%94%BD%E6%9B%B4%E6%96%B0/",
            "url": "https://log992.cn/play/Monterey%E5%B1%8F%E8%94%BD%E6%9B%B4%E6%96%B0/",
            "title": "Monterey屏蔽更新",
            "date_published": "2023-01-08T05:11:55.000Z",
            "content_html": "<blockquote>\n<p>最近系统更新到 Ventura，各种用着用着转圈圈，必须重启才能恢复正常，于是一怒之下重新安装了 Monterey，没有 Time Machine 备份，过程很难受。安装好后我们将系统升级屏蔽掉。</p>\n</blockquote>\n<h3 id=\"简单使用host屏蔽\"><a class=\"anchor\" href=\"#简单使用host屏蔽\">#</a> 简单使用 host 屏蔽</h3>\n<p>Mac 的 host 文件存在于 <code>/private/etc/hosts</code>  中，我们没有办法直接修改系统文件，可以将文件拷贝出来后修改，然后复制进去，当然也可以使用终端进行操作。</p>\n<ol>\n<li>\n<p>使用命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /private/etc/hosts</pre></td></tr></table></figure><p>使用 nano 编辑器单纯是比较习惯这个，当然我们也可以使用 vim</p>\n<p>复制以下代码进去</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## Mac Software Update (sysin)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>127.0.0.1 swdist.apple.com</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>127.0.0.1 swscan.apple.com</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>127.0.0.1 swcdn.apple.com</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>127.0.0.1 gdmf.apple.com</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>127.0.0.1 mesu.apple.com</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>127.0.0.1 xp.apple.com</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108121753352.png\" alt=\"\" /></p>\n<p>Ctrl + x 保存后即可</p>\n</li>\n<li>\n<p>使用软件<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHM=\"> SwitchHosts</span></p>\n<p>在 GitHub 的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHMvcmVsZWFzZXM=\"> release 界面</span>下载对应自己设备的安装包，这里我们下载的是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sZGovU3dpdGNoSG9zdHMvcmVsZWFzZXMvZG93bmxvYWQvdjQuMS4yL1N3aXRjaEhvc3RzX21hY19hcm02NF80LjEuMi42MDg2LmRtZw==\"> SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></p>\n<p>安装完成后打开软件，左上角 + 新建一个</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108122238085.png\" alt=\"\" /></p>\n<p>最后打开右侧小开关即可</p>\n<p>通过 host 屏蔽更新会显示如下图</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108122403423.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h3 id=\"清除系统更新标记\"><a class=\"anchor\" href=\"#清除系统更新标记\">#</a> 清除系统更新标记</h3>\n<ol>\n<li>\n<p>临时清除系统更新标记</p>\n<p>如果已经检测到更新，可以使用如下方法临时去除更新通知标记。</p>\n<p>打开 “终端”，执行如下命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>defaults <span class=\"token function\">write</span> com.apple.systempreferences AttentionPrefBundleIDs <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Killall Dock</pre></td></tr></table></figure><p>小红点就消失了</p>\n<p>但是在 Monterey 中，再次进入系统更新，虽然不会提示更新，但是小红点会重复出现</p>\n</li>\n<li>\n<p>修改权限</p>\n<ol>\n<li>\n<p>确保 FileVault 已经禁用（默认禁用），在 ” &gt;&gt; 系统偏好设置… &gt;&gt; 安全性和隐私 &gt;&gt; 文件保险箱” 查看确认。</p>\n</li>\n<li>\n<p>关机状态下，长按开机键，出现设置选项后松开，选中选项图标，点击继续，进入后选择当前账户，输入密码，解锁后点击左上角实用工具，选择终端。</p>\n</li>\n<li>\n<p>首先查看 <code>csrutil</code>  状态</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil status</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108124204956.png\" alt=\"\" /></p>\n<p>这个是我已经关闭了的，没有关闭最后就是现实 enabled</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil disable</pre></td></tr></table></figure><p>等待两三秒，就会提示关闭成功</p>\n<p>再将 <code>authenticated-root</code>  关闭</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csrutil authenticated-root disable</pre></td></tr></table></figure><p>不关这个创建快照的时候会出现错误</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108124721068.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>正常重启到 macOS</p>\n</li>\n<li>\n<p>通过执行  <code>mount</code>  命令查找要挂载的设备</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108124820195.png\" alt=\"\" /></p>\n<p>看到第一行的根目录对应的是 <code>/dev/disk3s31</code> ，那么应该挂载的设备名称是  <code>/dev/disk3s3</code> ，s1 表示 “Snapshot 1”（APFS 快照）</p>\n</li>\n<li>\n<p>创建一个新目录用于挂载，我们选择在用户目录下创建</p>\n<p>例如：~/mount</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"><span>l</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-m777</span> ~/mount</pre></td></tr></table></figure></li>\n<li>\n<p>执行挂载</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> <span class=\"token parameter variable\">-o</span> nobrowse <span class=\"token parameter variable\">-t</span> apfs /dev/disk3s3 ~/mount</pre></td></tr></table></figure><p>后面两个参数分别是我们刚刚查到的挂载目录和创建的新目录</p>\n</li>\n<li>\n<p>在新目录下修改文件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/mount</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager</pre></td></tr></table></figure></li>\n<li>\n<p>执行 <code>sudo bless --folder ~/mount/System/Library/CoreServices --bootefi --create-snapshot</code></p>\n<p>注意，这里要先挂载后再执行，直接执行会报错找不到节点</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108125541075.png\" alt=\"\" /></p>\n<p><strong>在 M 芯片的 Mac 上，我们无法使用上述命令完成快照生成</strong></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108125827753.png\" alt=\"\" /></p>\n<p><strong>我们需要用到以下命令：</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> bless <span class=\"token parameter variable\">--mount</span> ~/mount/System/Library/CoreServices/ <span class=\"token parameter variable\">--setBoot</span> --create-snapshot</pre></td></tr></table></figure></li>\n<li>\n<p>重启电脑</p>\n</li>\n<li>\n<p>验证</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/Resources/SoftwareUpdateNotificationManager.app/Contents/MacOS/SoftwareUpdateNotificationManager</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20230108130457229.png\" alt=\"\" /></p>\n<p>此时，即使不做任何屏蔽操作，可以正常检测软件更新，但不会出现更新标记（红点数字 1）</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20230108130641625.png\" alt=\"\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n",
            "tags": [
                "折腾",
                "Mac",
                "屏蔽更新"
            ]
        },
        {
            "id": "https://log992.cn/android/APK%E6%89%8B%E5%8A%A8%E7%AD%BE%E5%90%8D/",
            "url": "https://log992.cn/android/APK%E6%89%8B%E5%8A%A8%E7%AD%BE%E5%90%8D/",
            "title": "APK手动签名",
            "date_published": "2022-11-21T05:14:55.000Z",
            "content_html": "<blockquote>\n<p>最近发现新版本的 Android studio 打包 apk 时没有 V1 证书和 V2 证书选项了</p>\n</blockquote>\n<h3 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h3>\n<p>需要 Android SDK</p>\n<p>Mac 系统在 <code>/Users/logan/Library/Android/sdk</code>  下，我们需要的工具在 <code>build-tools</code>  目录中，</p>\n<p>需要 V3 版本签名的话需要 30.0.0 或更高版本</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8850112680.png\" alt=\"\" /></p>\n<p>我们主要用得到的是 <code>zipalign</code>  和 <code>aplsigner</code></p>\n<p>签名之前我们可以对 apk 进行校验，看是否存在签名：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./apksigner verify <span class=\"token parameter variable\">-v</span> srcApk</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8850851503.png\" alt=\"\" /></p>\n<p>可以看到返回了 <code>DOES NOT VERIFY</code> , 说明此时是没有签名的</p>\n<h3 id=\"签名\"><a class=\"anchor\" href=\"#签名\">#</a> 签名</h3>\n<ol>\n<li>压缩对齐 - 对齐未签名的 APK</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zipalign <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">4</span> srcApk desApk</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>zipalign <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">4</span> 源apk 输出apk</pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851446884.png\" alt=\"\" /></p>\n<p>输出 successful 即说明对齐完成</p>\n<ol start=\"2\">\n<li>\n<p>签名</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apksigner sign <span class=\"token parameter variable\">--ks</span> xxx.jks --ks-key-alias release <span class=\"token parameter variable\">--out</span> out.apk in.apk</pre></td></tr></table></figure><p><code>xxx.jks</code>  为签名文件，也可以是 <code>xxx.keystore</code> , <code>--ks-key-alias</code>  后面跟上当前渠道，签名文件存在多个渠道时，需要指定，单个渠道时不需要指定。</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851413976.png\" alt=\"\" /></p>\n<p>通过 <code>--out</code>  指定输出 apk 最后跟上需要签名的 apk 即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851658367.png\" alt=\"\" /></p>\n<p>回车后输入密码即可</p>\n<p>最后我们再校验下签名</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221109%E4%B8%8B%E5%8D%8851746584.png\" alt=\"\" /></p>\n<p>可以看到 V1,V2,V3 都有了</p>\n</li>\n</ol>\n",
            "tags": [
                "Android",
                "签名"
            ]
        },
        {
            "id": "https://log992.cn/android/Android%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/",
            "url": "https://log992.cn/android/Android%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/",
            "title": "Android签名证书转换",
            "date_published": "2022-11-11T04:01:55.000Z",
            "content_html": "<blockquote>\n<p>Android 签名证书一般为 jks 和 keystore 格式， <code>jks</code>  是在 <code>android studio</code>  里面生成的签名证书</p>\n<p><code>keystore</code>  是 <code>eclipse,Creator</code>  里面生成的。 两者在使用方式上没有什么区别，但是在算法上有一点点区别。</p>\n</blockquote>\n<h3 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h3>\n<p>需要 JDK 环境，配置好环境变量后，输入 <code>keytool</code></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88113018178.png\" alt=\"\" /></p>\n<h3 id=\"签名文件-keystore转换-jks\"><a class=\"anchor\" href=\"#签名文件-keystore转换-jks\">#</a> 签名文件 .keystore 转换 .jks</h3>\n<ol>\n<li>首先转换成 pkcs12</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> keystore文件路径 <span class=\"token parameter variable\">-destkeystore</span> 输出文件路径 <span class=\"token parameter variable\">-deststoretype</span> pkcs12</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/wuhanins.keystore <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/wuhanins.p12 <span class=\"token parameter variable\">-deststoretype</span> pkcs12</pre></td></tr></table></figure><p>回车后输入 p12 证书密码，确认 p12 证书密码，keystore 证书密码后即可生成 p12 证书</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88113750313.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>将 pkcs12 转换为 jks 文件</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> P12证书路径 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> 输出jks证书路径 <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/wuhanins.p12 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/wuhanins.jks <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>回车后依次输入新的 jks 证书密码，确认 jks 证书密码，p12 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88114324184.png\" alt=\"\" /></p>\n<p>至此，keystore 证书已经转换为 jks 证书</p>\n<h3 id=\"签名文件-jks-转换-keystore\"><a class=\"anchor\" href=\"#签名文件-jks-转换-keystore\">#</a> 签名文件 .jks 转换 .keystore</h3>\n<ol>\n<li>直接转换</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> jks文件路径 <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> 输出keystore文件路径</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.jks <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.keystore</pre></td></tr></table></figure><p>回车后依次输入新 keystore 证书密码，确认 keystore 证书密码，原始 jks 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88114857586.png\" alt=\"\" /></p>\n<p>至此直接从 jks 转换为 keysotre 完成</p>\n<ol start=\"2\">\n<li>jks 转换为 p12, 再从 p12 转换为 keysotre</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> jks文件路径 <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> p12文件路径</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.jks <span class=\"token parameter variable\">-srcstoretype</span> JKS <span class=\"token parameter variable\">-deststoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.p12</pre></td></tr></table></figure><p>回车后依次输入 p12 证书密码，确认 p12 证书密码，jks 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115431868.png\" alt=\"\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> p12文件路径 <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> .keystore文件路径 <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool <span class=\"token parameter variable\">-v</span> <span class=\"token parameter variable\">-importkeystore</span> <span class=\"token parameter variable\">-srckeystore</span> /Users/logan/Downloads/keyDir/pyh.p12  <span class=\"token parameter variable\">-srcstoretype</span> PKCS12 <span class=\"token parameter variable\">-destkeystore</span> /Users/logan/Downloads/keyDir/pyh.keystore <span class=\"token parameter variable\">-deststoretype</span> JKS</pre></td></tr></table></figure><p>回车后依次输入新的 keystore 证书密码，确认 keystore 证书密码，p12 证书密码即可</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115925832.png\" alt=\"\" /></p>\n<p>至此，keystore 证书转换完毕</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20221111%E4%B8%8A%E5%8D%88115957594.png\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "Android studio",
                "证书"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8FIleProvider/",
            "url": "https://log992.cn/android/%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8FIleProvider/",
            "title": "正确使用FIleProvider",
            "date_published": "2022-09-10T11:14:55.000Z",
            "content_html": "<h2 id=\"起因\"><a class=\"anchor\" href=\"#起因\">#</a> 起因</h2>\n<blockquote>\n<p>自动更新时，APP 覆盖安装失效了，由于先前测试调试都是手动覆盖安装，因此未发现问题</p>\n</blockquote>\n<p>## 错误定位<br />\n通过调试发现</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span></span>ActivityNotFoundException</span><span class=\"token operator\">:</span> <span class=\"token class-name\">No</span> <span class=\"token class-name\">Activity</span> found <span class=\"token keyword\">to</span> <span class=\"token namespace\">handle</span> <span class=\"token class-name\">Intent</span> <span class=\"token punctuation\">&#123;</span> act<span class=\"token operator\">=</span><span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>intent<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">.</span></span>VIEW</span> dat<span class=\"token operator\">=</span>file<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//storage/emulated/0/CESPIB/ces_pib.apk typ=application/vnd.android.package-archive flg=0x10000000 &#125;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Instrumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkStartActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2113</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Instrumentation</span><span class=\"token punctuation\">.</span><span class=\"token function\">execStartActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1739</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5343</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BaseFragmentActivityJB</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5284</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tat android<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>v4<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">startActivityForResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">859</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5714</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>Activity</span><span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">5682</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span><span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">166</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>access$<span class=\"token function\">300</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>wuhanins<span class=\"token punctuation\">.</span>ces_pib<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span>DownloadApkDialogFragment</span>$<span class=\"token number\">2.</span><span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DownloadApkDialogFragment</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Handler</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Handler</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">107</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>Looper</span><span class=\"token punctuation\">.</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Looper</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">213</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>ActivityThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivityThread</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">8147</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span>Method</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Native</span> <span class=\"token class-name\">Method</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>RuntimeInit</span>$<span class=\"token class-name\">MethodAndArgsCaller</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">513</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\tat <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>os<span class=\"token punctuation\">.</span></span>ZygoteInit</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZygoteInit</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">1100</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>具体错误出现在将文件转换为 Uri 跳转到安装 apk 的 intent 时出错，想了想，应该是 7.0 以后限制了 APP 对于文件 uri 的使用权限。果然，查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vYWJvdXQvdmVyc2lvbnMvbm91Z2F0L2FuZHJvaWQtNy4wLWNoYW5nZXM=\">官网</span>后发现了端倪:</p>\n<blockquote>\n<h3 id=\"在应用间共享文件\"><a class=\"anchor\" href=\"#在应用间共享文件\">#</a> 在应用间共享文件</h3>\n<p>对于面向 Android 7.0 的应用，Android 框架执行的 StrictMode API 政策禁止在您的应用外部公开 file:// URI。如果一项包含文件 URI 的 intent 离开您的应用，则应用出现故障，并出现 FileUriExposedException 异常。要在应用间共享文件，您应发送一项 content:// URI，并授予 URI 临时访问权限。进行此授权的最简单方式是使用 FileProvider 类。如需了解有关权限和共享文件的详细信息，请参阅共享文件。</p>\n</blockquote>\n<p>大意就是说文件的访问权限提高了，不能直接使用 &quot;file://&quot; 的方式来共享文件了，应该使用 &quot;content://&quot; URI 的方式来共享文件，并使用 FileProvider 类来授权。</p>\n<h2 id=\"处理方案\"><a class=\"anchor\" href=\"#处理方案\">#</a> 处理方案</h2>\n<p>一般情况下我们安装 apk 会这样操作</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_VIEW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">setFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_ACTIVITY_NEW_TASK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        mContext<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但 7.0 以上要求使用 FileProvider 来授权访问文件<br />\n根据官方的指引：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5nb29nbGUuY24vcmVmZXJlbmNlL2FuZHJvaWQvc3VwcG9ydC92NC9jb250ZW50L0ZpbGVQcm92aWRlcg==\">https://developer.android.google.cn/reference/android/support/v4/content/FileProvider</span> ，大概需要以下几个步骤：</p>\n<ul>\n<li>定义 FileProvider</li>\n<li>指定可用文件</li>\n<li>生成文件的 URI</li>\n<li>授予 URI 临时权限</li>\n<li>向另一个应用程序提供内容 URI</li>\n</ul>\n<p>##### 下面来一一介绍一下这几个步骤：</p>\n<ol>\n<li>定义 FileProvider<br />\n 在 AndroidManifest.xml 文件中注册 provider</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>provider</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.support.v4.content.FileProvider<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>authorities</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.wuhanins.ces_pib.provider<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>exported</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>grantUriPermissions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">&lt;!-- 元数据 --></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta-data</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.support.FILE_PROVIDER_PATHS<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@xml/update_apk_paths<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>provider</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>解释一下几个参数的含义：<br />\n<strong>android:name</strong><br />\n 文件提供者的类名，固定为 &quot;android.support.v4.content.FileProvider&quot;，如果你很牛逼也可以自己写一个类并继承 &quot;android.support.v4.content.FileProvider&quot;，然后实现一些扩展的功能。<br />\n<strong>android:authorities</strong><br />\n 权限的名字，用于标识 provider 提供的内容，可以有多个名字，各名字之间用 “；” 隔开。为了不和其它名字冲突一般使用域名的形式来描述。在实际使用过程中，我们一般会用项目的包名替换，例如</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>android:authorities=\"$&#123;applicationId&#125;.provider\"</pre></td></tr></table></figure><p>直接通过引用的方式添加 authorities<br />\n<strong>android:exported</strong><br />\n 内容提供者是否可供其他应用程序使用，在这里不需要，所以填 false<br />\n<strong>android:grantUriPermissions</strong><br />\n 是否授权给那些本来无权限访问的人临时访问内容提供者提供的内容，这里填 true，不然就没法访问到这个文件了。</p>\n<ol start=\"2\">\n<li>指定可用的文件<br />\n为了指定需要访问的文件，需要在一个 xml 文件中指定被访问文件的存储路径。<br />\n在 res 目录下新建一个 xml 文件夹，然后新建一个文件：update_apk_paths.xml（文件名自己随意起）, 内容如下：</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>paths</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">&lt;!--</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        files-path：          该方式提供在应用的内部存储区的文件 / 子目录的文件。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                              它对应 Context.getFilesDir 返回的路径：eg:”/data/data/com.jph.simple/files”。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        cache-path：          该方式提供在应用的内部存储区的缓存子目录的文件。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                              它对应 getCacheDir 返回的路径：eg:“/data/data/com.jph.simple/cache”；</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        external-path：       该方式提供在外部存储区域根目录下的文件。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                              它对应 Environment.getExternalStorageDirectory 返回的路径：</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        external-cache-path： 该方式提供在应用的外部存储区根目录的下的文件。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                              它对应 Context#getExternalFilesDir (String) Context.getExternalFilesDir (null)</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                              返回的路径。eg:”/storage/emulated/0/Android/data/com.jph.simple/files”</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token comment\">&lt;!-- name=“update”</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        相当于下面的 path 的别名，为了把真实的路径隐藏起来，这样就只能看到别名，如果按照这个别名路径去找文件的话肯定是找不到的。这个别名自己随便取，我把它叫做 “update”</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        path=\"\"</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        代表你要分享的真实的子目录名，空字符串代表根目录，注意该值必须是一个子目录，不能是文件名 --></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>external-path</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>update<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CESPIB<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>paths</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>综合来讲，以上配置表明：我要分享一个目录供其它人访问，这个目录就是内部存储区的缓存目录的根目录，即 getCacheDir () 的返回值。所有根目录及其子目录下的文件都可以被访问，同时我为这缓存目录取了一个别名叫 “update”, 以混淆视听。<br />\n当你要将自己的目录分享给其他应用使用时就需要下面的操作了，将上面的 update_apk_paths.xml 文件链接到 AndroidManifest.xml 中定义的 provider 中，也就是定义中的 “元数据” 的内容</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 元数据 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>meta<span class=\"token operator\">-</span>data</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.support.FILE_PROVIDER_PATHS\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    android<span class=\"token operator\">:</span>resource<span class=\"token operator\">=</span><span class=\"token string\">\"@xml/update_apk_paths\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>android:name</strong><br />\n 代表资源的类型，此处为固定值 &quot;android.support.FILE_PROVIDER_PATHS&quot;<br />\n<strong>android:resource</strong><br />\n 代表资源文件，即 update_apk_paths.xml，但是不要后缀名</p>\n<ol start=\"3\">\n<li>生成文件的 URI<br />\n 用以下方式生成文件的 Uri：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Uri</span> apkUri <span class=\"token operator\">=</span> <span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUriForFile</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.wuhanins.ces_pib.provider\"</span><span class=\"token punctuation\">,</span> apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>其中，第二个参数 &quot;com.wuhanins.ces_pib.provider&quot; 是在 AndroidManifest.xml 文件中声明的 provider 中 <strong>android:authorities</strong> 元素的值，第三个参数 apkFile 就是下载下来的保存在缓存目录下的 apk 文件，假如你是用的是下面的方式声明的 authorities</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>android:authorities=\"$&#123;applicationId&#125;.provider\"</pre></td></tr></table></figure><p>那么你调用的时候最好是</p>\n<pre><code class=\"language-Java\">Uri apkUri = FileProvider.getUriForFile(mContext, mContext.getApplicationInfo().packageName+&quot;.apk.provider&quot;, apkFile);\n</code></pre>\n<p>通过系统 API 获取当前包名，避免拼写出错<br />\n 4. 授予 URI 临时权限<br />\n授权有很多种方式：这里只说一种，就是通过 Intent addFlags () 方法，如：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>向另一个应用程序提供内容 URI<br />\n 用 startActivity (intent) 启动一个应用就可以了，被启动的应用就有权限访问你提供的文件了，但要注意必须添加这句：</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>安装 apk 的方法就改造成了下面这样了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">installApk</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">File</span> apkFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_VIEW</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_ACTIVITY_NEW_TASK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span><span class=\"token constant\">VERSION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SDK_INT</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">Build<span class=\"token punctuation\">.</span>VERSION_CODES<span class=\"token punctuation\">.</span>N</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 7.0 以上</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Uri</span> apkUri <span class=\"token operator\">=</span> <span class=\"token class-name\">FileProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUriForFile</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token string\">\"com.wuhanins.ces_pib.provider\"</span><span class=\"token punctuation\">,</span> apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">addFlags</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FLAG_GRANT_READ_URI_PERMISSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span>apkUri<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 7.0 以下</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">Uri</span> uri <span class=\"token operator\">=</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromFile</span><span class=\"token punctuation\">(</span>apkFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAndType</span><span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/vnd.android.package-archive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        mContext<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>自动更新失败的问题完美解决，其他例如调用系统相机，调用系统相册等等都可以类推了，但是切记一定要添加上 Flag</p>\n<pre><code class=\"language-Java\">intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n</code></pre>\n",
            "tags": [
                "Android",
                "FIleProvider"
            ]
        },
        {
            "id": "https://log992.cn/Java/Date%E6%B8%85%E7%A9%BA%E6%97%B6%E5%88%86%E7%A7%92/",
            "url": "https://log992.cn/Java/Date%E6%B8%85%E7%A9%BA%E6%97%B6%E5%88%86%E7%A7%92/",
            "title": "Date清空时分秒",
            "date_published": "2022-08-02T08:06:55.000Z",
            "content_html": "<blockquote>\n<p>开发过程中我们一般会在数据库存储详细的时间数据，但是在获取数据的时候又需要精确到天来对数据进行分组。</p>\n</blockquote>\n<h3 id=\"已废弃的方法\"><a class=\"anchor\" href=\"#已废弃的方法\">#</a> 已废弃的方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>now<span class=\"token punctuation\">.</span><span class=\"token function\">setSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>上述方法在 JDK version 1.1 之后就废弃掉了</p>\n<h3 id=\"通用方法\"><a class=\"anchor\" href=\"#通用方法\">#</a> 通用方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> operationTime <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">getOperationTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">Calendar</span> calendar <span class=\"token operator\">=</span> <span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>operationTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HOUR_OF_DAY</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECOND</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>calendar<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MILLISECOND</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"java8方法\"><a class=\"anchor\" href=\"#java8方法\">#</a> Java8 方法</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Date</span> operationTime <span class=\"token operator\">=</span> task<span class=\"token punctuation\">.</span><span class=\"token function\">getOperationTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">LocalDate</span> localDate <span class=\"token operator\">=</span> operationTime<span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">atZone</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">systemDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocalDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">Date</span> formatDate <span class=\"token operator\">=</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>localDate<span class=\"token punctuation\">.</span><span class=\"token function\">atStartOfDay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ZoneId</span><span class=\"token punctuation\">.</span><span class=\"token function\">systemDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "Java",
                "Java",
                "Date"
            ]
        },
        {
            "id": "https://log992.cn/android/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6%E5%88%86%E6%9E%90/",
            "url": "https://log992.cn/android/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%A7%E6%89%B9%E9%87%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%80%97%E6%97%B6%E5%88%86%E6%9E%90/",
            "title": "数据库大批量操作数据耗时分析",
            "date_published": "2022-04-28T08:55:55.000Z",
            "content_html": "<blockquote>\n<p>数据库操作过程中经常会遇到需要大批量操作数据的情况，使用不同的方式会占用不同的时间，下面是我在 OrmLite 中的一些耗时记录</p>\n</blockquote>\n<ol>\n<li>使用 callBatchTasks 加载数据</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>qfQbsCellDao<span class=\"token punctuation\">.</span><span class=\"token function\">callBatchTasks</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Callable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    qfQbsCellDao</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428162626384.png\" alt=\"image-20220428162626384\" /></p>\n<p>共 7373ms</p>\n<ol start=\"2\">\n<li>直接 createOrUpdate</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            qfQbsCellDao</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428162925869.png\" alt=\"image-20220428162925869\" /></p>\n<p>共 29319ms</p>\n<ol start=\"3\">\n<li>使用 AndroidDatabaseConnection 一次提交事务</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// ORMLite 的数据连接封装类</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">AndroidDatabaseConnection</span> adc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AndroidDatabaseConnection</span><span class=\"token punctuation\">(</span>baseDBHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getWritableDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        qfQbsCellDao<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoCommit</span><span class=\"token punctuation\">(</span>adc<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 存储点名称为 create_claxx</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Savepoint</span> sp <span class=\"token operator\">=</span> adc<span class=\"token punctuation\">.</span><span class=\"token function\">setSavePoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Create_Update_Cell\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataAdjustmentSyncCellQBSInfos</span> cellItem <span class=\"token operator\">:</span> cellQBSInfos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">TblQFQbsCell</span> cellData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TblQFQbsCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellCode</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellName</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setCellTypeId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getCellTypeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setPartId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getPartQBSId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setContractId</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getContractId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setModifyTime</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getLastModTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">.</span><span class=\"token function\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            cellData<span class=\"token punctuation\">.</span><span class=\"token function\">setJsonData</span><span class=\"token punctuation\">(</span>gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>cellItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            qfQbsCellDao</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">createOrUpdate</span><span class=\"token punctuation\">(</span>cellData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        adc<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span>sp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://image.log1992.com/uPic/image-20220428163708217.png\" alt=\"image-20220428163708217\" /></p>\n<p>共 7574ms</p>\n",
            "tags": [
                "Android",
                "数据库"
            ]
        },
        {
            "id": "https://log992.cn/android/%E5%BD%93%E5%89%8DAPP%E8%B7%B3%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8/",
            "url": "https://log992.cn/android/%E5%BD%93%E5%89%8DAPP%E8%B7%B3%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8/",
            "title": "当前APP跳转第三方应用",
            "date_published": "2022-04-13T02:14:55.000Z",
            "content_html": "<blockquote>\n<p>在应用开发的过程中，需要从当前应用跳转到其他 APP 的场景也是存在的。</p>\n</blockquote>\n<h4 id=\"判断app是否安装\"><a class=\"anchor\" href=\"#判断app是否安装\">#</a> 判断 APP 是否安装</h4>\n<p>在跳转第三方 APP 之前，我们必须判断第三方 APP 是否安装，一般来说有两种方式。</p>\n<ol>\n<li>可以通过获取某个应用信息的存在来判断是否安装</li>\n</ol>\n<pre><code class=\"language-Kotlin\">fun isAppInstalled(context: Context, packageName: String): Boolean &#123;\n        val packageManager = context.packageManager\n        var isInstalled = false\n        try &#123;\n            val pInfo = packageManager.getPackageInfo(packageName, PackageManager.GET_GIDS)\n            isInstalled = pInfo != null\n        &#125; catch (e: Exception) &#123;\n        &#125;\n        return isInstalled\n    &#125;\n</code></pre>\n<ol start=\"2\">\n<li>通过获取应用列表对比判断</li>\n</ol>\n<pre><code class=\"language-Kotlin\">fun isAppInstalled2(context: Context, packageName: String): Boolean &#123;\n        val packageManager = context.packageManager\n        // 获取所有已安装程序的包信息\n        val pInfo = packageManager.getInstalledPackages(0)\n        for (i in pInfo.indices) &#123;\n            // 循环判断是否存在指定包名\n            if (pInfo[i].packageName.equals(packageName, ignoreCase = true)) &#123;\n                return true\n            &#125;\n        &#125;\n        return false\n    &#125;\n</code></pre>\n<h4 id=\"跳转\"><a class=\"anchor\" href=\"#跳转\">#</a> 跳转</h4>\n<ol>\n<li>跳转启动 APP</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 启动App\n     * @param context\n     */\n    fun launchApp(context: Context, packageName: String) &#123;\n        // 判断是否安装过App，否则去市场下载\n        if (isAppInstalled(context, packageName)) &#123;\n            context.startActivity(context.packageManager.getLaunchIntentForPackage(packageName))\n        &#125; else &#123;\n            InsAlertDialog.confirm(context, &quot;消息&quot;, &quot;是否下载该组件？下载过程中会连接网络，请确保在wifi下进行。&quot;, &#123; dialog, which -&gt; goToDownloadApp(context, packageName) &#125;) &#123; dialog, which -&gt; &#125;\n        &#125;\n    &#125;\n</code></pre>\n<p>通过 <code>context.packageManager.getLaunchIntentForPackage(packageName)</code>  方法获取跳转应用的 launcherActivity 的 intent 信息，从而实现跳转。</p>\n<ol start=\"2\">\n<li>跳转应用的特定界面</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 启动App特定界面\n     * @param context\n     */\n    fun launchApp(context: Context, packageName: String, activityName: String, destAction: String) &#123;\n        // 判断是否安装过App，否则去市场下载\n        if (isAppInstalled(context, packageName)) &#123;\n            val intent = Intent()\n            intent.component = ComponentName(packageName, activityName)\n            intent.action = destAction\n            context.startActivity(intent)\n        &#125; else &#123;\n            InsAlertDialog.confirm(context, &quot;消息&quot;, &quot;是否下载该组件？下载过程中会连接网络，请确保在wifi下进行。&quot;, &#123; _, _ -&gt; goToDownloadApp(context, packageName) &#125;) &#123; _, _ -&gt; &#125;\n        &#125;\n    &#125;\n</code></pre>\n<p>通过指定对应 APP 中的具体 Activity 的全类名显式跳转，或者使用 action 隐式跳转都可以达到我们的目的。</p>\n<h4 id=\"app下载\"><a class=\"anchor\" href=\"#app下载\">#</a> APP 下载</h4>\n<ol>\n<li>直接应用市场下载<br />\n通过应用的包名在应用市场查询</li>\n</ol>\n<pre><code class=\"language-Kotlin\">/**\n     * 这里是进入应用商店，下载指定APP的方法。\n     */\n    private fun goToMarket(context: Context, packageName: String) &#123;\n        val uri: Uri = Uri.parse(&quot;market://details?id=$packageName&quot;)\n        val goToMarket = Intent(Intent.ACTION_VIEW, uri)\n        try &#123;\n            context.startActivity(goToMarket)\n        &#125; catch (e: java.lang.Exception) &#123;\n        &#125;\n    &#125;\n</code></pre>\n<ol start=\"2\">\n<li>通过应用提供的直链下载（这里就不多加赘述了）</li>\n</ol>\n<h4 id=\"目标应用的处理\"><a class=\"anchor\" href=\"#目标应用的处理\">#</a> 目标应用的处理</h4>\n<ol>\n<li>隐式跳转需要给 activity 添加特定的 action</li>\n<li>为了桌面的整洁，有些目标应用不需要显示桌面图标，可以对启动 activity 的 category 进行处理，一般来说，我们默认的启动 activity 的 category 是 <code>android.intent.category.LAUNCHER</code> , 具体如下</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activity</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.app.launcher.LauncherActivity<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>action</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.action.MAIN<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>category</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.intent.category.LAUNCHER<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>intent-filter</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activity</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>去除 <code> &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</code>  这一行的显示就能使桌面图标不显示了，注意：Android Studio 直接 Run 的话会报错，因为找不到启动的 category，但是不影响打包安装。同理，我们在使用默认方法跳转的时候，这种情况下 <code>getLaunchIntentForPackage(packageName)</code>  方法会返回 null，因此在使用已隐藏图标的 APP 作为目标应用时，不能使用这种方法获取跳转的 intent。</p>\n",
            "tags": [
                "Android",
                "APP"
            ]
        },
        {
            "id": "https://log992.cn/harmony/Harmony%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/",
            "url": "https://log992.cn/harmony/Harmony%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/",
            "title": "Harmony问题汇总",
            "date_published": "2022-04-01T05:49:55.000Z",
            "content_html": "<ol>\n<li>\n<p>xml 中部分控件需要使用全包名，否则 <code>findComponentById</code>  会查不到</p>\n<p>例如：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ohos.agp.components.webengine.WebView</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$+id:webView<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>如果直接使用</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>WebView</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$+id:webView<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token attr-name\"><span class=\"token namespace\">ohos:</span>width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>match_parent<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr></table></figure><p>会查询不到改控件。</p>\n</li>\n</ol>\n<p>未完待续...</p>\n",
            "tags": [
                "鸿蒙",
                "Harmony"
            ]
        },
        {
            "id": "https://log992.cn/harmony/%E5%88%9D%E5%AD%A6Harmony/",
            "url": "https://log992.cn/harmony/%E5%88%9D%E5%AD%A6Harmony/",
            "title": "初学Harmony",
            "date_published": "2022-04-01T05:49:55.000Z",
            "content_html": "<blockquote>\n<p>最近研究鸿蒙开发，记录下自己的一些心得</p>\n</blockquote>\n<h3 id=\"项目配置\"><a class=\"anchor\" href=\"#项目配置\">#</a> 项目配置</h3>\n<p>1. 大致结构与 Android 的项目结构相似</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114456010.png\" alt=\"image-20220401114456010\" /></p>\n<p>2.Harmony 没有 <code>Manifeest.xml</code>  文件，通过 <code>config.json</code>  文件进行配置</p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114737192.png\" alt=\"image-20220401114737192\" /></p>\n<p><img data-src=\"https://image.log1992.com/uPic/image-20220401114757400.png\" alt=\"image-20220401114757400\" /></p>\n<p>切换到 Ohos（类比 Android 视图）视图时，所有的配置文件会放置在 <code>configuration</code>  目录下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"app\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"bundleName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"vendor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"wuhanins\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token property\">\"deviceConfig\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"default\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"network\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token property\">\"cleartextTraffic\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token property\">\"package\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".MyApplication\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token property\">\"mainAbility\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.wuhanins.harmonydemo.MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token property\">\"deviceType\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token string\">\"tablet\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token string\">\"tv\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token string\">\"wearable\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token string\">\"car\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token property\">\"distro\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token property\">\"deliveryWithInstall\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token property\">\"moduleName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token property\">\"moduleType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"entry\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token property\">\"installationFree\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token property\">\"reqPermissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ohos.permission.INTERNET\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token property\">\"reason\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:permreason_internet\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token property\">\"usedScene\"</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>          <span class=\"token property\">\"ability\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"com.wuhanins.harmonydemo.MainAbility\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          <span class=\"token property\">\"when\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">\"abilities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token property\">\"skills\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token property\">\"entities\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>              <span class=\"token string\">\"entity.system.home\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token property\">\"actions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>              <span class=\"token string\">\"action.system.home\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>              <span class=\"token string\">\"action.web\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token property\">\"orientation\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"unspecified\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token property\">\"visible\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token property\">\"icon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$media:icon\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:mainability_description\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$string:entry_MainAbility\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"page\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token property\">\"launchType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standard\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>2.1 首先是 <code>app</code>  节点， <code>bundleName</code>  类比 <code>applicationId</code>  作为包名， <code>vendor</code>  作为供应商，剩下的就是版本信息了。</p>\n<p>2.2  <code>deviceConfig</code>  可以为空，目前我添加了可以使用 HTTP 协议请求网络。</p>\n<p>2.3  <code>module</code>  存储项目模块信息， <code>name</code>  对应 <code>application</code>  的 <code>name</code> , 请求权限可以放在 <code>reqPermissions</code>  节点中，普通权限直接使用 <code>name</code>  获取即可，敏感权限需要配置请求的原因和使用场景。</p>\n<p>2.4  <code>abilities</code>  类似于 <code>activity</code>  节点，所有的页面，服务，都可以放到这里，根据不同的 <code>type</code>  确定当前的 <code>Ability</code>  是什么类型， <code>page</code> ， <code>service</code> , <code>data</code>  分别代表了不同作用的 <code>Ability</code></p>\n<p>未完待续...</p>\n",
            "tags": [
                "鸿蒙",
                "Harmony"
            ]
        },
        {
            "id": "https://log992.cn/develop/%E5%A4%96%E7%BD%91IP%E8%8E%B7%E5%8F%96API/",
            "url": "https://log992.cn/develop/%E5%A4%96%E7%BD%91IP%E8%8E%B7%E5%8F%96API/",
            "title": "外网IP获取API",
            "date_published": "2022-03-24T07:49:55.000Z",
            "content_html": "<blockquote>\n<p>开发过程中可能会用到的 IP 获取</p>\n</blockquote>\n<ol>\n<li>\n<p>搜狐 (默认 GBK 编码)</p>\n<p><code>http://pv.sohu.com/cityjson?ie=utf-8</code></p>\n<p>返回结果如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var returnCitySN = <span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"cip\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"220.249.113.155\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"cid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"420100\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"cname\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"湖北省武汉市\"</span><span class=\"token punctuation\">&#125;</span>;</pre></td></tr></table></figure></li>\n<li>\n<p>淘宝</p>\n<p><code>https://www.taobao.com/help/getip.php</code></p>\n<p>返回结果如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ipCallback(<span class=\"token punctuation\">&#123;</span>ip<span class=\"token operator\">:</span><span class=\"token string\">\"220.249.113.155\"</span><span class=\"token punctuation\">&#125;</span>)</pre></td></tr></table></figure></li>\n<li>\n<p>Ip-api</p>\n<p><code>http://ip-api.com/json</code></p>\n<p>返回结果如下：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>status<span class=\"token operator\">:</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>country<span class=\"token operator\">:</span> <span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>countryCode<span class=\"token operator\">:</span> <span class=\"token string\">\"CN\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>region<span class=\"token operator\">:</span> <span class=\"token string\">\"HB\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>regionName<span class=\"token operator\">:</span> <span class=\"token string\">\"Hubei\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>city<span class=\"token operator\">:</span> <span class=\"token string\">\"Wuhan\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>zip<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>lat<span class=\"token operator\">:</span> <span class=\"token number\">30.589</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lon<span class=\"token operator\">:</span> <span class=\"token number\">114.2681</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>timezone<span class=\"token operator\">:</span> <span class=\"token string\">\"Asia/Shanghai\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>isp<span class=\"token operator\">:</span> <span class=\"token string\">\"CNC Group CHINA169 Hubei Province Network\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>org<span class=\"token operator\">:</span> <span class=\"token string\">\"Wuhan University\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>as<span class=\"token operator\">:</span> <span class=\"token string\">\"AS4837 CHINA UNICOM China169 Backbone\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>query<span class=\"token operator\">:</span> <span class=\"token string\">\"220.249.113.155\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>添加参数返回不一样的值</p>\n<p><code>http://ip-api.com/json/?lang=zh-CN</code></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>status<span class=\"token operator\">:</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>country<span class=\"token operator\">:</span> <span class=\"token string\">\"中国\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>countryCode<span class=\"token operator\">:</span> <span class=\"token string\">\"CN\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>region<span class=\"token operator\">:</span> <span class=\"token string\">\"HB\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>regionName<span class=\"token operator\">:</span> <span class=\"token string\">\"湖北省\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>city<span class=\"token operator\">:</span> <span class=\"token string\">\"武汉\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>zip<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>lat<span class=\"token operator\">:</span> <span class=\"token number\">30.589</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lon<span class=\"token operator\">:</span> <span class=\"token number\">114.2681</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>timezone<span class=\"token operator\">:</span> <span class=\"token string\">\"Asia/Shanghai\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>isp<span class=\"token operator\">:</span> <span class=\"token string\">\"CNC Group CHINA169 Hubei Province Network\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>org<span class=\"token operator\">:</span> <span class=\"token string\">\"Wuhan University\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>as<span class=\"token operator\">:</span> <span class=\"token string\">\"AS4837 CHINA UNICOM China169 Backbone\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>query<span class=\"token operator\">:</span> <span class=\"token string\">\"220.249.113.155\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>或者查询某个 IP 的信息</p>\n<p><code>http://ip-api.com/json/81.69.6.231?lang=zh-CN</code></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>status<span class=\"token operator\">:</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>country<span class=\"token operator\">:</span> <span class=\"token string\">\"荷兰\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>countryCode<span class=\"token operator\">:</span> <span class=\"token string\">\"NL\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>region<span class=\"token operator\">:</span> <span class=\"token string\">\"NH\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>regionName<span class=\"token operator\">:</span> <span class=\"token string\">\"North Holland\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>city<span class=\"token operator\">:</span> <span class=\"token string\">\"Amsterdam\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>zip<span class=\"token operator\">:</span> <span class=\"token string\">\"1015\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>lat<span class=\"token operator\">:</span> <span class=\"token number\">52.3798</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lon<span class=\"token operator\">:</span> <span class=\"token number\">4.88814</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>timezone<span class=\"token operator\">:</span> <span class=\"token string\">\"Europe/Amsterdam\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>isp<span class=\"token operator\">:</span> <span class=\"token string\">\"EuroNet Internet\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>org<span class=\"token operator\">:</span> <span class=\"token string\">\"Wanadoo Nederland BV\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>as<span class=\"token operator\">:</span> <span class=\"token string\">\"AS45090 Shenzhen Tencent Computer Systems Company Limited\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>query<span class=\"token operator\">:</span> <span class=\"token string\">\"81.69.6.231\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "开发",
                "IP"
            ]
        },
        {
            "id": "https://log992.cn/android/ContextCompat%E5%92%8CResourcesCompat%E7%9A%84%E5%8C%BA%E5%88%AB/",
            "url": "https://log992.cn/android/ContextCompat%E5%92%8CResourcesCompat%E7%9A%84%E5%8C%BA%E5%88%AB/",
            "title": "ContextCompat和ResourcesCompat的区别",
            "date_published": "2022-03-17T11:14:55.000Z",
            "content_html": "<blockquote>\n<p><code>getResource.getDrawable()</code>  以及 <code>getResource.getColos()</code>  这一类方法已然呗 Google 废弃，我们现在需要使用新的方法去实现</p>\n</blockquote>\n<h4 id=\"contextcompat\"><a class=\"anchor\" href=\"#contextcompat\">#</a> ContextCompat</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ContextCompat</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ContextCompat</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>使用 <code>ContextCompat.getDrawable();</code>  时相当于</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span><span class=\"token constant\">VERSION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SDK_INT</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span><span class=\"token constant\">VERSION_CODES</span><span class=\"token punctuation\">.</span><span class=\"token constant\">LOLLIPOP</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> resources<span class=\"token punctuation\">.</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> resources<span class=\"token punctuation\">.</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>参数为 <code>context</code>  和 <code>resId</code>  这个方法获取到的资源会受到主题属性的控制</p>\n<h4 id=\"resourcescompat\"><a class=\"anchor\" href=\"#resourcescompat\">#</a> ResourcesCompat</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ResourcesCompat</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ResourcesCompat</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDrawable</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> anotherTheme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>参数的最后一个可以人为控制当前的资源是否拥有主题属性</p>\n",
            "tags": [
                "Android",
                "资源获取"
            ]
        },
        {
            "id": "https://log992.cn/android/SDK%E5%8D%87%E7%BA%A728%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/",
            "url": "https://log992.cn/android/SDK%E5%8D%87%E7%BA%A728%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/",
            "title": "SDK升级28的那些事儿",
            "date_published": "2022-03-17T05:14:55.000Z",
            "content_html": "<h3 id=\"为什么要升级\"><a class=\"anchor\" href=\"#为什么要升级\">#</a> 为什么要升级？</h3>\n<blockquote>\n<p>Android 手机系统近两年更新很快，特别是现在大多数的设备已经升级到了 9.0 甚至是 10.0</p>\n</blockquote>\n<p><img data-src=\"https://image.log1992.com/2020/05/3381091807.png\" alt=\"\" /></p>\n<h3 id=\"升级\"><a class=\"anchor\" href=\"#升级\">#</a> 升级</h3>\n<ul>\n<li>project 的 build 文件修改</li>\n</ul>\n<p>只将 classpath 修改为了 3.1.4, 有需要的话可以根据需求往上升级</p>\n<pre><code class=\"language-Java\">classpath 'com.android.tools.build:gradle:3.1.4'\n</code></pre>\n<ul>\n<li>修改 gradle-wrapper.properties 文件</li>\n</ul>\n<p>修改了 classpath 需要同步修改这个，目前我只改到了 4.4</p>\n<pre><code class=\"language-Java\">distributionUrl=https\\://services.gradle.org/distributions/gradle-4.4-all.zip\n</code></pre>\n<ul>\n<li>module 的 build 文件修改</li>\n</ul>\n<p>android 节点下修改</p>\n<pre><code class=\"language-Java\">compileSdkVersion 28\nbuildToolsVersion &quot;28.0.3&quot;\n</code></pre>\n<p>defaultConfig 节点下修改</p>\n<pre><code class=\"language-Java\">minSdkVersion 21\ntargetSdkVersion 28\n</code></pre>\n<p>修改 apk 的输出名称，先前是这么用的，但是在升级后会出现下面的错误</p>\n<pre><code class=\"language-Java\">Cannot set the value of read-only property 'outputFile' for XXX\n</code></pre>\n<pre><code class=\"language-Java\">applicationVariants.all &#123; variant -&gt;\n\n        if (variant.buildType.name.equals('release')) &#123;\n            variant.outputs.each &#123; output -&gt;\n                def oldFile = output.outputFile\n                def buildName\n                def releaseApkName\n\n                variant.productFlavors.each &#123; product -&gt;\n                    buildName = product.name\n                &#125;\n\n                releaseApkName = 'cjprotect_' + defaultConfig.versionName + '.apk'\n                output.outputFile = new File(oldFile.parent, releaseApkName)\n            &#125;\n        &#125;else&#123;\n            variant.outputs.each &#123; output -&gt;\n                def oldFile = output.outputFile\n                def buildName\n                def releaseApkName\n\n                variant.productFlavors.each &#123; product -&gt;\n                    buildName = product.name\n                &#125;\n\n                releaseApkName = 'cjprotect_debug_' + defaultConfig.versionName + '.apk'\n                output.outputFile = new File(oldFile.parent, releaseApkName)\n            &#125;\n        &#125;\n    &#125;\n</code></pre>\n<p>现在需要改成这样</p>\n<pre><code class=\"language-Java\">applicationVariants.all &#123; variant -&gt;\n\n        if (variant.buildType.name == 'release') &#123;\n            variant.outputs.all &#123;\n                outputFileName = &quot;cjprotect_$&#123;defaultConfig.versionName&#125;.apk&quot;\n            &#125;\n        &#125;else&#123;\n            variant.outputs.all &#123;\n                outputFileName = &quot;cjprotect_debug_$&#123;defaultConfig.versionName&#125;.apk&quot;\n            &#125;\n         &#125;\n    &#125;\n</code></pre>\n<p>如果你配置了渠道分包<br />\n会出现这样的错误</p>\n<pre><code class=\"language-Java\">Error:All flavors must now belong to a named flavor dimension.\n      The flavor 'flavor_name' is not assigned to a flavor dimension.\n</code></pre>\n<p>官方给出的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vc3R1ZGlvL2J1aWxkL2J1aWxkLXZhcmlhbnRzP3V0bV9zb3VyY2U9YW5kcm9pZC1zdHVkaW8jcHJvZHVjdC1mbGF2b3Jz\">解释</span>是需要配置 flavorDimensions</p>\n<pre><code class=\"language-Java\">flavorDimensions &quot;version&quot;\n    productFlavors &#123;\n        phone &#123;\n            dimension &quot;version&quot;\n            buildConfigField('String', 'TYPE', '&quot;Phone&quot;')\n            buildConfigField('boolean', 'NEED_PUSH', 'false')\n        &#125;\n    &#125;\n</code></pre>\n<p>添加两行就好了</p>\n<p>如果你使用了 HTTP client, 会出现这样的错误</p>\n<pre><code class=\"language-Java\">Didn't find class &quot;org.apache.http.impl.client.DefaultHttpClient&quot; on path\n</code></pre>\n<p>需要在 manifest 的 application 标签中增加属性</p>\n<pre><code class=\"language-Java\">&lt;uses-library android:name=&quot;org.apache.http.legacy&quot; android:required=&quot;false&quot; /&gt;\n</code></pre>\n<blockquote>\n<p>为保证用户数据和设备的安全，Google 针对下一代 Android 系统 (Android P) 的应用程序，将要求默认使用加密连接，这意味着 Android P 将禁止 App 使用所有未加密的连接，因此运行 Android P 系统的安卓设备无论是接收或者发送流量，未来都不能明码传输，需要使用下一代 (Transport Layer Security) 传输层安全协议，而 Android Nougat 和 Oreo 则不受影响.</p>\n</blockquote>\n<p>默认联网会失败，解决办法一是降级 27, 这里我们不采用。第二种如下:<br />\n 首先在 res 文件夹下创建一个 xml 文件夹，然后创建一个 network_security_config.xml 文件，文件内容如下：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>network-security-config</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>base-config</span> <span class=\"token attr-name\">cleartextTrafficPermitted</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>network-security-config</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>接着，在 AndroidManifest.xml 文件下的 application 标签增加以下属性：</p>\n<pre><code class=\"language-Java\">&lt;application\n...\n android:networkSecurityConfig=&quot;@xml/network_security_config&quot;\n...\n    /&gt;\n</code></pre>\n<p>最后还有最简单的办法，在 AndroidManifest.xml 配置文件的 &lt;application&gt; 标签中直接插入</p>\n<pre><code class=\"language-Java\">android:usesCleartextTraffic=&quot;true&quot;\n</code></pre>\n<ul>\n<li>最后记得动态权限控制</li>\n</ul>\n",
            "tags": [
                "Android",
                "SDK"
            ]
        },
        {
            "id": "https://log992.cn/android/%E4%BD%BF%E7%94%A8registerForActivityResult%E6%9B%BF%E6%8D%A2onActivityResult/",
            "url": "https://log992.cn/android/%E4%BD%BF%E7%94%A8registerForActivityResult%E6%9B%BF%E6%8D%A2onActivityResult/",
            "title": "使用registerForActivityResult替换onActivityResult",
            "date_published": "2022-03-17T02:34:55.000Z",
            "content_html": "<blockquote>\n<p>近期在构建新项目的时候，发现<strong> onActivityResult</strong> 方法已经被废弃了，于是有了尝试<strong> registerForActivityResult</strong> 的想法。</p>\n</blockquote>\n<h3 id=\"标准使用\"><a class=\"anchor\" href=\"#标准使用\">#</a> 标准使用</h3>\n<p>三个类 <code>ActivityResultLauncher</code> 、 <code>ActivityResultContract</code> 、 <code>ActivityResultCallback</code> <br />\n 首先 <code>ActivityResultLauncher</code>  作为主角，它需要配置一个泛型，这个泛型跟我们 <code>ActivityResultContract</code>  的返回值相同， <code>ActivityResultLauncher</code>  通过 <code>launch</code>  方法来启动相应的界面或者功能。</p>\n<ol>\n<li>ActivityResultContract</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GalleryContract</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ActivityResultContract</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Uri</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token annotation punctuation\">@NonNull</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Intent</span> <span class=\"token function\">createIntent</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Void</span> input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">Intent</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Intent</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_PICK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            intent<span class=\"token punctuation\">.</span><span class=\"token function\">setType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> intent<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Uri</span> <span class=\"token function\">parseResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> resultCode<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Intent</span> intent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> intent<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到 <code>ActivityResultContract</code>  需要传入两个泛型，一个泛型作为 <code>createIntent</code>  方法的第二参数类型，这里可以作为我们 intent 传值的参数载体， <code>ActivityResultContract</code>  的另一个泛型作为 <code>parseResult</code>  方法的返回值类型，我们可以自行定义从 intent 返回的参数类型。</p>\n<ol start=\"2\">\n<li>ActivityResultLauncher</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">ActivityResultLauncher</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> galleryLauncher <span class=\"token operator\">=</span> <span class=\"token function\">registerForActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GalleryContract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityResultCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Uri</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">//todo something</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>把 contract 和 ActivityResultCallback 作为 launcher 的参数构建出 launcher</p>\n<ol start=\"3\">\n<li>ActivityResultCallback<br />\n 这个里面就和 <code>onActivityResult</code>  方法回调一样的，只不过提供的结果参数是我们在 contract 中定义的。</li>\n</ol>\n<p>4. 启动 launch<br />\n 通过 <code> galleryLauncher.launch(null);</code>  启动即可。</p>\n<h3 id=\"简单使用\"><a class=\"anchor\" href=\"#简单使用\">#</a> 简单使用</h3>\n<p><code>ActivityResultContracts</code> <br />\n 这个类中提供了许多通用的方法</p>\n<table>\n<thead>\n<tr>\n<th>ActivityResultContracts.*</th>\n<th>说明</th>\n<th>参数</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>StartActivityForResult</strong></td>\n<td>可以理解为 startActivityForResult</td>\n<td>Intent</td>\n<td>ActivityResult(code,data)</td>\n</tr>\n<tr>\n<td><strong>TakePicture</strong></td>\n<td>通过 MediaStore.ACTION_IMAGE_CAPTURE 拍照并保存</td>\n<td>保存文件的 Uri</td>\n<td>是否保存成功</td>\n</tr>\n<tr>\n<td><strong>TakePicturePreview</strong></td>\n<td>通过 MediaStore.ACTION_IMAGE_CAPTURE 拍照，但是只会拍一张小照片，作为 thumbnail 使用比较合适</td>\n<td>null(Void)</td>\n<td>图片的 Bitmap</td>\n</tr>\n<tr>\n<td><strong>CaptureVideo</strong></td>\n<td>通过 MediaStore.ACTION_VIDEO_CAPTURE 拍摄视频并保存 (androidx.activity 1.3.0-alpha08 后提供，androidx.appcompat 好像还没提供该类)</td>\n<td>保存文件的 Uri</td>\n<td>是否保存成功。</td>\n</tr>\n<tr>\n<td><strong>RequestPermission</strong></td>\n<td>请求单个权限</td>\n<td>Manifest.permission.*</td>\n<td>用户是否授予该权限</td>\n</tr>\n<tr>\n<td>RequestMultiplePermissions</td>\n<td>请求多个权限</td>\n<td>Array</td>\n<td>回调为 map, key 为请求的权限，value 为用户是否授予该权限</td>\n</tr>\n<tr>\n<td><strong>CreateDocument</strong></td>\n<td>通过 Intent.ACTION_CREATE_DOCUMENT 创建一个文件</td>\n<td>默认文件名</td>\n<td>选择目录后返回该文件的 Uri</td>\n</tr>\n<tr>\n<td><strong>GetContent</strong></td>\n<td>通过 Intent.ACTION_GET_CONTENT 获取一个文件 (这个方法可以通过 android.content.ContentResolver.openInputStream 获取到文件的原始数据)</td>\n<td>MIME 类型</td>\n<td>文件 Uri</td>\n</tr>\n<tr>\n<td><strong>GetMultipleContents</strong></td>\n<td>通过 Intent.ACTION_GET_CONTENT 及 Intent.EXTRA_ALLOW_MULTIPLE 获取一个或多个文件 (这个方法可以通过 android.content.ContentResolver.openInputStream 获取到文件的原始数据)</td>\n<td>MIME 类型</td>\n<td>文件 List</td>\n</tr>\n<tr>\n<td><strong>OpenDocument</strong></td>\n<td>通过 Intent.ACTION_OPEN_DOCUMENT 选择文件</td>\n<td>MIME 类型</td>\n<td>文件 Uri</td>\n</tr>\n<tr>\n<td><strong>OpenDocumentTree</strong></td>\n<td>通过 Intent.ACTION_OPEN_DOCUMENT_TREE 选择一个目录，返回一个 Uri 并得到该目录下全部文档的管理权</td>\n<td>目录初始位置 Uri</td>\n<td>选择目录 Uri</td>\n</tr>\n<tr>\n<td><strong>OpenMultipleDocuments</strong></td>\n<td>通过 Intent.ACTION_OPEN_DOCUMENT 及 Intent.EXTRA_ALLOW_MULTIPLE 获取一个或多个文件</td>\n<td>MIME 类型</td>\n<td>文件 List</td>\n</tr>\n<tr>\n<td><strong>PickContact</strong></td>\n<td>通过 Intent.ACTION_PICK 从系统通讯录中获取联系人</td>\n<td>null(Void)</td>\n<td>联系人 Uri</td>\n</tr>\n<tr>\n<td>StartIntentSenderForResult*</td>\n<td>构建 IntentSender 或 PendingIntent</td>\n<td>使用 IntentSenderRequest.Builder 构建</td>\n<td>ActivityResult(code,data)</td>\n</tr>\n<tr>\n<td><strong><sub>TakeVideo</sub></strong></td>\n<td>通过 MediaStore.ACTION_VIDEO_CAPTURE 拍摄视频并保存 (弃用了，官方解释是缩略图的 Bitmap 的返回不稳定，替换为上面的 CaptureVideo 即可)</td>\n<td>保存文件的 Uri</td>\n<td>视频缩略图 Bitmap</td>\n</tr>\n</tbody>\n</table>\n<p>类似的使用如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">ActivityResultLauncher</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> fileLauncher <span class=\"token operator\">=</span> <span class=\"token function\">registerForActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityResultContracts<span class=\"token punctuation\">.</span>GetContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityResultCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Uri</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">ActivityResultLauncher</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Uri</span><span class=\"token punctuation\">></span></span> videoLauncher <span class=\"token operator\">=</span> <span class=\"token function\">registerForActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityResultContracts<span class=\"token punctuation\">.</span>CaptureVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActivityResultCallback</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResult</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Boolean</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意</h3>\n<p>不能在需要使用的时候再去构建我们需要的 launcher，否则会抛出异常<br />\n在 <code>Activity</code>  中<img data-src=\"https://image.log1992.com/blog/typecho/20211201040945.jpg\" alt=\"\" /></p>\n<p>在 <code>Fragment</code>  中<br />\n<img data-src=\"https://image.log1992.com/blog/typecho/20211201041029.png\" alt=\"\" /></p>\n",
            "tags": [
                "Android",
                "onActivityResult"
            ]
        },
        {
            "id": "https://log992.cn/android/%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E7%9A%84TransactionTooLargeException/",
            "url": "https://log992.cn/android/%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E7%9A%84TransactionTooLargeException/",
            "title": "莫名其妙的TransactionTooLargeException",
            "date_published": "2022-03-17T02:34:55.000Z",
            "content_html": "<h3 id=\"错误\"><a class=\"anchor\" href=\"#错误\">#</a> 错误</h3>\n<p><img data-src=\"https://image.log1992.com/blog/typecho/20220121104348.png\" alt=\"\" /></p>\n<blockquote>\n<p>最近将某个老项目升级到 AndroidX，并且在将 minSdk 由 19 提升至 24，targetSdk 由 23 提升至 28 后，在某个数据量较大的场景出现了上述错误。</p>\n</blockquote>\n<h3 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h3>\n<p>该问题出现在有一个界面跳转到另一个界面时，大概含义就是传递的数据量过大，超过了限制。分析抛出的原因或条件，查看源码 android_util_binder.cpp，查看系统层在什么情况下会抛出 TransactionTooLargeException 可知在 binder 驱动处理失败后，如果传输的 parcel 体积超过 200kb，则会抛出 TransactionTooLargeException，因此引发该问题的原因是 binder 调用传输的数据太大导致，问题分析重点应侧重 binder 数据传输。</p>\n<h3 id=\"解决\"><a class=\"anchor\" href=\"#解决\">#</a> 解决</h3>\n<ol>\n<li>查看代码后发现，项目中在跳转时并未携带过多数据</li>\n</ol>\n<pre><code class=\"language-Java\">Intent intent = new Intent(context, TestDetectionEditTabInnerActivity.class);\n                    intent.putExtra(NavigationViewDataInitHelper.TYPE_CODE, editViewModel.getFieldType());\n                    intent.putExtra(TestDetectionEditTabInnerActivity.RECORD_VALUE, editViewModel.getValue());\n                    intent.putExtra(TestDetectionEditTabInnerActivity.PROJECT_NAME, editViewModel.getName());\n                    intent.putExtra(NavigationViewDataInitHelper.FUNCTION_IDENTIFICATION, functionIdentification);\n                    fragment.startActivityForResult(intent, Constants.REQUEST_CODE);\n</code></pre>\n<p>其中</p>\n<pre><code class=\"language-Java\">editViewModel.getFieldType()\n</code></pre>\n<pre><code class=\"language-Java\">editViewModel.getValue()\n</code></pre>\n<pre><code class=\"language-Java\">editViewModel.getName()\n</code></pre>\n<p>以及</p>\n<pre><code class=\"language-Java\">functionIdentification\n</code></pre>\n<p>都是 <code>String</code>  类型的数据，并且数据长度都不大。 综合实际排错过程中的操作，只有在一个内嵌的 <code>fragment</code>  数据加载时才会出现上述错误，那我们先去 <code>fragment</code>  中看下：</p>\n<pre><code class=\"language-Java\">@Override\n    public Bundle createBundle(QFormViewModel viewModel, ExpandFormSchemaModel dataModel) &#123;\n        Bundle bundle = new Bundle();\n        bundle.putString(INTENT_SMART_INPUT_FRAGMENT_SOURCE, dataModel.getDataSource());\n        mParamValidators = dataModel.getParamValidators();\n        mDatasourceKey = dataModel.getDatasourceKey();\n        mJsonBody = dataModel.getJsonBody();\n        mListSource = dataModel.getListSource();\n        mFunctionIdentification = dataModel.getFunctionIdentification();\n        return bundle;\n    &#125;\n</code></pre>\n<p>好家伙，先把这个 bundle 干掉再说</p>\n<pre><code class=\"language-Java\">@Override\n    public Bundle createBundle(QFormViewModel viewModel, ExpandFormSchemaModel dataModel) &#123;\n        mParamValidators = dataModel.getParamValidators();\n        mDatasourceKey = dataModel.getDatasourceKey();\n        mJsonBody = dataModel.getJsonBody();\n        mListSource = dataModel.getListSource();\n        mFunctionIdentification = dataModel.getFunctionIdentification();\n        return null;\n    &#125;\n</code></pre>\n<p>重新编译运行，发现还是 GG</p>\n<ol start=\"2\">\n<li>那么说明还有其他的地方有大量数据被带入到跳转时候的 <code>binder</code>  中。 回到先前跳转的地方，我们发现 <code>startActivityForResult</code>  的地方居然是用的 <code>fragment</code> ，原来在这儿呢，看到上面的 <code>context</code>  直接就是一个 <code>activity</code>  引用，直接使用 <code>context.startActivityForResult</code> , 果然重新验证后没有出现数据传递超过限制的问题了，看来问题就在这个 <code>fragment</code>  中。</li>\n<li>来到这个 <code>fragment</code>  中</li>\n</ol>\n<pre><code class=\"language-Java\">public static TestDetectionEditTabFragment newInstance(\n            List&lt;TestDetectionEditViewModel&gt; models,\n            String recordId,\n            String functionIdentification,\n            String type, String projectName, String defaultValue) &#123;\n        Bundle args = new Bundle();\n        args.putParcelableArrayList(MODELS, (ArrayList&lt;? extends Parcelable&gt;) models);\n        args.putString(RECORD_ID, recordId);\n        args.putString(FUNCTION_IDENTIFICATION, functionIdentification);\n        args.putString(TYPE, type);\n        args.putString(PROJECT_NAME, projectName);\n        args.putString(DEFAULT_VALUE, defaultValue);\n        TestDetectionEditTabFragment fragment = new TestDetectionEditTabFragment();\n        fragment.setArguments(args);\n        return fragment;\n    &#125;\n</code></pre>\n<p>我们看到在静态方法中往 <code>Bundle</code>  中塞入了很多的数据，这些数据在先前 <code>startActivityForResult</code>  的时候就是作为引用 <code>context</code>  包含在 <code>binder</code>  中。<br />\n找到 <code>Bundle</code>  数据获取完的地方，对 <code>Bundle</code>  实施 <code>clear</code>  方法。一般是 <code>onViewCreated</code>  方法中，我这里是自己定义的方法。</p>\n<pre><code class=\"language-Java\">@Override\n    protected void iData(View view) &#123;\n        Bundle arguments = getArguments();\n        if (arguments != null) &#123;\n            models = arguments.getParcelableArrayList(MODELS);\n            recordId = arguments.getString(RECORD_ID);\n            functionIdentification = arguments.getString(FUNCTION_IDENTIFICATION);\n            type = arguments.getString(TYPE);\n            projectName = arguments.getString(PROJECT_NAME);\n            defaultValue = arguments.getString(DEFAULT_VALUE);\n            setAdapter(models);\n            arguments.clear();\n        &#125;\n    &#125;\n</code></pre>\n<p><img data-src=\"https://image.log1992.com/blog/typecho/20220121051734.png\" alt=\"\" /></p>\n<ol start=\"4\">\n<li>改完后发现影响了其他功能<br />\n<img data-src=\"https://image.log1992.com/blog/typecho/20220121051925.png\" alt=\"\" /><br />\n原来项目中针对 <code>fragment</code>  专门处理了 <code>onActivityResult</code> ，导致重新进入的时候 <code>Bundle</code>  中的数据获取不到引起了其他的错误。<br />\n最后，直接在需要传值的地方，将数据传递给成员变量</li>\n</ol>\n<pre><code class=\"language-Java\">public static TestDetectionEditTabFragment newInstance(\n            List&lt;TestDetectionEditViewModel&gt; models,\n            String recordId,\n            String functionIdentification,\n            String type, String projectName, String defaultValue) &#123;\n        Bundle args = new Bundle();\n        args.putString(RECORD_ID, recordId);\n        args.putString(FUNCTION_IDENTIFICATION, functionIdentification);\n        args.putString(TYPE, type);\n        args.putString(PROJECT_NAME, projectName);\n        args.putString(DEFAULT_VALUE, defaultValue);\n        TestDetectionEditTabFragment fragment = new TestDetectionEditTabFragment();\n        fragment.setArguments(args);\n        fragment.setModels(models);\n        return fragment;\n    &#125;\n</code></pre>\n<p>通过 <code>set</code>  方法直接赋值</p>\n<pre><code class=\"language-Java\">public void setModels(List&lt;TestDetectionEditViewModel&gt; models)&#123;\n        this.models = models;\n    &#125;\n</code></pre>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<blockquote>\n<p>处理 <code>TransactionTooLargeException</code>  的根本还是要针对数据传输做优化，要么使用类似 <code>EventBus</code>  的方法，要么使用成员变量直接赋值，避开通过 <code>Bundle</code>  传值这个坑。</p>\n</blockquote>\n",
            "tags": [
                "Android",
                "Android studio"
            ]
        },
        {
            "id": "https://log992.cn/develop/APP%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95%E4%B9%8BCharles/",
            "url": "https://log992.cn/develop/APP%E5%BC%B1%E7%BD%91%E6%B5%8B%E8%AF%95%E4%B9%8BCharles/",
            "title": "APP弱网测试之Charles",
            "date_published": "2022-03-17T02:26:55.000Z",
            "content_html": "<blockquote>\n<p>在 APP 开发过程中，很多问题是在网络问题出现的时候暴露出来的，所以在上线前，很有必要进行弱网测试。</p>\n</blockquote>\n<h3 id=\"工具charles\"><a class=\"anchor\" href=\"#工具charles\">#</a> 工具：Charles</h3>\n<ol>\n<li>\n<p>手机或模拟器设置代理<br />\n<img data-src=\"https://image.log1992.com/2020/07/964315253.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>Charles 开启代理功能<br />\n<img data-src=\"https://image.log1992.com/2020/07/657379769.png\" alt=\"\" /><br />\n勾选上 macOS 代理</p>\n</li>\n<li>\n<p>进入【代理】- 【节流阀设置】 也叫 Throttle Setting<br />\n<img data-src=\"https://image.log1992.com/2020/07/2662076335.png\" alt=\"\" /></p>\n<p><img data-src=\"https://image.log1992.com/2020/07/1005585404.png\" alt=\"\" /><br />\n①勾选启用节流<br />\n②可以选择针对特定的 host 进行节流<br />\n③增加预设，这里我增加了一个弱网预设项，上传 30，下\t\t行 15（这里我写反了）<br />\n④最后确定保存就好了</p>\n</li>\n<li>\n<p>最后开始调试 APP 吧</p>\n</li>\n<li>\n<p>后面我们可以直接通过开关启用关闭节流功能<br />\n<img data-src=\"https://image.log1992.com/2020/07/4137416846.png\" alt=\"\" /></p>\n</li>\n</ol>\n",
            "tags": [
                "开发",
                "Charles",
                "弱网"
            ]
        }
    ]
}